{"version":3,"names":["ldOptionInternalShadowCss","LdOptionInternal","async","this","optionRef","focus","handleClick","disabled","preventDeselection","selected","mode","hasFocus","hasHover","ldoptionselect","emit","handleKeyDown","ev","key","preventDefault","stopImmediatePropagation","componentWillLoad","value","requestAnimationFrame","el","innerText","render","h","Host","class","getClassNames","size","filtered","role","ref","undefined","onClick","bind","onFocus","onBlur","onMouseOver","onMouseOut","tabindex","part","checked","width","height","viewBox","fill","style","visibility","d","stroke","title"],"sources":["../src/liquid/components/ld-select/ld-option-internal/ld-option-internal.shadow.css?tag=ld-option-internal&encapsulation=shadow","../src/liquid/components/ld-select/ld-option-internal/ld-option-internal.tsx"],"sourcesContent":[":host(:not(:last-of-type)) {\n  .ld-option-internal {\n    border-bottom: solid var(--ld-option-border-col) var(--ld-sp-1);\n  }\n}\n\n.ld-option-internal {\n  /* layout */\n  --ld-option-padding-left-sm: 0.625rem;\n  --ld-option-padding-left-lg: 0.875rem;\n\n  /* colors */\n  --ld-option-bg-col: var(--ld-col-wht);\n  --ld-option-border-col: var(--ld-col-neutral-100);\n  --ld-option-disabled-text-col: var(--ld-col-neutral-100);\n  --ld-option-text-col: var(--ld-col-neutral-900);\n\n  /* themable colors */\n  --ld-option-thm-col: var(--ld-thm-primary);\n  --ld-option-thm-col-hover: var(--ld-thm-primary-hover);\n  --ld-option-thm-col-focus: var(--ld-thm-primary-focus);\n  --ld-option-thm-col-active: var(--ld-thm-primary-active);\n  --ld-option-thm-bg-col-hover: var(--ld-thm-primary-highlight);\n  --ld-option-thm-bg-col-focus: var(--ld-thm-primary-highlight);\n  --ld-option-thm-bg-col-active: var(--ld-thm-primary-highlight);\n\n  outline: none;\n  display: flex;\n  position: relative;\n  color: var(--ld-option-text-col);\n  background-color: var(--ld-option-bg-col);\n  padding: var(--ld-sp-8) var(--ld-sp-12);\n  font: var(--ld-typo-label-m);\n  min-height: 2.5rem;\n  white-space: nowrap;\n  user-select: none;\n  touch-action: manipulation;\n  border: 0;\n  -webkit-touch-callout: none;\n  box-sizing: border-box;\n\n  &--sm {\n    padding-left: var(--ld-option-padding-left-sm);\n  }\n\n  &--lg {\n    padding-left: var(--ld-option-padding-left-lg);\n  }\n\n  &--filtered {\n    display: none;\n  }\n\n  *,\n  *::before,\n  *::after {\n    box-sizing: inherit;\n  }\n\n  [data-popper-placement*='bottom'] & {\n    &:last-of-type {\n      border-bottom-left-radius: var(--ld-br-m);\n      border-bottom-right-radius: var(--ld-br-m);\n    }\n  }\n  [data-popper-placement*='top'] & {\n    &:first-of-type {\n      border-top-left-radius: var(--ld-br-m);\n      border-top-right-radius: var(--ld-br-m);\n    }\n  }\n\n  &:not([aria-disabled='true']) {\n    cursor: pointer;\n  }\n\n  &[aria-disabled='true'] {\n    color: var(--ld-option-disabled-text-col);\n  }\n\n  /* Pseudo element for focus outline */\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    border-radius: var(--ld-br-m);\n    pointer-events: none;\n  }\n\n  &:where(:focus),\n  &:where(:focus:focus-visible) {\n    &::before {\n      box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-option-thm-col);\n    }\n  }\n\n  &:where(:focus:not(:focus-visible)) {\n    &::before {\n      box-shadow: none;\n    }\n  }\n\n  &:where(:not(.ld-option-internal--disabled, [aria-disabled='true'])) {\n    :where(.ld-option-internal__check) {\n      color: var(--ld-option-thm-col);\n    }\n\n    &:where(:focus),\n    &:where(:focus:focus-visible) {\n      background-color: var(--ld-option-thm-bg-col-focus);\n\n      :where(.ld-option-internal__check) {\n        color: var(--ld-option-thm-col-focus);\n      }\n    }\n\n    &:where(:focus:not(:focus-visible)) {\n      background-color: var(--ld-option-bg-col);\n\n      :where(.ld-option-internal__check) {\n        color: var(--ld-option-thm-col);\n      }\n    }\n\n    @media (hover: hover) {\n      &:where(:hover) {\n        background-color: var(--ld-option-thm-bg-col-hover);\n\n        :where(.ld-option-internal__check) {\n          color: var(--ld-option-thm-col-hover);\n        }\n      }\n    }\n\n    &:where(:active),\n    &:where(:active:focus-visible) {\n      background-color: var(--ld-option-thm-bg-col-active);\n\n      :where(.ld-option-internal__check) {\n        color: var(--ld-option-thm-col-active);\n      }\n    }\n  }\n}\n\n.ld-option-internal__checkbox-wrapper {\n  display: inline-flex;\n  flex-shrink: 0;\n}\n\n.ld-option-internal__check,\n.ld-option-internal__checkbox {\n  align-self: center;\n  flex-shrink: 0;\n  transform: translateX(calc(-1 * var(--ld-sp-2)));\n}\n\n.ld-option-internal__check {\n  margin-right: var(--ld-sp-4);\n}\n\n.ld-option-internal__checkbox {\n  margin-left: var(--ld-sp-2);\n  margin-right: var(--ld-sp-6);\n}\n\n.ld-option-internal__label {\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n","import {\n  Component,\n  h,\n  Host,\n  Prop,\n  Element,\n  Event,\n  EventEmitter,\n  Listen,\n  State,\n  Method,\n} from '@stencil/core'\nimport { getClassNames } from '../../../utils/getClassNames'\n\n/** @internal **/\n@Component({\n  tag: 'ld-option-internal',\n  styleUrl: 'ld-option-internal.shadow.css',\n  shadow: true,\n})\nexport class LdOptionInternal {\n  @Element() el: HTMLElement\n\n  private optionRef: HTMLElement\n\n  /**\n   * The content of this attribute represents the value to be submitted with the form,\n   * should this option be selected. If this attribute is omitted, the value is taken\n   * from the text content of the option element.\n   */\n  @Prop({ mutable: true, reflect: true }) value: string\n\n  /**\n   * If present, this boolean attribute indicates that the option is selected.\n   */\n  @Prop({ mutable: true, reflect: true }) selected? = false\n\n  /**\n   * Disables the option.\n   */\n  @Prop() disabled? = false\n\n  /**\n   * Prevents deselection of a selected options when the selected option\n   * is clicked in single select mode.\n   */\n  @Prop() preventDeselection?: boolean\n\n  /**\n   * Display mode.\n   */\n  @Prop() mode?: 'checkbox' | undefined\n\n  /** Size of the select trigger button for applying according paddings. */\n  @Prop() size?: 'sm' | 'lg'\n\n  /** Set to true on filtering via select input. */\n  @Prop() filtered? = false\n\n  /**\n   * Sets focus internally.\n   */\n  @Method()\n  async focusOption() {\n    this.optionRef.focus()\n  }\n\n  /**\n   * @internal\n   * Emitted on either selection or de-selection of the option.\n   */\n  @Event() ldoptionselect: EventEmitter<boolean>\n\n  @State() title: string\n\n  @State() hasFocus: boolean\n  @State() hasHover: boolean\n\n  private handleClick() {\n    if (this.disabled) return\n\n    if (\n      !this.preventDeselection ||\n      !this.selected ||\n      this.mode === 'checkbox'\n    ) {\n      this.selected = !this.selected\n    }\n\n    if (this.mode !== 'checkbox') {\n      this.hasFocus = false\n      this.hasHover = false\n    }\n\n    this.ldoptionselect.emit(this.selected)\n  }\n\n  @Listen('keydown', { passive: false })\n  handleKeyDown(ev: KeyboardEvent) {\n    if (ev.key === ' ' || ev.key === 'Enter') {\n      ev.preventDefault()\n      ev.stopImmediatePropagation()\n      this.handleClick()\n    }\n\n    if (ev.key === 'Escape') {\n      this.hasFocus = false\n      this.hasHover = false\n    }\n  }\n\n  componentWillLoad() {\n    if (typeof this.value === 'undefined') {\n      requestAnimationFrame(() => {\n        this.value = this.el.innerText\n      })\n    }\n  }\n\n  render() {\n    return (\n      <Host\n        class={getClassNames([\n          this.disabled && 'ld-option-internal--disabled',\n          this.hasFocus && 'ld-option-internal--focus-within',\n          this.hasHover && 'ld-option-internal--hover-within',\n        ])}\n      >\n        <div\n          class={getClassNames([\n            'ld-option-internal',\n            this.size && `ld-option-internal--${this.size}`,\n            this.filtered && 'ld-option-internal--filtered',\n          ])}\n          role=\"option\"\n          ref={(el) => (this.optionRef = el as HTMLElement)}\n          aria-selected={this.selected ? 'true' : undefined}\n          aria-disabled={this.disabled ? 'true' : undefined}\n          onClick={this.handleClick.bind(this)}\n          onFocus={() => (this.hasFocus = true)}\n          onBlur={() => (this.hasFocus = false)}\n          onMouseOver={() => (this.hasHover = true)}\n          onMouseOut={() => (this.hasHover = false)}\n          tabindex=\"-1\"\n          part=\"option focusable\"\n        >\n          {this.mode === 'checkbox' ? (\n            <div\n              class=\"ld-option-internal__checkbox-wrapper\"\n              role=\"presentation\"\n              part=\"checkbox-wrapper\"\n            >\n              <ld-checkbox\n                class=\"ld-option-internal__checkbox\"\n                checked={this.selected}\n                disabled={this.disabled}\n                part=\"checkbox\"\n              ></ld-checkbox>\n            </div>\n          ) : (\n            <svg\n              role={'presentation'}\n              class=\"ld-option-internal__check\"\n              width=\"20\"\n              height=\"20\"\n              viewBox=\"0 0 20 20\"\n              fill=\"none\"\n              part=\"check\"\n            >\n              <path\n                style={{ visibility: this.selected ? 'inherit' : 'hidden' }}\n                d=\"M15 7L8.40795 13L5 9.63964\"\n                stroke=\"currentColor\"\n                stroke-width=\"3\"\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n              />\n            </svg>\n          )}\n\n          <span\n            class=\"ld-option-internal__label\"\n            title={this.title}\n            part=\"label\"\n          >\n            <slot></slot>\n          </span>\n        </div>\n      </Host>\n    )\n  }\n}\n"],"mappings":"oGAAA,MAAMA,EAA4B,opJ,MCoBrBC,EAAgB,M,2GAeyB,M,cAKhC,M,wFAiBA,M,qEAMpBC,oBACEC,KAAKC,UAAUC,O,CAcTC,cACN,GAAIH,KAAKI,SAAU,OAEnB,IACGJ,KAAKK,qBACLL,KAAKM,UACNN,KAAKO,OAAS,WACd,CACAP,KAAKM,UAAYN,KAAKM,Q,CAGxB,GAAIN,KAAKO,OAAS,WAAY,CAC5BP,KAAKQ,SAAW,MAChBR,KAAKS,SAAW,K,CAGlBT,KAAKU,eAAeC,KAAKX,KAAKM,S,CAIhCM,cAAcC,GACZ,GAAIA,EAAGC,MAAQ,KAAOD,EAAGC,MAAQ,QAAS,CACxCD,EAAGE,iBACHF,EAAGG,2BACHhB,KAAKG,a,CAGP,GAAIU,EAAGC,MAAQ,SAAU,CACvBd,KAAKQ,SAAW,MAChBR,KAAKS,SAAW,K,EAIpBQ,oBACE,UAAWjB,KAAKkB,QAAU,YAAa,CACrCC,uBAAsB,KACpBnB,KAAKkB,MAAQlB,KAAKoB,GAAGC,SAAS,G,EAKpCC,SACE,OACEC,EAACC,EAAI,CACHC,MAAOC,EAAc,CACnB1B,KAAKI,UAAY,+BACjBJ,KAAKQ,UAAY,mCACjBR,KAAKS,UAAY,sCAGnBc,EAAA,OACEE,MAAOC,EAAc,CACnB,qBACA1B,KAAK2B,MAAQ,uBAAuB3B,KAAK2B,OACzC3B,KAAK4B,UAAY,iCAEnBC,KAAK,SACLC,IAAMV,GAAQpB,KAAKC,UAAYmB,EAAkB,gBAClCpB,KAAKM,SAAW,OAASyB,UAAS,gBAClC/B,KAAKI,SAAW,OAAS2B,UACxCC,QAAShC,KAAKG,YAAY8B,KAAKjC,MAC/BkC,QAAS,IAAOlC,KAAKQ,SAAW,KAChC2B,OAAQ,IAAOnC,KAAKQ,SAAW,MAC/B4B,YAAa,IAAOpC,KAAKS,SAAW,KACpC4B,WAAY,IAAOrC,KAAKS,SAAW,MACnC6B,SAAS,KACTC,KAAK,oBAEJvC,KAAKO,OAAS,WACbgB,EAAA,OACEE,MAAM,uCACNI,KAAK,eACLU,KAAK,oBAELhB,EAAA,eACEE,MAAM,+BACNe,QAASxC,KAAKM,SACdF,SAAUJ,KAAKI,SACfmC,KAAK,cAIThB,EAAA,OACEM,KAAM,eACNJ,MAAM,4BACNgB,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLL,KAAK,SAELhB,EAAA,QACEsB,MAAO,CAAEC,WAAY9C,KAAKM,SAAW,UAAY,UACjDyC,EAAE,6BACFC,OAAO,eAAc,eACR,IAAG,iBACD,QAAO,kBACN,WAKtBzB,EAAA,QACEE,MAAM,4BACNwB,MAAOjD,KAAKiD,MACZV,KAAK,SAELhB,EAAA,e"}