name: CI/CD
on: [push, pull_request]

jobs:
  test:
    name: Test with Node v${{ matrix.node }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [15]

    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Setup Node v${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build
        run: npm run build

      - name: Lint source files
        run: npm run lint

      - name: Run unit tests
        run: npm run test:unit

      # - name: Run e2e tests
      #   run: npm run test:e2e

      - name: Build docs
        run: npm run build:docs
        env:
          MODE: gh_pages

      #- name: Run a11y tests
      #  run: npm run test:a11y

      - name: Comment on test coverage
        if: github.event_name == 'pull_request'
        uses: romeovs/lcov-reporter-action@v0.2.21
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          lcov-file: ./coverage/lcov.info

      - name: Archive dist artifacts
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/rc'
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
          retention-days: 1

      - name: Archive dist_docs artifacts
        if: github.ref == 'refs/heads/develop'
        uses: actions/upload-artifact@v2
        with:
          name: dist_docs
          path: dist_docs
          retention-days: 1

      - name: Coveralls
        if: github.ref == 'refs/heads/develop'
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  document:
    if: github.ref == 'refs/heads/develop'
    name: Deploy dist_docs to GitHub pages
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v2

      - name: Download dist_docs artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist_docs
          path: dist_docs

      - name: Deploy docs
        uses: JamesIves/github-pages-deploy-action@4.1.4
        with:
          branch: gh-pages
          folder: dist_docs

  release:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/rc'
    name: npm publish / GitHub release
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 15
          registry-url: https://registry.npmjs.org/

      - name: Install
        run: yarn config delete proxy && yarn config delete https-proxy && yarn install --frozen-lockfile --network-timeout 100000
        env:
          CI: true

      - name: Download dist artifacts
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: Semantic Release
        if: success()
        run: npx semantic-release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
