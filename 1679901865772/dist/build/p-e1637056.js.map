{"version":3,"names":["missingAssetPathWarningDisplayed","getAssetPath","path","metaLdAssetPath","_a","document","head","querySelector","dataset","ldAssetPath","windowLdAssetPath","window","__LD_ASSET_PATH__","cdnAssetPath","version","assetBasePath","startsWith","console","warn","assetPath","substring","endsWith","assetCache","requestCache","async","fetchPattern","patternName","fetchAsset","fetchIcon","iconName","fetch","then","resp","text","catch","err","error","content"],"sources":["../src/liquid/utils/assetPath.ts","../src/liquid/utils/fetchAsset.ts"],"sourcesContent":["import { Build } from '@stencil/core'\nimport { version } from '../../../package.json'\n\nlet missingAssetPathWarningDisplayed = false\n\n/**\n * Reads components asset path config from meta tag or global variable.\n * This is a workaround until the following issues are resolved:\n * https://github.com/ionic-team/stencil/issues/3470\n * https://github.com/ionic-team/stencil-ds-output-targets/issues/186\n */\nexport const getAssetPath = (path: string) => {\n  // Get asset path from meta tag if available\n  const metaLdAssetPath = document.head.querySelector<HTMLMetaElement>(\n    'meta[data-ld-asset-path]'\n  )?.dataset.ldAssetPath\n  // Get asset path from window if available\n  const windowLdAssetPath = window.__LD_ASSET_PATH__\n  // Uses CDN as fallback if no asset path is set\n  const cdnAssetPath = `https://cdn.jsdelivr.net/npm/@emdgroup-liquid/liquid${\n    version ? '@' + version : ''\n  }/dist/liquid/`\n\n  const assetBasePath = Build.isTesting\n    ? '/dist/liquid'\n    : metaLdAssetPath || windowLdAssetPath || cdnAssetPath || '/'\n\n  // Display warning if assets are fetched from CDN. This is only displayed once.\n  if (\n    assetBasePath.startsWith('https://cdn.jsdelivr.net/npm/') &&\n    !missingAssetPathWarningDisplayed\n  ) {\n    missingAssetPathWarningDisplayed = true\n    console.warn(\n      `Fetching Liquid Oxygen assets from jsDelivr CDN.\\n\\nWe recommend bundling Liquid Oxygen assets with your application and setting the asset path accordingly.\\n\\nFor more information see the documentation:\\nhttps://liquid.merck.design/liquid/guides/component-assets/`\n    )\n  }\n\n  let assetPath = path\n\n  if (path.startsWith('./')) {\n    assetPath = path.substring(2)\n  }\n\n  if (!assetBasePath.endsWith('/')) {\n    assetPath = '/' + assetPath\n  }\n\n  return assetBasePath + assetPath\n}\n","import { getAssetPath } from './assetPath'\n\nconst assetCache = {}\nconst requestCache = {}\n\nexport async function fetchPattern(patternName: string): Promise<string> {\n  return await fetchAsset(`${patternName}-cell.svg`)\n}\n\nexport async function fetchIcon(iconName: string): Promise<string> {\n  return await fetchAsset(`${iconName}.svg`)\n}\n\nexport async function fetchAsset(path: string): Promise<string> {\n  if (assetCache[path]) {\n    return assetCache[path]\n  }\n\n  if (!requestCache[path]) {\n    requestCache[path] = fetch(`${getAssetPath('./assets')}/${path}`)\n      .then((resp) => resp.text())\n      .catch((err) => {\n        console.error(`\"${path}\" could not be fetched`, err)\n        return ''\n      })\n  }\n\n  const content = await requestCache[path]\n  assetCache[path] = content\n\n  return content\n}\n"],"mappings":"iBAGA,IAAIA,EAAmC,MAQhC,MAAMC,EAAgBC,I,MAE3B,MAAMC,GAAkBC,EAAAC,SAASC,KAAKC,cACpC,+BACD,MAAAH,SAAA,SAAAA,EAAEI,QAAQC,YAEX,MAAMC,EAAoBC,OAAOC,kBAEjC,MAAMC,EAAe,uDACT,IAAMC,iBAGlB,MAAMC,EAEFZ,GAAmBO,GAAqBG,GAAgB,IAG5D,GACEE,EAAcC,WAAW,mCACxBhB,EACD,CACAA,EAAmC,KACnCiB,QAAQC,KACN,2Q,CAIJ,IAAIC,EAAYjB,EAEhB,GAAIA,EAAKc,WAAW,MAAO,CACzBG,EAAYjB,EAAKkB,UAAU,E,CAG7B,IAAKL,EAAcM,SAAS,KAAM,CAChCF,EAAY,IAAMA,C,CAGpB,OAAOJ,EAAgBI,CAAS,EC9ClC,MAAMG,EAAa,GACnB,MAAMC,EAAe,GAEdC,eAAeC,EAAaC,GACjC,aAAaC,EAAW,GAAGD,aAC7B,CAEOF,eAAeI,EAAUC,GAC9B,aAAaF,EAAW,GAAGE,QAC7B,CAEOL,eAAeG,EAAWzB,GAC/B,GAAIoB,EAAWpB,GAAO,CACpB,OAAOoB,EAAWpB,E,CAGpB,IAAKqB,EAAarB,GAAO,CACvBqB,EAAarB,GAAQ4B,MAAM,GAAG7B,EAAa,eAAeC,KACvD6B,MAAMC,GAASA,EAAKC,SACpBC,OAAOC,IACNlB,QAAQmB,MAAM,IAAIlC,0BAA8BiC,GAChD,MAAO,EAAE,G,CAIf,MAAME,QAAgBd,EAAarB,GACnCoB,EAAWpB,GAAQmC,EAEnB,OAAOA,CACT,Q"}