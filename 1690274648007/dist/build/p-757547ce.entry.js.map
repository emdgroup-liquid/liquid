{"version":3,"names":["ldOptionShadowCss","LdOption","componentWillLoad","this","selected","el","setAttribute","render","h","Host","class","ldSelectCss","LdSelect","isObserverEnabled","isDisabled","disabled","isAriaDisabled","ariaDisabled","updateTriggerMoreIndicator","refresh","multiple","maxRows","hasMore","requestAnimationFrame","selectionListRef","selectionListItems","Array","from","querySelectorAll","_a","querySelector","remove","forEach","classList","isOverflowing","moreItem","document","createElement","add","prepend","maxOffset","overflowingTotal","overflowing","offsetTop","hideLastVisibleIfMoreIndicatorOverflowing","innerText","notOverflowing","lastNotOverflowing","slice","isLdOption","includes","tagName","updatePopperWidth","listboxRef","style","setProperty","selectRef","getBoundingClientRect","width","updatePopperShadowHeight","ldPopper","updateShadowHeight","triggerRef","height","updatePopperTheme","themeEl","closest","setTimeout","theme","toString","split","find","cl","startsWith","substring","updatePopper","popper","initPopper","position","customTetherOptions","tetherOptions","JSON","parse","Object","assign","classPrefix","element","target","attachment","targetAttachment","offset","mode","constraints","to","pin","Tether","initPopperObserver","initOptions","initialized","children","internalOptionsContainerRef","length","TypeError","selectedChildren","filter","child","internalOptionsHTML","ldOption","classStr","size","preventDeselection","hidden","value","innerHTML","replaceAll","map","text","typeAheadHandler","options","updateSelectedHiddenInputs","selectedValues","inputs","hiddenInput","index","indexOf","splice","appendHiddenInput","name","type","undefined","appendChild","handleSlotChange","mutationsList","some","record","oldValues","newValues","emitEventsAndUpdateHidden","handlePopperChange","contains","mutation","oldValue","toFocus","hasAttribute","shadowRoot","getFilterInput","focus","initSlotChangeObserver","slotChangeObserver","MutationObserver","observe","subtree","childList","attributes","popperObserver","attributeFilter","attributeOldValue","togglePopper","expanded","enable","disable","focusInner","clearSelection","option","handleHome","ev","preventDefault","handleEnd","activeElement","focusOption","selectAndFocus","shiftKey","dispatchEvent","KeyboardEvent","key","handleFilterChange","query","detail","trim","toLowerCase","allFiltered","filterMatchesOption","filteredOptions","optionTextLower","textContent","filtered","Boolean","allOptionsFiltered","handleFilterCreate","ldoptioncreate","emit","resetFilter","canCreate","creatable","filterInput","handleFocusEvent","relatedTarget","stopImmediatePropagation","handleTriggerClick","handleClearClick","handleClearSingleClick","optionValue","selection","focusVisible","newSelection","oldSelection","join","renderHiddenInput","InputEvent","bubbles","composed","ldchange","ldinput","scrollHeight","clientHeight","updateHiddenInputs","hiddenInputs","outerForm","form","handleWindowResize","handleSelect","handleKeyDown","filterHasFocus","btnClearRef","metaKey","nextLdOption","current","nextElementSibling","prevLdOption","previousElementSibling","typeAhead","handleClickOutside","composedPath","at","isTrusted","handleTouchOutside","customIcon","hasCustomIcon","registerAutofocus","autofocus","componentDidLoad","TypeAheadHandler","componentDidUpdate","disconnectedCallback","disconnect","destroy","clearTimeout","detached","inline","ghost","invalid","triggerCl","triggerIconCl","triggerText","placeholder","getClassNames","part","onBlur","onFocusout","zIndex","ref","role","tabindex","ldTabindex","onClick","maxHeight","order","title","call","fill","viewBox","stroke","d","_b","createButtonLabel","createInputLabel","filterPlaceholder","onLdselectfilterchange","onLdselectfiltercreate","popperClass","ldSelectPopperShadowCss","LdSelectPopper","handleFilterInput","filterInputValue","ldselectfilterchange","handleCreate","ldselectfiltercreate","updateCanCreate","updatePinnedState","isPinned","newValue","updateFilter","newExpanded","shadowHeight","display","onInput"],"sources":["../src/liquid/components/ld-select/ld-option/ld-option.shadow.css?tag=ld-option&encapsulation=shadow","../src/liquid/components/ld-select/ld-option/ld-option.tsx","../src/liquid/components/ld-select/ld-select.css?tag=ld-select&encapsulation=shadow","../src/liquid/components/ld-select/ld-select.tsx","../src/liquid/components/ld-select/ld-select-popper/ld-select-popper.shadow.css?tag=ld-select-popper&encapsulation=shadow","../src/liquid/components/ld-select/ld-select-popper/ld-select-popper.tsx"],"sourcesContent":[null,"import { Component, h, Host, Prop, Element } from '@stencil/core'\n\n/**\n * @virtualProp ref - reference to component\n * @virtualProp {string | number} key - for tracking the node's identity when working with lists\n */\n@Component({\n  tag: 'ld-option',\n  styleUrl: 'ld-option.shadow.css',\n  shadow: true,\n})\nexport class LdOption {\n  @Element() el: HTMLElement\n\n  /**\n   * The content of this attribute represents the value to be submitted with the form,\n   * should this option be selected. If this attribute is omitted, the value is taken\n   * from the text content of the option element.\n   */\n  @Prop() value?: string\n\n  /** If present, this boolean attribute indicates that the option is selected. */\n  @Prop() selected?: boolean\n\n  /** Disables the option. */\n  @Prop() disabled?: boolean\n\n  /**\n   * @internal\n   * Set to true on filtering via select input.\n   */\n  @Prop() filtered? = false\n\n  componentWillLoad() {\n    // Setting selected via prop directly triggers the mutation observer to fire twice on attribute chage.\n    // This is indeed only true for the selected attribute. The disabled attribute works fine when assigned directly.\n    if (this.selected) {\n      this.el.setAttribute('selected', '')\n    }\n  }\n\n  render() {\n    return (\n      <Host class=\"ld-option\">\n        <slot></slot>\n      </Host>\n    )\n  }\n}\n",":host {\n  display: inline-flex;\n\n  .ld-select {\n    flex-grow: 1;\n    max-width: 100%;\n  }\n}\n\n:host,\n.ld-select {\n  /* layout */\n  --ld-select-min-width: 12.8125rem;\n  --ld-select-min-height-sm: 2rem;\n  --ld-select-min-height-md: 2.5rem;\n  --ld-select-min-height-lg: 3.125rem;\n  --ld-select-padding-x-sm: 0.625rem;\n  --ld-select-padding-x-md: 0.75rem;\n  --ld-select-padding-x-lg: 0.875rem;\n  --ld-select-padding-y-sm: 0.25rem;\n  --ld-select-padding-y-md: 0.5rem;\n  --ld-select-padding-y-lg: 0.5rem;\n  --ld-select-padding-right-sm: calc(2.5rem + 0.625rem);\n  --ld-select-padding-right-md: calc(2.5rem + 0.75rem);\n  --ld-select-padding-right-lg: calc(2.5rem + 0.875rem);\n  --ld-select-icon-size-sm: 1rem;\n  --ld-select-icon-size-md: 1.25rem;\n  --ld-select-icon-size-lg: 1.5rem;\n  --ld-select-trigger-line-height: 1.25;\n\n  /* colors */\n  --ld-select-col: var(--ld-col-neutral-900);\n  --ld-select-col-disabled: var(--ld-col-neutral-100);\n  --ld-select-col-border: var(--ld-col-neutral-100);\n  --ld-select-col-border-hover: var(--ld-col-neutral-300);\n  --ld-select-bg-col: var(--ld-col-wht);\n  --ld-select-selection-col: var(--ld-col-wht);\n\n  /* themable colors */\n  --ld-select-invalid-col: var(--ld-thm-error);\n  --ld-select-invalid-icon-col-hover: var(--ld-thm-error-hover);\n  --ld-select-invalid-icon-col-focus: var(--ld-thm-error-focus);\n  --ld-select-invalid-icon-col-active: var(--ld-thm-error-active);\n  --ld-select-invalid-disabled-bg-col: var(--ld-thm-error-disabled);\n  --ld-select-thm-col: var(--ld-thm-primary);\n  --ld-select-thm-col-hover: var(--ld-thm-primary-hover);\n  --ld-select-thm-col-focus: var(--ld-thm-primary-focus);\n  --ld-select-thm-col-active: var(--ld-thm-primary-active);\n  --ld-select-ghost-trigger-bg-col-hover: var(--ld-thm-primary-alpha-lowest);\n  --ld-select-ghost-trigger-bg-col-focus: var(--ld-thm-primary-alpha-low);\n\n  /* reset */\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n  ul {\n    list-style: none;\n  }\n}\n\n.ld-select {\n  display: inline-flex;\n  position: relative;\n\n  select + .ld-icon,\n  ::slotted(ld-icon) {\n    width: var(--ld-select-icon-size-md);\n    height: var(--ld-select-icon-size-md);\n  }\n\n  ::slotted(ld-icon) {\n    display: contents !important;\n  }\n\n  select {\n    + .ld-icon,\n    + .ld-select__icon {\n      position: absolute;\n      right: var(--ld-select-padding-x-md);\n      top: 50%;\n      transform: translateY(-50%);\n    }\n\n    + .ld-icon {\n      width: var(--ld-select-icon-size-md);\n      height: var(--ld-select-icon-size-md);\n    }\n\n    &:where(:not[multiple]) {\n      padding-right: var(--ld-select-padding-right-md);\n    }\n  }\n\n  &.ld-select--sm {\n    select {\n      + .ld-icon,\n      + .ld-select__icon {\n        right: var(--ld-select-padding-x-sm);\n      }\n\n      + .ld-icon {\n        width: var(--ld-select-icon-size-sm);\n        height: var(--ld-select-icon-size-sm);\n      }\n\n      &:where(:not[multiple]) {\n        padding-right: var(--ld-select-padding-right-sm);\n      }\n    }\n  }\n  &.ld-select--lg {\n    select {\n      + .ld-icon,\n      + .ld-select__icon {\n        right: var(--ld-select-padding-x-lg);\n      }\n\n      + .ld-icon {\n        width: var(--ld-select-icon-size-lg);\n        height: var(--ld-select-icon-size-lg);\n      }\n\n      &:where(:not[multiple]) {\n        padding-right: var(--ld-select-padding-right-lg);\n      }\n    }\n  }\n}\n\n.ld-select--expanded {\n  .ld-tether-target-attached-bottom {\n    .ld-select__btn-trigger:not(.ld-select__btn-trigger--detached) {\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n  }\n}\n\n:where(.ld-select:not(.ld-select--inline, .ld-select--ghost)) {\n  min-width: var(--ld-select-min-width);\n}\n\n.ld-select__select,\n.ld-select__btn-trigger {\n  width: 100%;\n}\n\n.ld-select > select,\n.ld-select__btn-trigger {\n  /* outline: none; */\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  font: var(--ld-typo-body-m);\n  line-height: var(--ld-select-trigger-line-height);\n  border: 0;\n  padding: var(--ld-select-padding-y-md) var(--ld-select-padding-x-md);\n  border-radius: var(--ld-br-m);\n  height: 100%;\n  user-select: none;\n  touch-action: manipulation;\n  color: var(--ld-select-col);\n  background-color: var(--ld-select-bg-col);\n  text-align: left;\n  appearance: none;\n  -webkit-touch-callout: none;\n\n  &:where(select) {\n    width: 100%;\n\n    &[multiple] {\n      optgroup {\n        padding: var(--ld-sp-8) 0;\n        font-style: normal;\n      }\n\n      option {\n        padding: var(--ld-sp-6) var(--ld-sp-6);\n        margin: 0 calc(-1 * var(--ld-sp-6));\n        border-radius: var(--ld-br-m);\n\n        &:not(:last-of-type) {\n          margin-bottom: var(--ld-sp-2);\n        }\n      }\n    }\n  }\n\n  &:where(select:not(:disabled, [aria-disabled='true'])),\n  &:where(.ld-select__btn-trigger:not([aria-disabled='true'])) {\n    cursor: pointer;\n  }\n\n  &:where([aria-expanded='true']) {\n    z-index: 2;\n\n    &:not(:focus:focus-visible, .ld-select__btn-trigger--detached) {\n      box-shadow: none;\n    }\n  }\n\n  &:disabled,\n  &:disabled + .ld-select__icon,\n  &:disabled + .ld-icon,\n  &:where([aria-disabled='true']),\n  &:where([aria-disabled='true']) + .ld-select__icon,\n  &:where([aria-disabled='true']) + .ld-icon {\n    color: var(--ld-select-col-disabled);\n  }\n}\n\n.ld-select__btn-trigger {\n  overflow: hidden;\n}\n\n:where(.ld-select),\n:where(.ld-select) > select {\n  min-height: var(--ld-select-min-height-md);\n}\n\n:where(.ld-select--sm),\n:where(.ld-select--sm) > select {\n  min-height: var(--ld-select-min-height-sm);\n}\n\n:where(.ld-select--lg),\n:where(.ld-select--lg) > select {\n  min-height: var(--ld-select-min-height-lg);\n}\n\n.ld-select--sm > select,\n.ld-select--sm .ld-select__btn-trigger {\n  padding: var(--ld-select-padding-y-sm) var(--ld-select-padding-x-sm);\n}\n\n.ld-select--lg > select,\n.ld-select--lg .ld-select__btn-trigger {\n  padding: var(--ld-select-padding-y-lg) var(--ld-select-padding-x-lg);\n}\n\n.ld-select--ghost {\n  &:not(ld-select),\n  select,\n  .ld-select__btn-trigger {\n    background-color: transparent;\n  }\n\n  select,\n  .ld-select__btn-trigger {\n    &:not(:focus) {\n      box-shadow: none;\n    }\n  }\n}\n\n.ld-select:where(:not(.ld-select--ghost)) {\n  &:where(.ld-select--detached),\n  &:where(:not(.ld-select--detached, .ld-select--expanded)) {\n    :where(select),\n    :where(.ld-select__btn-trigger) {\n      box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-select-col-border);\n    }\n  }\n\n  &:where(:not(.ld-select--invalid)) {\n    select,\n    .ld-select__btn-trigger {\n      &:where(\n          .ld-select__btn-trigger--detached:not(\n              :disabled,\n              [aria-disabled='true']\n            )\n        ),\n      &:where(\n          :not(\n              :disabled,\n              [aria-disabled='true'],\n              .ld-select__btn-trigger--detached,\n              [aria-expanded='true']\n            )\n        ) {\n        @media (hover: hover) {\n          &:hover:not(:focus:focus-visible) {\n            box-shadow: inset 0 0 0 var(--ld-sp-2)\n              var(--ld-select-col-border-hover);\n          }\n        }\n      }\n    }\n  }\n}\n\n.ld-select--invalid > select,\n.ld-select--invalid .ld-select__btn-trigger--invalid {\n  &:where(:not(:disabled)) {\n    &:where(:focus:focus-visible) {\n      box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-select-invalid-col);\n    }\n  }\n\n  &:where(:not(:disabled, [aria-disabled='true'])) {\n    &:where(:not(:focus:focus-visible)) {\n      background-color: var(--ld-select-invalid-disabled-bg-col);\n      color: var(--ld-select-invalid-col);\n    }\n\n    &:where(:not(.ld-select__btn-trigger--ghost)) {\n      box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-select-invalid-col);\n    }\n\n    + .ld-icon,\n    + .ld-select__icon,\n    .ld-select__icon {\n      color: var(--ld-select-invalid-col);\n    }\n\n    @media (hover: hover) {\n      &:hover {\n        box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-select-invalid-col);\n\n        + .ld-icon,\n        + .ld-select__icon,\n        .ld-select__icon,\n        ::slotted(ld-icon) {\n          color: var(--ld-select-invalid-icon-col-hover);\n        }\n      }\n    }\n    &:where(:focus:focus-visible) {\n      + .ld-icon,\n      + .ld-select__icon,\n      .ld-select__icon,\n      ::slotted(ld-icon) {\n        color: var(--ld-select-invalid-icon-col-focus);\n      }\n    }\n    &:where(:active),\n    &:where(:active:focus-visible) {\n      + .ld-icon,\n      + .ld-select__icon,\n      .ld-select__icon,\n      ::slotted(ld-icon) {\n        color: var(--ld-select-invalid-icon-col-active);\n      }\n    }\n  }\n}\n\n.ld-select__btn-trigger-text-wrapper,\n.ld-select__selection-list {\n  flex-grow: 1;\n}\n\n.ld-select__btn-trigger-text-wrapper {\n  font: var(--ld-typo-label-m);\n  line-height: var(--ld-select-trigger-line-height);\n  padding: var(--ld-sp-6) var(--ld-sp-8) var(--ld-sp-6) 0;\n  height: calc(100% + var(--ld-sp-12));\n  margin: calc(-1 * var(--ld-sp-6)) 0;\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n}\n\n.ld-select--sm > select,\n.ld-select--sm .ld-select__btn-trigger-input,\n.ld-select--sm .ld-select__btn-trigger-text-wrapper {\n  font: var(--ld-typo-body-s);\n  line-height: var(--ld-select-trigger-line-height);\n}\n.ld-select--lg > select,\n.ld-select--lg .ld-select__btn-trigger-input,\n.ld-select--lg .ld-select__btn-trigger-text-wrapper {\n  font: var(--ld-typo-body-l);\n  line-height: var(--ld-select-trigger-line-height);\n}\n\n.ld-select > select,\n.ld-select__btn-trigger-text,\n.ld-select__selection-label-text {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.ld-select__selection-list-container {\n  display: flex;\n  flex-direction: column-reverse;\n  gap: var(--ld-sp-6);\n  margin-right: auto;\n}\n\n.ld-select__selection-list {\n  display: flex;\n  flex-wrap: wrap;\n  margin: calc(-1 * var(--ld-sp-1)) var(--ld-sp-4) calc(-1 * var(--ld-sp-4)) 0;\n  overflow: hidden;\n  padding: 0;\n}\n\n.ld-select__selection-list-item {\n  flex: 0 1;\n  margin-right: var(--ld-sp-4);\n  margin-bottom: var(--ld-sp-4);\n  width: 100%;\n}\n\n.ld-select__selection-list-item--overflowing {\n  display: none;\n}\n\n.ld-select__selection-list-more {\n  order: 2147483647; /* Highest possible */\n  display: inline-flex;\n  align-items: center;\n  font: var(--ld-typo-label-s);\n  font-weight: 700;\n  padding: var(--ld-sp-4) var(--ld-sp-6);\n  border-radius: var(--ld-br-m);\n  margin-right: var(--ld-sp-4);\n  margin-bottom: var(--ld-sp-4);\n}\n\n.ld-select__btn-clear-single,\n.ld-select__btn-clear {\n  /* outline: none; */\n  border: 0;\n  padding: 0;\n  border-radius: var(--ld-br-full);\n  user-select: none;\n  touch-action: manipulation;\n  background-color: transparent;\n  line-height: 0;\n  -webkit-touch-callout: none;\n\n  &:not(:disabled) {\n    cursor: pointer;\n  }\n}\n\n.ld-select__btn-clear {\n  margin-right: var(--ld-sp-6);\n  flex-shrink: 0;\n\n  &:disabled {\n    color: var(--ld-select-col-disabled);\n  }\n}\n\n.ld-select__btn-clear-single {\n  z-index: 1;\n  margin-left: var(--ld-sp-6);\n}\n\n.ld-select__selection-label {\n  position: relative;\n  width: 100%;\n  display: inline-flex;\n  align-items: center;\n  color: var(--ld-select-selection-col);\n  font: var(--ld-typo-label-s);\n  font-weight: 700;\n  padding: var(--ld-sp-4) var(--ld-sp-6);\n}\n\n.ld-select__selection-label-bg {\n  position: absolute;\n  inset: 0;\n  border-radius: var(--ld-br-m);\n\n  :where(.ld-select__btn-trigger[aria-disabled='true']) & {\n    background-color: var(--ld-select-col-disabled);\n  }\n}\n\n.ld-select__selection-label-text {\n  z-index: 1;\n}\n\n.ld-select__btn-clear-single-icon {\n  --ld-select-btn-clear-single-size: 0.75rem;\n  width: var(--ld-select-btn-clear-single-size);\n  height: var(--ld-select-btn-clear-single-size);\n}\n\n.ld-select__btn-clear-icon {\n  --ld-select-btn-clear-size: 1.25rem;\n  width: var(--ld-select-btn-clear-size);\n  height: var(--ld-select-btn-clear-size);\n}\n\n.ld-select__icon {\n  fill: none;\n  width: var(--ld-sp-16);\n  height: var(--ld-sp-16);\n}\n\n.ld-select select + .ld-icon,\n.ld-select__icon,\n.ld-select ::slotted(ld-icon) {\n  flex-shrink: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  pointer-events: none;\n\n  :where(select[aria-disabled='true']) &,\n  :where(select:disabled) &,\n  :where(.ld-select__btn-trigger[aria-disabled='true']) & {\n    color: var(--ld-select-col-disabled);\n  }\n\n  .ld-icon,\n  svg {\n    width: 100%;\n    height: 100%;\n  }\n}\n\n.ld-select__icon--rotated {\n  transform-origin: center;\n  transform: rotate(180deg);\n}\n\n.ld-select__slot-container {\n  display: none;\n}\n\n:where(\n    .ld-select:not(.ld-select--disabled, [aria-disabled], .ld-select--invalid)\n  ) {\n  .ld-select__btn-trigger {\n    &:where(:focus:focus-visible) {\n      box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-select-thm-col);\n    }\n  }\n\n  &.ld-select--ghost {\n    :where(select:not(:disabled)),\n    :where(.ld-select__btn-trigger) {\n      @media (hover: hover) {\n        &:hover:not(:focus) {\n          background-color: var(--ld-select-ghost-trigger-bg-col-hover);\n        }\n      }\n      &:active,\n      &:active:focus-visible {\n        background-color: var(--ld-select-ghost-trigger-bg-col-focus);\n      }\n    }\n  }\n\n  :where(select:not(:disabled)),\n  :where(.ld-select__btn-trigger) {\n    .ld-select__icon,\n    + .ld-icon,\n    + .ld-select__icon,\n    ::slotted(ld-icon) {\n      color: var(--ld-select-thm-col);\n    }\n\n    @media (hover: hover) {\n      &:where(:hover) {\n        .ld-select__icon,\n        + .ld-icon,\n        + .ld-select__icon,\n        ::slotted(ld-icon) {\n          color: var(--ld-select-thm-col-hover);\n        }\n      }\n    }\n    &:where(:focus:focus-visible) {\n      box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-select-thm-col);\n\n      .ld-select__icon,\n      + .ld-select__icon,\n      ::slotted(ld-icon) {\n        color: var(--ld-select-thm-col-focus);\n      }\n    }\n    &:where(:active),\n    &:where(:active:focus-visible) {\n      .ld-select__icon,\n      + .ld-icon,\n      + .ld-select__icon,\n      ::slotted(ld-icon) {\n        color: var(--ld-select-thm-col-active);\n      }\n    }\n  }\n}\n\n:where(.ld-select:not(.ld-select--disabled)):not(.ld-select--invalid) {\n  :where(select:not(:disabled)),\n  :where(.ld-select__btn-trigger) {\n    &:where(:focus:focus-visible) {\n      box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-select-thm-col);\n    }\n  }\n}\n\n:where(\n    .ld-select:not(\n        .ld-select--disabled,\n        [aria-disabled],\n        [aria-disabled='true']\n      )\n  ) {\n  .ld-select__selection-list-more {\n    color: var(--ld-select-thm-col);\n  }\n  .ld-select__selection-label-bg {\n    background-color: var(--ld-select-thm-col);\n  }\n\n  .ld-select__btn-clear-single {\n    &:where(:focus:focus-visible) + .ld-select__selection-label-bg {\n      background-color: var(--ld-select-thm-col-focus);\n    }\n\n    &:where(:active),\n    &:where(:active:focus-visible) {\n      + .ld-select__selection-label-bg {\n        background-color: var(--ld-select-thm-col-active);\n      }\n    }\n  }\n\n  .ld-select__btn-clear {\n    color: var(--ld-select-thm-col);\n\n    &:where(:focus:focus-visible) {\n      color: var(--ld-select-thm-col-focus);\n    }\n    @media (hover: hover) {\n      &:where(:hover) {\n        color: var(--ld-select-thm-col-hover);\n      }\n    }\n    &:where(:active),\n    &:where(:active:focus-visible) {\n      color: var(--ld-select-thm-col-active);\n    }\n  }\n}\n","import {\n  Component,\n  Element,\n  h,\n  Host,\n  Event,\n  Listen,\n  Prop,\n  State,\n  Watch,\n  EventEmitter,\n  Method,\n} from '@stencil/core'\nimport Tether from 'tether'\nimport { getClassNames } from '../../utils/getClassNames'\nimport { registerAutofocus } from '../../utils/focus'\nimport { closest } from '../../utils/closest'\nimport { TypeAheadHandler } from '../../utils/typeahead'\nimport { isAriaDisabled } from '../../utils/ariaDisabled'\n\ntype SelectOption = { value: string; text: string }\n\n/**\n * @slot - the default slot contains the select options\n * @slot icon - replaces caret with custom trigger button icon\n * @virtualProp ref - reference to component\n * @virtualProp {string | number} key - for tracking the node's identity when working with lists\n */\n@Component({\n  tag: 'ld-select',\n  styleUrl: 'ld-select.css',\n  shadow: true,\n})\nexport class LdSelect implements InnerFocusable {\n  @Element() el: HTMLLdSelectElement\n  private selectRef!: HTMLDivElement\n  private triggerRef!: HTMLDivElement\n  private selectionListRef!: HTMLUListElement\n  private internalOptionsContainerRef!: HTMLDivElement\n  private listboxRef!: HTMLLdSelectPopperElement\n  private btnClearRef: HTMLButtonElement\n  private popper: Tether\n  private slotChangeObserver: MutationObserver\n  private popperObserver: MutationObserver\n  private isObserverEnabled = true\n\n  /** Alternative disabled state that keeps element focusable */\n  @Prop() ariaDisabled: string\n\n  /**\n   * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n   * Only one form element in a document can have the autofocus attribute.\n   */\n  @Prop({ reflect: true }) autofocus: boolean\n\n  /**\n   * Creatable mode can be enabled when the filter prop is set to true.\n   * This mode allows the user to create new options using the filter input field.\n   */\n  @Prop() creatable?: boolean\n\n  /** The \"create\" input label (creatable mode). */\n  @Prop() createInputLabel? = 'Press Enter to create option'\n\n  /** The \"create\" button label (creatable mode). */\n  @Prop() createButtonLabel? = 'Create option'\n\n  /** Disabled state of the component. */\n  @Prop() disabled?: boolean\n\n  /** The form element to associate the select with (its form owner). */\n  @Prop() form?: string\n\n  /** Set this property to `true` in order to enable an input field for filtering options. */\n  @Prop() filter?: boolean\n\n  /** The filter input placeholder. */\n  @Prop() filterPlaceholder? = 'Filter options'\n\n  /** Set this property to `true` in order to mark the select visually as invalid. */\n  @Prop() invalid?: boolean\n\n  /** Tab index of the trigger button. */\n  @Prop() ldTabindex = 0\n\n  /** Constrains the height of the trigger button by replacing overflowing selection with a \"+X more\" indicator. */\n  @Prop({ mutable: true }) maxRows?: number\n\n  // prettier-ignore\n  /** Display mode. */\n  @Prop() mode?:\n    // default\n    | 'detached' // = default  + small gap between trigger button and popper\n    | 'inline' //   = detached + minumum trigger button width\n    | 'ghost' //    = inline   + transparent background and borders\n\n  /** Multiselect mode. */\n  @Prop() multiple?: boolean\n\n  /** Used to specify the name of the control. */\n  @Prop() name?: string\n\n  /** Used as trigger button label in multiselect mode and in single select mode if nothing is selected. */\n  @Prop() placeholder?: string\n\n  /** Attached as CSS class to the select popper element. */\n  @Prop() popperClass?: string\n\n  /** Prevents a state with no options selected after initial selection in single select mode. */\n  @Prop() preventDeselection?: boolean\n\n  /** A Boolean attribute indicating that an option with a non-empty string value must be selected. */\n  @Prop() required?: boolean\n\n  /** Currently selected option(s) (read only!) */\n  @Prop({ mutable: true }) selected?: SelectOption[] = []\n\n  /** Size of the select trigger button. */\n  @Prop() size?: 'sm' | 'lg'\n\n  /** Tether options object to be merged with the default options (optionally stringified). */\n  @Prop() tetherOptions?: Partial<Tether.ITetherOptions> | string\n\n  @State() allOptionsFiltered = false\n  @State() filterMatchesOption = false\n  @State() expanded = false\n  @State() hasCustomIcon = false\n  @State() hasMore = false\n  @State() initialized = false\n  @State() internalOptionsHTML: string\n  @State() renderHiddenInput = false\n  @State() theme: string\n  @State() typeAheadHandler: TypeAheadHandler<HTMLLdOptionInternalElement>\n\n  /**\n   * Emitted with an array of selected values\n   * when an alteration to the selection is committed.\n   */\n  @Event() ldchange: EventEmitter<string[]>\n\n  /**\n   * Emitted with an array of selected values\n   * when an alteration to the selection is committed.\n   */\n  @Event() ldinput: EventEmitter<string[]>\n\n  /**\n   * Emitted when an option is created in create mode\n   * with the filter input value.\n   */\n  @Event() ldoptioncreate: EventEmitter<string>\n\n  /** Sets focus on the trigger button. */\n  @Method()\n  async focusInner() {\n    if (!this.disabled) {\n      // Experimental feature that fixes a bug in Firefox only.\n      // See https://github.com/emdgroup-liquid/liquid/issues/486\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      this.triggerRef.focus({ focusVisible: true })\n    }\n  }\n\n  @Watch('selected')\n  emitEventsAndUpdateHidden(\n    newSelection: SelectOption[],\n    oldSelection: SelectOption[]\n  ) {\n    if (!this.initialized) return\n\n    const newValues = newSelection.map((option) => option.value)\n    const oldValues = oldSelection.map((option) => option.value)\n    if (newValues.join() === oldValues.join()) return\n\n    this.updateTriggerMoreIndicator(true)\n\n    if (this.renderHiddenInput) {\n      this.updateSelectedHiddenInputs(newSelection)\n    }\n\n    // Synchronize options with internal options.\n    this.isObserverEnabled = false\n    this.el.querySelectorAll('ld-option').forEach((ldOption) => {\n      ldOption.selected = newValues.some((value) => value === ldOption.value)\n      if (!ldOption.selected && ldOption.hidden) {\n        this.listboxRef\n          .querySelector(`ld-option-internal[value=\"${ldOption.value}\"]`)\n          .remove()\n        ldOption.remove()\n      }\n    })\n    this.isObserverEnabled = true\n\n    this.el.dispatchEvent(new InputEvent('change', { bubbles: true }))\n    this.el.dispatchEvent(\n      new InputEvent('input', { bubbles: true, composed: true })\n    )\n    this.ldchange.emit(newValues)\n    this.ldinput.emit(newValues)\n  }\n\n  private isDisabled = () => this.disabled || isAriaDisabled(this.ariaDisabled)\n\n  // This method must be a function declaration for testing purposes;\n  // otherwise Jest's mockImplementation won't work here.\n  private isOverflowing() {\n    /* istanbul ignore next */\n    return (\n      this.selectionListRef.scrollHeight >\n      this.selectionListRef.clientHeight + 2\n    )\n  }\n\n  private updateTriggerMoreIndicator = (refresh = false) => {\n    if (!this.multiple || !this.maxRows) return\n\n    if (refresh) this.hasMore = false\n\n    requestAnimationFrame(() => {\n      if (!this.selectionListRef) return\n\n      const selectionListItems = Array.from(\n        this.selectionListRef.querySelectorAll<HTMLLIElement>(\n          '.ld-select__selection-list-item'\n        )\n      )\n\n      if (!this.hasMore) {\n        // reset\n        this.selectionListRef\n          .querySelector('.ld-select__selection-list-more')\n          ?.remove()\n        selectionListItems.forEach((el) => {\n          el.classList.remove('ld-select__selection-list-item--overflowing')\n        })\n      }\n\n      // If overflowing, hide overflowing and show \"+X\" indicator\n      if (this.isOverflowing()) {\n        let moreItem\n        if (!this.hasMore) {\n          moreItem = document.createElement('li')\n          moreItem.classList.add('ld-select__selection-list-more')\n          this.selectionListRef.prepend(moreItem)\n        } else {\n          moreItem = this.selectionListRef.querySelector(\n            '.ld-select__selection-list-more'\n          )\n        }\n        this.hasMore = true\n\n        const maxOffset = this.maxRows * 1.75 * 16\n\n        let overflowingTotal = 0\n        selectionListItems.forEach((el) => {\n          const overflowing = overflowingTotal\n            ? true\n            : el.offsetTop >= maxOffset\n          el.classList[overflowing ? 'add' : 'remove'](\n            'ld-select__selection-list-item--overflowing'\n          )\n          if (overflowing) overflowingTotal++\n        })\n\n        const hideLastVisibleIfMoreIndicatorOverflowing = () => {\n          moreItem = this.selectionListRef.querySelector(\n            '.ld-select__selection-list-more'\n          )\n          moreItem.innerText = `+${overflowingTotal}`\n          if (moreItem.offsetTop < maxOffset) {\n            /* istanbul ignore next */\n            return\n          }\n\n          const notOverflowing = Array.from(\n            this.selectionListRef.querySelectorAll(\n              '.ld-select__selection-list-item:not(.ld-select__selection-list-item--overflowing)'\n            )\n          )\n          const [lastNotOverflowing] = notOverflowing.slice(-1)\n          if (lastNotOverflowing) {\n            lastNotOverflowing.classList.add(\n              'ld-select__selection-list-item--overflowing'\n            )\n            overflowingTotal++\n            moreItem.innerText = `+${overflowingTotal}`\n\n            requestAnimationFrame(() => {\n              hideLastVisibleIfMoreIndicatorOverflowing()\n            })\n          }\n        }\n        hideLastVisibleIfMoreIndicatorOverflowing()\n      }\n    })\n  }\n\n  private isLdOption = (\n    el: HTMLElement | Node | EventTarget\n  ): el is HTMLLdOptionElement | HTMLLdOptionInternalElement =>\n    ['LD-OPTION', 'LD-OPTION-INTERNAL'].includes((el as HTMLElement)?.tagName)\n\n  private updatePopperWidth = () => {\n    this.listboxRef.style.setProperty(\n      'width',\n      `${this.selectRef.getBoundingClientRect().width}px`\n    )\n  }\n\n  private updatePopperShadowHeight = () => {\n    const ldPopper = this.listboxRef\n    ldPopper.updateShadowHeight(\n      `calc(100% + ${this.triggerRef.getBoundingClientRect().height}px)`\n    )\n  }\n\n  private updatePopperTheme = () => {\n    const themeEl = this.el.closest('[class*=\"ld-theme-\"]')\n    if (!themeEl) return\n\n    setTimeout(() => {\n      // Array.from(themeEl.classList).find doesn't work in JSDom for some reason.\n      this.theme = themeEl.classList\n        .toString()\n        .split(' ')\n        .find((cl) => cl.startsWith('ld-theme-'))\n        ?.substring(9)\n    })\n  }\n\n  private updatePopper = () => {\n    if (!this.popper) this.initPopper()\n    this.popper.position()\n    this.updatePopperWidth()\n    this.updatePopperShadowHeight()\n    this.updatePopperTheme()\n  }\n\n  private initPopper = () => {\n    const customTetherOptions: Partial<Tether.ITetherOptions> =\n      typeof this.tetherOptions === 'string'\n        ? JSON.parse(this.tetherOptions)\n        : this.tetherOptions\n    const tetherOptions: Tether.ITetherOptions = {\n      classPrefix: 'ld-tether',\n      element: this.listboxRef,\n      target: this.selectRef,\n      attachment: 'top left',\n      targetAttachment: 'bottom left',\n      offset: this.mode ? '-4px 0' : '0 0',\n      constraints: [\n        {\n          to: 'window',\n          pin: true,\n        },\n      ],\n      ...customTetherOptions,\n    }\n\n    this.popper = new Tether(tetherOptions)\n\n    // Observe popper in order to set focus as soon as it becomes visible.\n    this.initPopperObserver()\n\n    this.listboxRef.classList.add('ld-select__popper--initialized')\n  }\n\n  private initOptions = () => {\n    const initialized = this.initialized\n    const children = initialized\n      ? this.internalOptionsContainerRef.querySelectorAll('ld-option-internal')\n      : this.el.querySelectorAll('ld-option')\n\n    if (!children.length) {\n      throw new TypeError(\n        'ld-select requires at least one ld-option element as a child, but found none.'\n      )\n    }\n\n    const selectedChildren = Array.from<\n      HTMLLdOptionInternalElement | HTMLLdOptionElement\n    >(children).filter((child) => {\n      return child.selected\n    })\n\n    if (selectedChildren.length > 1 && !this.multiple) {\n      throw new TypeError(\n        'Multiple selected options are not allowed, if multiple option is not set.'\n      )\n    }\n\n    if (!initialized) {\n      let internalOptionsHTML = ''\n      children.forEach((ldOption: HTMLLdOptionElement) => {\n        const classStr = ldOption.classList.toString()\n        internalOptionsHTML += `<ld-option-internal${\n          classStr ? ' class=\"' + classStr + '\"' : ''\n        }${this.multiple ? ' mode=\"checkbox\"' : ''}${\n          this.size ? ' size=\"' + this.size + '\"' : ''\n        }${this.preventDeselection ? ' prevent-deselection' : ''}${\n          ldOption.selected ? ' selected' : ''\n        }${ldOption.hidden ? ' hidden' : ''}${\n          ldOption.value ? ' value=\"' + ldOption.value + '\"' : ''\n        }${\n          ldOption.disabled ? ' disabled' : ''\n        }>${ldOption.innerHTML.replaceAll(\n          /<ld-icon (.|\\n|\\r)*slot=\"icon\"(.|\\n|\\r)*>(.|\\n|\\r)*<\\/ld-icon>/g,\n          ''\n        )}</ld-option-internal>`\n      })\n      this.internalOptionsHTML = internalOptionsHTML\n    }\n    this.selected = selectedChildren.map((child) => {\n      return {\n        value: child.value,\n        text: child.innerHTML,\n      }\n    })\n\n    if (this.listboxRef) {\n      this.typeAheadHandler.options =\n        this.listboxRef.querySelectorAll('ld-option-internal')\n    }\n    this.updateTriggerMoreIndicator(true)\n  }\n\n  private updateSelectedHiddenInputs = (selected: SelectOption[]) => {\n    const selectedValues = selected.map(({ value }) => value)\n    const inputs = this.el.querySelectorAll('input')\n\n    // For each existing input, remove it from DOM if not in selected.\n    // Remove each value from selectedValues if hidden input already exists.\n    inputs.forEach((hiddenInput) => {\n      const index = selectedValues.indexOf(hiddenInput.value)\n      if (index >= 0) {\n        selectedValues.splice(index, 1)\n      } else {\n        hiddenInput.remove()\n      }\n    })\n\n    // If nothing is selected we need only one hidden input without value.\n    if (selected.length === 0) {\n      this.appendHiddenInput()\n      return\n    }\n\n    // Else add hidden inputs for each value in selectedValues.\n    selectedValues.forEach(this.appendHiddenInput)\n  }\n\n  private appendHiddenInput = (value?: string) => {\n    const hiddenInput = document.createElement('input')\n\n    // Slot required to keep the hidden input outside the popper.\n    hiddenInput.setAttribute('slot', 'hidden')\n    hiddenInput.name = this.name\n    hiddenInput.type = 'hidden'\n\n    if (value !== undefined) {\n      hiddenInput.value = value\n    }\n\n    this.el.appendChild(hiddenInput)\n  }\n\n  @Watch('name')\n  @Watch('form')\n  updateHiddenInputs() {\n    const hiddenInputs = this.el.querySelectorAll('input')\n\n    const outerForm = this.el.closest('form')\n    if (!this.name || !(outerForm || this.form)) {\n      hiddenInputs.forEach((hiddenInput) => {\n        hiddenInput.remove()\n      })\n      return\n    }\n\n    if (!hiddenInputs.length) {\n      this.updateSelectedHiddenInputs(this.selected)\n      return\n    }\n\n    hiddenInputs.forEach((hiddenInput) => {\n      hiddenInput.name = this.name\n      if (this.form) {\n        hiddenInput.setAttribute('form', this.form)\n      }\n    })\n  }\n\n  private handleSlotChange = (mutationsList: MutationRecord[]) => {\n    if (!this.isObserverEnabled) return\n    if (!mutationsList.some((record) => this.isLdOption(record.target))) {\n      return\n    }\n\n    this.initialized = false\n\n    const oldValues = [...this.selected]\n    this.initOptions()\n\n    this.initialized = true\n    const newValues = [...this.selected]\n    this.emitEventsAndUpdateHidden(newValues, oldValues)\n  }\n\n  private handlePopperChange = (mutationsList: MutationRecord[]) => {\n    if (\n      this.listboxRef.classList.contains('ld-tether-enabled') &&\n      mutationsList.some((mutation) =>\n        mutation.oldValue.includes('display: none;')\n      )\n    ) {\n      // Popper has just been expanded and is visible.\n\n      // If there is a selected option in single select mode, focus it.\n      let toFocus\n      if (!this.multiple) {\n        // Using find instead of ld-option-internal[selected] selector below\n        // in order to prevent \"TypeError: e.getAttributeNode is not a function\" in JSDom.\n        toFocus = Array.from(\n          this.listboxRef.querySelectorAll('ld-option-internal')\n        )\n          .find((ldOption) => ldOption.hasAttribute('selected'))\n          ?.shadowRoot.querySelector('[role=\"option\"]')\n      }\n\n      // Otherwise, focus either the filter input (if available) or the trigger button.\n      if (!toFocus) {\n        if (this.filter) {\n          toFocus = this.getFilterInput()\n        } else {\n          toFocus = this.triggerRef\n        }\n      }\n\n      toFocus.focus()\n    }\n  }\n\n  private initSlotChangeObserver = () => {\n    this.slotChangeObserver = new MutationObserver(this.handleSlotChange)\n    this.slotChangeObserver.observe(this.el, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n    })\n  }\n\n  private initPopperObserver = () => {\n    this.popperObserver = new MutationObserver(this.handlePopperChange)\n    this.popperObserver.observe(this.listboxRef, {\n      subtree: false,\n      childList: false,\n      attributes: true,\n      attributeFilter: ['style'],\n      attributeOldValue: true,\n    })\n  }\n\n  private getFilterInput = () =>\n    this.listboxRef.shadowRoot.querySelector<HTMLInputElement>(\n      '.ld-select-popper__filter-input'\n    )\n\n  private togglePopper = () => {\n    if (!this.popper) this.initPopper()\n\n    this.expanded = !this.expanded\n\n    if (this.expanded) {\n      this.popper.enable()\n    } else {\n      this.popper.disable()\n      this.focusInner()\n    }\n  }\n\n  private clearSelection = () => {\n    Array.from(this.listboxRef.querySelectorAll('ld-option-internal')).forEach(\n      (option) => {\n        option.selected = false\n      }\n    )\n    this.selected = []\n  }\n\n  @Listen('resize', { target: 'window', passive: true })\n  handleWindowResize() {\n    if (this.isDisabled()) return // this is for a minor performance optimization only\n\n    this.updatePopperWidth()\n    this.updateTriggerMoreIndicator(true)\n    this.updatePopperShadowHeight()\n  }\n\n  @Listen('ldoptionselect', { target: 'window', passive: true })\n  handleSelect(ev: CustomEvent<boolean>) {\n    const target = ev.target as HTMLLdOptionInternalElement\n\n    // Ignore events which are not fired on current instance.\n    if (target.closest('[role=\"listbox\"]') !== this.listboxRef) return\n\n    if (!this.multiple) {\n      // Deselect currently selected option, if it's not the target option.\n      this.listboxRef\n        .querySelectorAll('ld-option-internal')\n        .forEach((option) => {\n          if (option !== target.closest('ld-option-internal')) {\n            option.selected = false\n          }\n        })\n      this.togglePopper()\n      if (this.filter) {\n        this.resetFilter()\n        this.focusInner()\n      }\n    }\n    this.initOptions()\n  }\n\n  private handleHome = (ev) => {\n    ev.preventDefault()\n    this.focusInner()\n  }\n\n  private handleEnd = (ev) => {\n    // Move focus to the last option.\n    ev.preventDefault()\n    const options = Array.from(\n      this.listboxRef.querySelectorAll('ld-option-internal')\n    )\n    if (document.activeElement !== options[options.length - 1]) {\n      options[options.length - 1].focusOption()\n    }\n  }\n\n  private selectAndFocus = (\n    ev: KeyboardEvent,\n    ldOption: HTMLLdOptionInternalElement\n  ) => {\n    if (!ldOption) return\n\n    if (this.multiple && ev.shiftKey) {\n      if (\n        this.isLdOption(document.activeElement) &&\n        !document.activeElement.hasAttribute('selected')\n      ) {\n        document.activeElement.dispatchEvent(\n          new KeyboardEvent('keydown', { key: ' ' })\n        )\n      }\n      ldOption.focusOption()\n      if (!ldOption.hasAttribute('selected')) {\n        ldOption.dispatchEvent(new KeyboardEvent('keydown', { key: ' ' }))\n      }\n    } else {\n      ldOption.focusOption()\n    }\n  }\n\n  private handleFilterChange = (ev: CustomEvent<string>) => {\n    // Hide options which do not match the filter query.\n    const options =\n      this.internalOptionsContainerRef.querySelectorAll('ld-option-internal')\n    const query = ev.detail.trim().toLowerCase()\n    let allFiltered = true\n    let filterMatchesOption = false\n    const filteredOptions = Array.from(options).filter((ldOption) => {\n      const optionTextLower = ldOption.textContent.toLowerCase()\n      const filtered = Boolean(query) && !optionTextLower.includes(query)\n\n      ldOption.filtered = filtered\n      if (optionTextLower === query) {\n        filterMatchesOption = true\n      }\n      if (!ldOption.filtered) {\n        allFiltered = false\n      }\n\n      return !filtered\n    })\n\n    this.typeAheadHandler.options = filteredOptions\n    this.allOptionsFiltered = allFiltered\n    this.filterMatchesOption = filterMatchesOption\n\n    // Re-position popper after new height has been applied.\n    requestAnimationFrame(() => {\n      this.updatePopper()\n    })\n  }\n\n  private handleFilterCreate = () => {\n    // In single select mode, deselect currently selected option\n    if (!this.multiple) {\n      const options = this.el.querySelectorAll('ld-option')\n      options.forEach((ldOption) => {\n        ldOption.selected = false\n      })\n    }\n\n    this.ldoptioncreate.emit(this.getFilterInput().value)\n    this.resetFilter()\n  }\n\n  private canCreate = () => {\n    return Boolean(\n      this.creatable && !this.filterMatchesOption && this.getFilterInput().value\n    )\n  }\n\n  @Listen('keydown', { passive: false, target: 'window' })\n  handleKeyDown(ev: KeyboardEvent) {\n    if (this.isDisabled()) return\n\n    // Ignore events if current instance has no focus.\n    if (\n      document.activeElement.closest('[role=\"listbox\"]') !== this.listboxRef &&\n      document.activeElement.closest('ld-select') !== this.el\n    ) {\n      return\n    }\n\n    const filterHasFocus =\n      this.filter &&\n      this.listboxRef?.shadowRoot.activeElement === this.getFilterInput()\n\n    // If filter has focus...\n    if (filterHasFocus) {\n      // ... and create mode is active\n      if (this.canCreate() && ev.key === 'Enter') {\n        this.handleFilterCreate()\n        return\n      }\n\n      // Ignore events if filter input has focus,\n      // except for navigation-specific keys.\n      if (\n        !['ArrowDown', 'ArrowUp', 'End', 'Escape', 'Home', 'Tab'].includes(\n          ev.key\n        )\n      ) {\n        return\n      }\n    }\n\n    // If the clear button is focused, ignore Enter and Space key events.\n    if (\n      this.el.shadowRoot.activeElement === this.btnClearRef &&\n      (ev.key === ' ' || ev.key === 'Enter')\n    ) {\n      return\n    }\n\n    switch (ev.key) {\n      case 'ArrowDown': {\n        // If not expanded, expand popper.\n        // If expanded, move focus to the next option.\n        // If shift is pressed, select the next option.\n        // Holding down the Shift key and then using the Down cursor keys\n        // increases the range of items selected (multiple mode only).\n        ev.preventDefault()\n        if (!this.expanded) {\n          this.togglePopper()\n          return\n        }\n\n        if (ev.metaKey) {\n          this.handleEnd(ev)\n          return\n        }\n\n        // Focus next visible option, if any,\n        // or the filter input, if applicable.\n        if (document.activeElement === this.el || filterHasFocus) {\n          if (this.filter && !filterHasFocus) {\n            this.getFilterInput().focus()\n          } else {\n            const nextLdOption = Array.from(\n              this.listboxRef.querySelectorAll('ld-option-internal')\n            ).find((ldOption) => !ldOption.filtered)\n            this.selectAndFocus(ev, nextLdOption)\n          }\n        } else {\n          let current = document.activeElement\n          let nextLdOption\n          while (nextLdOption === undefined) {\n            if (this.isLdOption(current.nextElementSibling)) {\n              if (\n                current.nextElementSibling.filtered ||\n                current.nextElementSibling.hidden\n              ) {\n                current = current.nextElementSibling\n              } else {\n                nextLdOption = current.nextElementSibling\n              }\n            } else {\n              nextLdOption = null\n            }\n          }\n          this.selectAndFocus(ev, nextLdOption)\n        }\n        break\n      }\n      case 'ArrowUp': {\n        // If not expanded, expand popper.\n        // If expanded, move focus to the previous option.\n        // If the first option is focused, focus the trigger button.\n        // Holding down the Shift key and then using the Up cursor keys\n        // increases the range of items selected (multiple mode only).\n        ev.preventDefault()\n        if (!this.expanded) {\n          this.togglePopper()\n          return\n        }\n\n        if (ev.metaKey || filterHasFocus) {\n          this.handleHome(ev)\n          return\n        }\n\n        // Focus previous visible option, if any.\n        if (this.isLdOption(document.activeElement)) {\n          let prevLdOption\n          let current = document.activeElement\n          while (prevLdOption === undefined) {\n            if (this.isLdOption(current.previousElementSibling)) {\n              if (\n                current.previousElementSibling.hidden ||\n                current.previousElementSibling.filtered\n              ) {\n                current = current.previousElementSibling\n              } else {\n                prevLdOption = current.previousElementSibling\n              }\n            } else {\n              prevLdOption = null\n            }\n          }\n          if (prevLdOption) {\n            this.selectAndFocus(ev, prevLdOption)\n          } else {\n            if (this.filter) {\n              this.getFilterInput().focus()\n            } else {\n              this.handleHome(ev)\n            }\n          }\n        }\n        break\n      }\n      case 'Home':\n        if (this.expanded) {\n          this.handleHome(ev)\n        }\n        break\n      case 'End':\n        if (this.expanded) {\n          this.handleEnd(ev)\n        }\n        break\n      case ' ': {\n        // If trigger has focus: Toggle popper.\n        ev.stopImmediatePropagation()\n        ev.preventDefault()\n        if (this.expanded) {\n          this.togglePopper()\n        } else {\n          this.togglePopper()\n        }\n        break\n      }\n      case 'Enter':\n        // If expanded and trigger button is focused: Toggle popper.\n        ev.preventDefault()\n        if (\n          this.expanded &&\n          this.el.shadowRoot.activeElement === this.triggerRef\n        ) {\n          this.togglePopper()\n        }\n        break\n      case 'Escape':\n        // If expanded: Close popper.\n        if (this.expanded) {\n          ev.preventDefault()\n          ev.stopImmediatePropagation()\n          this.togglePopper()\n        }\n        break\n      case 'Tab': // Also covers Shift+Tab\n        // If expanded and popper element has focus within: Prevent default.\n        if (\n          this.expanded &&\n          document.activeElement.closest('[role=\"listbox\"]') === this.listboxRef\n        ) {\n          ev.preventDefault()\n          ev.stopImmediatePropagation()\n        }\n        break\n      default:\n        if (this.expanded) {\n          ev.stopImmediatePropagation()\n          ev.preventDefault()\n          this.typeAheadHandler.typeAhead(ev.key)\n        }\n    }\n  }\n\n  @Listen('click', {\n    target: 'window',\n  })\n  handleClickOutside(ev) {\n    // closest utility function must be used here for the component\n    // to work in Solid.js app, where ev.target can be an element\n    // within the shadow DOM of the component.\n    // Usage of ev.composedPath() is required for penetrating shadow DOM.\n    const target = 'composedPath' in ev ? ev.composedPath().at(0) : ev.target\n    if (\n      ev.isTrusted &&\n      closest('ld-select', target) !== this.el &&\n      closest('[role=\"listbox\"]', target) !== this.listboxRef\n    ) {\n      this.expanded = false\n      this.resetFilter()\n    }\n  }\n\n  // Mobile Safari in some cases does not react to click events on elements\n  // which are not interactive. But it does to touch events.\n  @Listen('touchend', {\n    target: 'window',\n    passive: true,\n  })\n  handleTouchOutside(ev) {\n    this.handleClickOutside(ev)\n  }\n\n  private resetFilter = () => {\n    this.allOptionsFiltered = false\n    this.filterMatchesOption = false\n\n    if (!this.filter) return\n    const filterInput = this.getFilterInput()\n    if (!filterInput) return\n\n    filterInput.value = ''\n    const options =\n      this.internalOptionsContainerRef.querySelectorAll('ld-option-internal')\n\n    options.forEach((ldOption) => {\n      ldOption.filtered = false\n    })\n\n    this.typeAheadHandler.options = options\n    this.listboxRef.resetFilter()\n  }\n\n  private handleFocusEvent = (ev: FocusEvent) => {\n    // Emit event only, if focus is not within the select component.\n    if (\n      ev.relatedTarget === null ||\n      ev.relatedTarget === this.listboxRef ||\n      this.isLdOption(ev.relatedTarget) ||\n      closest('ld-select', ev.relatedTarget as HTMLElement) === this.el\n    ) {\n      ev.stopImmediatePropagation()\n    } else {\n      // Focus left the select component - make sure it is not expanded.\n      this.expanded = false\n      this.resetFilter()\n    }\n  }\n\n  private handleTriggerClick = (ev: Event) => {\n    ev.preventDefault()\n\n    if (this.isDisabled()) return\n\n    this.togglePopper()\n  }\n\n  private handleClearClick = (ev: MouseEvent) => {\n    ev.preventDefault()\n    ev.stopImmediatePropagation()\n\n    if (this.isDisabled()) return\n\n    this.clearSelection()\n    this.focusInner()\n  }\n\n  private handleClearSingleClick = (ev: MouseEvent, optionValue) => {\n    ev.preventDefault()\n    ev.stopImmediatePropagation()\n\n    if (this.isDisabled()) return\n\n    this.selected = this.selected.filter(\n      (selection) => selection.value !== optionValue\n    )\n\n    this.listboxRef\n      .querySelector(`ld-option-internal[value='${optionValue}']`)\n      ?.dispatchEvent(new KeyboardEvent('keydown', { key: ' ' }))\n  }\n\n  componentWillLoad() {\n    const outerForm = this.el.closest('form')\n\n    if (this.name && (outerForm || this.form)) {\n      this.renderHiddenInput = true\n    }\n\n    const customIcon = this.el.querySelector('ld-icon')\n    this.hasCustomIcon = !!customIcon\n\n    if (customIcon) {\n      customIcon.setAttribute('size', this.size)\n    }\n\n    this.initOptions()\n\n    if (this.renderHiddenInput) {\n      this.updateSelectedHiddenInputs(this.selected)\n    }\n\n    registerAutofocus(this.autofocus)\n  }\n\n  componentDidLoad() {\n    setTimeout(() => {\n      this.initSlotChangeObserver()\n      this.typeAheadHandler = new TypeAheadHandler(\n        this.listboxRef.querySelectorAll('ld-option-internal')\n      )\n      this.initialized = true\n    })\n  }\n\n  componentDidUpdate() {\n    if (this.expanded) {\n      this.updatePopper()\n    }\n  }\n\n  disconnectedCallback() {\n    /* istanbul ignore if */\n    if (this.popperObserver) this.popperObserver.disconnect()\n    /* istanbul ignore if */\n    if (this.popper) this.popper.destroy()\n    /* istanbul ignore if */\n    if (this.slotChangeObserver) this.slotChangeObserver.disconnect()\n    /* istanbul ignore if */\n    if (this.listboxRef) this.listboxRef.remove()\n    /* istanbul ignore if */\n    if (this.typeAheadHandler) this.typeAheadHandler.clearTimeout()\n  }\n\n  render() {\n    // Endable detached mode if any display mode is set.\n    const detached = !!this.mode\n\n    // Implicitly enable inline mode if ghost mode is enabled.\n    const inline = this.mode === 'inline' || this.mode === 'ghost'\n\n    // Disallow ghost in combination with multiple select mode.\n    const ghost = !this.multiple && this.mode === 'ghost'\n\n    const cl = [\n      'ld-select',\n      this.disabled && 'ld-select--disabled',\n      this.size && `ld-select--${this.size}`,\n      this.invalid && 'ld-select--invalid',\n      this.expanded && 'ld-select--expanded',\n      detached && 'ld-select--detached',\n      inline && 'ld-select--inline',\n      ghost && 'ld-select--ghost',\n    ]\n\n    const triggerCl = [\n      'ld-select__btn-trigger',\n      this.invalid && 'ld-select__btn-trigger--invalid',\n      detached && 'ld-select__btn-trigger--detached',\n      inline && 'ld-select__btn-trigger--inline',\n      ghost && 'ld-select__btn-trigger--ghost',\n    ]\n\n    const triggerIconCl = [\n      'ld-select__icon',\n      this.expanded && 'ld-select__icon--rotated',\n    ]\n\n    const triggerText = this.multiple\n      ? this.placeholder\n      : this.selected[0]?.text || this.placeholder\n\n    return (\n      <Host>\n        <div\n          class={getClassNames(cl)}\n          aria-disabled={this.isDisabled() ? 'true' : undefined}\n          part=\"root\"\n          onBlur={this.handleFocusEvent}\n          onFocusout={this.handleFocusEvent}\n          style={\n            this.expanded\n              ? {\n                  zIndex: '2147483647', // Highest possible z-index\n                }\n              : undefined\n          }\n        >\n          {this.renderHiddenInput && <slot name=\"hidden\" />}\n          <div class=\"ld-select__slot-container\" part=\"slot-container\">\n            <slot></slot>\n          </div>\n          <div\n            class=\"ld-select__select\"\n            part=\"select\"\n            ref={(el) => (this.selectRef = el)}\n          >\n            <div\n              class={getClassNames(triggerCl)}\n              role=\"button\"\n              part=\"btn-trigger focusable\"\n              tabindex={\n                this.disabled && !isAriaDisabled(this.ariaDisabled)\n                  ? undefined\n                  : this.ldTabindex\n              }\n              aria-disabled={this.isDisabled() ? 'true' : undefined}\n              aria-haspopup=\"listbox\"\n              aria-expanded={this.expanded ? 'true' : 'false'}\n              aria-label={triggerText}\n              onClick={this.handleTriggerClick}\n              ref={(el) => (this.triggerRef = el)}\n            >\n              {this.multiple && this.selected.length ? (\n                <div\n                  class=\"ld-select__selection-list-container\"\n                  part=\"selection-list-container\"\n                >\n                  <ul\n                    class=\"ld-select__selection-list\"\n                    part=\"selection-list\"\n                    aria-label=\"Selected options\"\n                    ref={(el) => (this.selectionListRef = el)}\n                    style={{\n                      maxHeight:\n                        this.maxRows && this.maxRows > 0\n                          ? `${this.maxRows * 1.75}rem`\n                          : undefined,\n                    }}\n                  >\n                    {this.selected.map((selection, index) => {\n                      return (\n                        <li\n                          key={index}\n                          class=\"ld-select__selection-list-item\"\n                          style={{ order: index + 1 + '' }}\n                          part=\"selection-list-item\"\n                        >\n                          <label class=\"ld-select__selection-label\">\n                            <span\n                              class=\"ld-select__selection-label-text\"\n                              title={selection.text}\n                              part=\"selection-label-text\"\n                              innerHTML={selection.text}\n                            ></span>\n\n                            <button\n                              disabled={this.isDisabled() ? true : undefined}\n                              class=\"ld-select__btn-clear-single\"\n                              part=\"btn-clear-single focusable\"\n                              onClick={(ev) => {\n                                this.handleClearSingleClick.call(\n                                  this,\n                                  ev,\n                                  selection.value\n                                )\n                              }}\n                            >\n                              {/* custom icon cross */}\n                              <svg\n                                class=\"ld-select__btn-clear-single-icon\"\n                                part=\"icon-clear-single\"\n                                fill=\"none\"\n                                viewBox=\"0 0 12 12\"\n                              >\n                                <title>Clear</title>\n                                <path\n                                  stroke=\"#fff\"\n                                  stroke-linecap=\"round\"\n                                  stroke-linejoin=\"round\"\n                                  stroke-width=\"2\"\n                                  d=\"M2 2l8 8M2 10l8-8\"\n                                />\n                              </svg>\n                            </button>\n\n                            <span\n                              class=\"ld-select__selection-label-bg\"\n                              part=\"selection-label-bg\"\n                            />\n                          </label>\n                        </li>\n                      )\n                    })}\n                  </ul>\n                </div>\n              ) : (\n                <span\n                  class=\"ld-select__btn-trigger-text-wrapper\"\n                  title={triggerText}\n                  part=\"trigger-text-wrapper\"\n                >\n                  <span\n                    class=\"ld-select__btn-trigger-text\"\n                    part=\"trigger-text\"\n                    innerHTML={triggerText}\n                  ></span>\n                </span>\n              )}\n\n              {this.selected?.length && this.multiple ? (\n                <button\n                  class=\"ld-select__btn-clear\"\n                  disabled={this.isDisabled() ? true : undefined}\n                  onClick={this.handleClearClick}\n                  ref={(el) => (this.btnClearRef = el)}\n                  part=\"btn-clear focusable\"\n                >\n                  {/* custom icon cross */}\n                  <svg\n                    class=\"ld-select__btn-clear-icon\"\n                    fill=\"none\"\n                    viewBox=\"0 0 21 20\"\n                    part=\"icon-clear\"\n                  >\n                    <title>Clear all</title>\n                    <path\n                      fill=\"currentColor\"\n                      fill-rule=\"evenodd\"\n                      d=\"M10 20a10 10 0 100-20 10 10 0 000 20z\"\n                      clip-rule=\"evenodd\"\n                    />\n                    <path\n                      stroke=\"#fff\"\n                      stroke-linecap=\"round\"\n                      stroke-linejoin=\"round\"\n                      stroke-width=\"2\"\n                      d=\"M6.67 6.67l6.67 6.66M6.67 13.33l6.67-6.66\"\n                    />\n                  </svg>\n                </button>\n              ) : (\n                ''\n              )}\n\n              <slot name=\"icon\"></slot>\n              {!this.hasCustomIcon && (\n                /* custom icon arrow-down */\n                <svg\n                  class={getClassNames(triggerIconCl)}\n                  role={'presentation'}\n                  viewBox=\"0 0 16 16\"\n                  part=\"trigger-icon\"\n                >\n                  <path\n                    stroke=\"currentColor\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"3\"\n                    d=\"M3 6l5 4 5-4\"\n                  />\n                </svg>\n              )}\n            </div>\n          </div>\n          <ld-select-popper\n            allOptionsFiltered={this.allOptionsFiltered}\n            creatable={this.creatable}\n            createButtonLabel={this.createButtonLabel}\n            createInputLabel={this.createInputLabel}\n            detached={detached}\n            expanded={this.expanded}\n            filter={this.filter}\n            filterMatchesOption={this.filterMatchesOption}\n            filterPlaceholder={this.filterPlaceholder}\n            onBlur={this.handleFocusEvent}\n            onFocusout={this.handleFocusEvent}\n            onLdselectfilterchange={this.handleFilterChange}\n            onLdselectfiltercreate={this.handleFilterCreate}\n            popperClass={this.popperClass}\n            ref={(el) => (this.listboxRef = el)}\n            role=\"listbox\"\n            size={this.size}\n            theme={this.theme}\n          >\n            <div\n              ref={(el) => (this.internalOptionsContainerRef = el)}\n              innerHTML={this.internalOptionsHTML}\n              part=\"options-container\"\n            ></div>\n          </ld-select-popper>\n        </div>\n      </Host>\n    )\n  }\n}\n",":host {\n  /* layout */\n  --ld-select-popper-min-width: 12.8125rem;\n  --ld-select-popper-max-height: min(23.75rem, 75vh - 1.25rem);\n\n  /* colors */\n  --ld-select-popper-border-col: var(--ld-col-neutral-100);\n  min-width: var(--ld-select-popper-min-width);\n}\n\n.ld-select-popper {\n  min-width: 100%;\n\n  &:not(.ld-select-popper--expanded) {\n    display: none;\n  }\n\n  ::slotted(.ld-select__shadow) {\n    display: block;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    box-shadow: var(--ld-shadow-sticky);\n    border-radius: var(--ld-br-m);\n    pointer-events: none;\n    z-index: -1;\n  }\n}\n\n.ld-select-popper__scroll-container {\n  max-height: var(--ld-select-popper-max-height);\n  overflow-y: auto;\n  border-bottom-left-radius: var(--ld-br-m);\n  border-bottom-right-radius: var(--ld-br-m);\n  border-top: solid var(--ld-select-popper-border-col) var(--ld-sp-1);\n  overscroll-behavior: contain;\n\n  .ld-select-popper--detached:not(.ld-select-popper--filter) &,\n  .ld-select-popper--pinned:not(.ld-select-popper--filter) & {\n    border-top: 0;\n    border-radius: var(--ld-br-m);\n  }\n\n  .ld-select-popper--all-filtered & {\n    border-top: 0;\n  }\n}\n\n.ld-select-popper__shadow {\n  position: absolute;\n  width: 100%;\n  height: calc(100% + var(--ld-select-min-height-md));\n  box-shadow: var(--ld-shadow-sticky);\n  border-radius: var(--ld-br-m);\n  pointer-events: none;\n  z-index: -1;\n  bottom: 0;\n\n  .ld-select-popper--detached & {\n    height: 100% !important;\n  }\n}\n\n.ld-select-popper__filter-container {\n  align-items: center;\n  background-color: var(--ld-col-wht);\n  border-top: solid var(--ld-col-neutral-100) var(--ld-sp-1);\n  color: var(--ld-col-neutral-900);\n  display: grid;\n  font: var(--ld-typo-label-m);\n  grid-template-columns: 1fr auto;\n\n  .ld-select-popper--detached &,\n  .ld-select-popper--pinned & {\n    border-top: 0;\n    border-top-left-radius: var(--ld-br-m);\n    border-top-right-radius: var(--ld-br-m);\n  }\n\n  .ld-select-popper--all-filtered & {\n    border-bottom-left-radius: var(--ld-br-m);\n    border-bottom-right-radius: var(--ld-br-m);\n  }\n}\n\n.ld-select-popper__create-button {\n  font: var(--ld-typo-label-s);\n  line-height: var(--ld-select-trigger-line-height);\n  margin-right: var(--ld-sp-8);\n\n  &::part(button) {\n    --ld-button-padding-x-sm: var(--ld-sp-6);\n    --ld-button-padding-y-sm: var(--ld-sp-4);\n    min-height: 0;\n    min-width: 0;\n  }\n}\n\n.ld-select-popper__filter-input {\n  appearance: none;\n  background-color: transparent;\n  border: 0;\n  box-sizing: border-box;\n  color: inherit;\n  font: inherit;\n  height: 2.5rem;\n  line-height: var(--ld-select-trigger-line-height);\n  outline: none;\n  padding: var(--ld-sp-8) var(--ld-sp-12);\n  width: 100%;\n\n  &::placeholder {\n    color: var(--ld-col-neutral-600);\n  }\n\n  .ld-select-popper--detached &,\n  .ld-select-popper--pinned & {\n    border-top: 0;\n    border-top-left-radius: var(--ld-br-m);\n    border-top-right-radius: var(--ld-br-m);\n  }\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core'\nimport { getClassNames } from '../../../utils/getClassNames'\n\n/** @internal **/\n@Component({\n  tag: 'ld-select-popper',\n  styleUrl: 'ld-select-popper.shadow.css',\n  shadow: true,\n})\nexport class LdSelectPopper {\n  @Element() el: HTMLElement\n\n  /** Indicates that all options are filtered (used in creatable mode) */\n  @Prop() allOptionsFiltered?: boolean\n\n  /** A watcher is applied to the CSS class in order to be able to react to tether changes. */\n  @Prop({ reflect: true }) class?: string\n\n  /**\n   * Creatable mode can be enabled when the filter prop is set to true.\n   * This mode allows the user to create new options using the filter input field.\n   */\n  @Prop() creatable?: boolean\n\n  /** The \"create\" input label (creatable mode). */\n  @Prop() createInputLabel!: string\n\n  /** The \"create\" button label (creatable mode). */\n  @Prop() createButtonLabel!: string\n\n  /** Popper is visually detached from the select trigger element (there's a gap between the two). */\n  @Prop() detached?: boolean\n\n  /** Indicates if select element is expanded. */\n  @Prop() expanded? = false\n\n  /** Set this property to `true` in order to enable an input field for filtering options. */\n  @Prop() filter?: boolean\n\n  /** The filter input value matches an option (do not allow to create the option). */\n  @Prop() filterMatchesOption?: boolean\n\n  /** The filter input placeholder. */\n  @Prop() filterPlaceholder!: string\n\n  /** Attaches CSS class to the select popper element. */\n  @Prop() popperClass?: string\n\n  /** Size of the select trigger button (required for applying the correct shadow height). */\n  @Prop() size?: 'sm' | 'lg'\n\n  /** Since the select popper is located outside the select element, the theme needs to be applied as a prop. */\n  @Prop() theme?: string\n\n  @State() isPinned = false\n  @State() shadowHeight = '100%'\n  @State() filterInputValue = ''\n  @State() canCreate = false\n\n  /**\n   * @internal\n   * Emitted on filter change with the filter input value.\n   */\n  @Event() ldselectfilterchange: EventEmitter<string>\n\n  /**\n   * @internal\n   * Emitted on create button click in filter input field.\n   */\n  @Event() ldselectfiltercreate: EventEmitter<string>\n\n  private handleFilterInput = (ev) => {\n    this.filterInputValue = ev.target.value\n    this.ldselectfilterchange.emit(ev.target.value)\n  }\n\n  private handleCreate = (ev) => {\n    ev.preventDefault()\n    this.ldselectfiltercreate.emit(this.filterInputValue)\n    this.filterInputValue = ''\n  }\n\n  @Watch('creatable')\n  @Watch('filterMatchesOption')\n  @Watch('filterInputValue')\n  updateCanCreate() {\n    this.canCreate = Boolean(\n      this.creatable && !this.filterMatchesOption && this.filterInputValue\n    )\n  }\n\n  @Watch('class')\n  updatePinnedState() {\n    this.isPinned = this.el.classList.contains('ld-tether-pinned')\n  }\n\n  @Watch('theme')\n  updatePopperTheme(newValue: string, oldValue: string) {\n    this.el.classList.remove(`ld-theme-${oldValue}`)\n    if (newValue) this.el.classList.add(`ld-theme-${newValue}`)\n  }\n\n  @Watch('expanded')\n  updateFilter(newExpanded: boolean) {\n    if (!newExpanded) {\n      this.resetFilter()\n    }\n  }\n\n  /** Updates shadow height */\n  @Method()\n  async updateShadowHeight(height: string) {\n    this.shadowHeight = height\n  }\n\n  /** Focuses the tab */\n  @Method()\n  async resetFilter() {\n    this.filterInputValue = ''\n  }\n\n  componentWillLoad() {\n    this.popperClass && this.el.classList.add(this.popperClass)\n  }\n\n  render() {\n    return (\n      <Host\n        style={{\n          zIndex: this.isPinned ? '2147483647' : '2147483646',\n          display: this.expanded ? 'block' : 'none',\n        }}\n      >\n        <div\n          class={getClassNames([\n            'ld-select-popper',\n            this.detached && 'ld-select-popper--detached',\n            this.expanded && 'ld-select-popper--expanded',\n            this.filter && 'ld-select-popper--filter',\n            this.allOptionsFiltered && 'ld-select-popper--all-filtered',\n            this.isPinned && 'ld-select-popper--pinned',\n            this.size && `ld-select-popper--${this.size}`,\n          ])}\n          part=\"popper\"\n        >\n          {this.filter && (\n            <div class=\"ld-select-popper__filter-container\">\n              <input\n                aria-haspopup={this.allOptionsFiltered ? undefined : 'listbox'}\n                aria-label={this.canCreate ? this.createInputLabel : undefined}\n                type=\"text\"\n                placeholder={this.filterPlaceholder}\n                class=\"ld-select-popper__filter-input\"\n                part=\"filter-input focusable\"\n                onInput={this.handleFilterInput}\n              />\n              {this.canCreate && (\n                <ld-button\n                  onClick={this.handleCreate}\n                  size=\"sm\"\n                  class=\"ld-select-popper__create-button\"\n                  aria-label={this.createButtonLabel}\n                >\n                  <ld-icon\n                    class=\"ld-select-popper__create-icon\"\n                    role=\"presentation\"\n                    size=\"sm\"\n                  >\n                    <svg viewBox=\"-1 -1 24 24\" fill=\"none\">\n                      <path\n                        d=\"M2.5 11h17M11 19.5v-17\"\n                        stroke=\"currentColor\"\n                        stroke-width=\"3\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                      />\n                    </svg>\n                  </ld-icon>\n                </ld-button>\n              )}\n            </div>\n          )}\n          <div\n            class=\"ld-select-popper__scroll-container\"\n            part=\"popper-scroll-container\"\n          >\n            <slot></slot>\n            <div\n              class=\"ld-select-popper__shadow\"\n              style={{ height: this.isPinned ? '100%' : this.shadowHeight }}\n              part=\"shadow\"\n            ></div>\n          </div>\n        </div>\n      </Host>\n    )\n  }\n}\n"],"mappings":"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"}