// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ld-input copies form autocomplete attribute, if it has not one of its own 1`] = `
<ld-input autocomplete="off" class="ld-input" name="example">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input autocomplete="off" name="example" part="input focusable">
    <slot name="end"></slot>
  </mock:shadow-root>
  <input name="example" type="hidden">
</ld-input>
`;

exports[`ld-input creates hidden input field, if form attribute is added 1`] = `
<ld-input class="ld-input" form="test" name="example">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input form="test" name="example" part="input focusable">
    <slot name="end"></slot>
  </mock:shadow-root>
  <input form="test" name="example" type="hidden">
</ld-input>
`;

exports[`ld-input creates hidden input field, if form attribute is given 1`] = `
<ld-input class="ld-input" form="example-form" name="example">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input form="example-form" name="example" part="input focusable">
    <slot name="end"></slot>
  </mock:shadow-root>
  <input form="example-form" name="example" type="hidden">
</ld-input>
`;

exports[`ld-input creates hidden input field, if inside a form 1`] = `
<ld-input class="ld-input" name="example">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input name="example" part="input focusable">
    <slot name="end"></slot>
  </mock:shadow-root>
  <input name="example" type="hidden">
</ld-input>
`;

exports[`ld-input creates hidden input field, if name attribute is added 1`] = `
<ld-input class="ld-input" name="test">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input name="test" part="input focusable">
    <slot name="end"></slot>
  </mock:shadow-root>
  <input name="test" type="hidden">
</ld-input>
`;

exports[`ld-input fills hidden input field with initial attributes 1`] = `
<ld-input class="ld-input" dirname="example.dir" form="formName" name="example" value="hello">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input dirname="example.dir" form="formName" name="example" part="input focusable" value="hello">
    <slot name="end"></slot>
  </mock:shadow-root>
  <input form="formName" name="example" type="hidden" value="hello">
</ld-input>
`;

exports[`ld-input removes hidden input field attributes 1`] = `
<ld-input class="ld-input" name="example">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input name="example" part="input focusable">
    <slot name="end"></slot>
  </mock:shadow-root>
  <input name="example" type="hidden">
</ld-input>
`;

exports[`ld-input removes hidden input field, if form attribute is removed 1`] = `
<ld-input class="ld-input" name="example">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input name="example" part="input focusable">
    <slot name="end"></slot>
  </mock:shadow-root>
</ld-input>
`;

exports[`ld-input removes hidden input field, if name attribute is removed 1`] = `
<ld-input class="ld-input" dirname="example.dir" form="formName" value="hello">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input dirname="example.dir" form="formName" part="input focusable" value="hello">
    <slot name="end"></slot>
  </mock:shadow-root>
</ld-input>
`;

exports[`ld-input removes size from ld-button css component 1`] = `
<ld-input class="ld-input">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input part="input focusable">
    <slot name="end"></slot>
  </mock:shadow-root>
  <button class="ld-button" slot="start">
    X
  </button>
  <button class="ld-button" slot="end">
    Y
  </button>
</ld-input>
`;

exports[`ld-input removes size from ld-button web component 1`] = `
<ld-input class="ld-input">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input part="input focusable">
    <slot name="end"></slot>
  </mock:shadow-root>
  <ld-button slot="start">
    X
  </ld-button>
  <ld-button slot="end">
    Y
  </ld-button>
</ld-input>
`;

exports[`ld-input removes size from ld-icon css component 1`] = `
<ld-input class="ld-input">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input part="input focusable">
    <slot name="end"></slot>
  </mock:shadow-root>
  <svg class="ld-icon" slot="start"></svg>
  <svg class="ld-icon" slot="end"></svg>
</ld-input>
`;

exports[`ld-input removes size from ld-icon web component 1`] = `
<ld-input class="ld-input">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input part="input focusable">
    <slot name="end"></slot>
  </mock:shadow-root>
  <ld-icon name="placeholder" slot="start"></ld-icon>
  <ld-icon name="placeholder" slot="end"></ld-icon>
</ld-input>
`;

exports[`ld-input renders 1`] = `
<ld-input class="ld-input">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input part="input focusable">
    <slot name="end"></slot>
  </mock:shadow-root>
</ld-input>
`;

exports[`ld-input renders as dark input with prop tone set to "dark" 1`] = `
<ld-input class="ld-input ld-input--dark" tone="dark">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input part="input focusable" tone="dark">
    <slot name="end"></slot>
  </mock:shadow-root>
</ld-input>
`;

exports[`ld-input renders type file (multiline) 1`] = `
<ld-input class="ld-input" multiline="" type="file">
  <mock:shadow-root><textarea part="input focusable" type="file"></textarea>
    <span class="ld-input__placeholder" part="placeholder"></span>
  </mock:shadow-root>
</ld-input>
`;

exports[`ld-input renders type file 1`] = `
<ld-input class="ld-input" type="file">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input part="input focusable" type="file">
    <span class="ld-input__placeholder" part="placeholder"></span>
    <slot name="end"></slot>
  </mock:shadow-root>
</ld-input>
`;

exports[`ld-input renders with both slots 1`] = `
<ld-input class="ld-input">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input part="input focusable">
    <slot name="end"></slot>
  </mock:shadow-root>
  <span slot="start">
    hi
  </span>
  <span slot="end">
    hello
  </span>
</ld-input>
`;

exports[`ld-input renders with slot end 1`] = `
<ld-input class="ld-input">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input part="input focusable">
    <slot name="end"></slot>
  </mock:shadow-root>
  <span slot="end">
    hello
  </span>
</ld-input>
`;

exports[`ld-input renders with slot start 1`] = `
<ld-input class="ld-input">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input part="input focusable">
    <slot name="end"></slot>
  </mock:shadow-root>
  <span slot="start">
    hi
  </span>
</ld-input>
`;

exports[`ld-input renders with value 1`] = `
<ld-input class="ld-input" value="yada-yada">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input part="input focusable" value="yada-yada">
    <slot name="end"></slot>
  </mock:shadow-root>
</ld-input>
`;

exports[`ld-input sets size on ld-button css component 1`] = `
<ld-input class="ld-input ld-input--sm" size="sm">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input part="input focusable" size="sm">
    <slot name="end"></slot>
  </mock:shadow-root>
  <button class="ld-button ld-button--sm" slot="start">
    X
  </button>
  <button class="ld-button ld-button--sm" slot="end">
    Y
  </button>
</ld-input>
`;

exports[`ld-input sets size on ld-button web component 1`] = `
<ld-input class="ld-input ld-input--sm" size="sm">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input part="input focusable" size="sm">
    <slot name="end"></slot>
  </mock:shadow-root>
  <ld-button size="sm" slot="start">
    X
  </ld-button>
  <ld-button size="sm" slot="end">
    Y
  </ld-button>
</ld-input>
`;

exports[`ld-input sets size on ld-icon css component 1`] = `
<ld-input class="ld-input ld-input--sm" size="sm">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input part="input focusable" size="sm">
    <slot name="end"></slot>
  </mock:shadow-root>
  <svg class="ld-icon ld-icon--sm" slot="start"></svg>
  <svg class="ld-icon ld-icon--sm" slot="end"></svg>
</ld-input>
`;

exports[`ld-input sets size on ld-icon web component 1`] = `
<ld-input class="ld-input ld-input--sm" size="sm">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input part="input focusable" size="sm">
    <slot name="end"></slot>
  </mock:shadow-root>
  <ld-icon name="placeholder" size="sm" slot="start"></ld-icon>
  <ld-icon name="placeholder" size="sm" slot="end"></ld-icon>
</ld-input>
`;

exports[`ld-input updates hidden input field attributes 1`] = `
<ld-input class="ld-input" dirname="test.dir" form="test" name="test" value="test">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input dirname="test.dir" form="test" name="test" part="input focusable" value="test">
    <slot name="end"></slot>
  </mock:shadow-root>
  <input form="test" name="test" type="hidden" value="test">
</ld-input>
`;

exports[`ld-input updates hidden input field value 1`] = `
<ld-input class="ld-input" name="example">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input name="example" part="input focusable" value="test">
    <slot name="end"></slot>
  </mock:shadow-root>
  <input name="example" type="hidden" value="test">
</ld-input>
`;

exports[`ld-input updates value prop on value change 1`] = `
<ld-input class="ld-input" value="yada-yada">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input part="input focusable" value="yoda-yoda">
    <slot name="end"></slot>
  </mock:shadow-root>
</ld-input>
`;

exports[`ld-input uses own autocomplete attribute even if the form has a different one 1`] = `
<ld-input autocomplete="name" class="ld-input" name="example">
  <mock:shadow-root>
    <slot name="start"></slot>
    <input autocomplete="name" name="example" part="input focusable">
    <slot name="end"></slot>
  </mock:shadow-root>
  <input name="example" type="hidden">
</ld-input>
`;
