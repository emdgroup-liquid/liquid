{"version":3,"names":["ldMenuitemCss","modeMap","Map","LdMenuitem","this","handleClick","ev","preventClose","ldclosetooltip","emit","async","_a","buttonRef","focusInner","componentWillLoad","attributesObserver","cloneAttributes","call","disconnectedCallback","disconnect","render","h","Host","class","part","role","Object","assign","clonedAttributes","disabled","href","iconOnly","justifyContent","ldTabindex","mode","get","onClick","ref","element","size","target","type"],"sources":["../src/liquid/components/ld-context-menu/ld-menuitem/ld-menuitem.css?tag=ld-menuitem&encapsulation=shadow","../src/liquid/components/ld-context-menu/ld-menuitem/ld-menuitem.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n.ld-menuitem .ld-menuitem__button {\n  display: grid;\n  width: 100%;\n}\n","import {\n  Component,\n  Element,\n  Host,\n  h,\n  Prop,\n  State,\n  Method,\n  Event,\n  EventEmitter,\n} from '@stencil/core'\nimport { cloneAttributes } from '../../../utils/cloneAttributes'\n\ntype Mode = 'highlight' | 'danger' | 'neutral'\n\nconst modeMap = new Map<Mode, string>([\n  ['danger', 'danger-ghost'],\n  ['highlight', 'ghost'],\n  ['neutral', 'neutral-ghost'],\n])\n\n/**\n * @virtualProp ref - reference to component\n * @virtualProp {string | number} key - for tracking the node's identity when working with lists\n * @part listitem - `li` element wrapping the `ld-button` element\n * @part button - `ld-button` element wrapping the default slot\n */\n@Component({\n  tag: 'ld-menuitem',\n  styleUrl: 'ld-menuitem.css',\n  shadow: true,\n})\nexport class LdMenuitem implements InnerFocusable {\n  @Element() el: HTMLLdMenuitemElement\n  private attributesObserver: MutationObserver\n  private buttonRef?: HTMLLdButtonElement\n\n  /** Disabled state of the menu item. */\n  @Prop() disabled?: boolean\n\n  /**\n   * Transforms the menu item to an anchor element.\n   * See [mdn docs](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-href)\n   * for more information on the `href` attribute.\n   */\n  @Prop() href?: HTMLLdButtonElement['href']\n\n  /** Tab index of the menu item. */\n  @Prop() ldTabindex?: number\n\n  /** Prevent closing of the context menu on click. */\n  @Prop() preventClose?: boolean\n\n  /** Display mode. */\n  @Prop() mode?: Mode = 'neutral'\n\n  /**\n   * Size of the menu item.\n   * @internal\n   */\n  @Prop() size?: 'sm' | 'lg'\n\n  /**\n   * The `target` attributed can be used in conjunction with the `href` attribute.\n   * See [mdn docs](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a#attr-target)\n   * for more information on the `target` attribute.\n   */\n  @Prop() target?: HTMLLdButtonElement['target']\n\n  @State() clonedAttributes: Record<string, string>\n\n  /** Sets focus on the anchor or button */\n  @Method()\n  async focusInner() {\n    this.buttonRef?.focusInner()\n  }\n\n  /**\n   * @internal\n   * Emitted on menu item click if preventClose prop is not truethy.\n   */\n  @Event() ldclosetooltip: EventEmitter\n\n  private handleClick = (ev: MouseEvent) => {\n    if (this.preventClose) return\n    this.ldclosetooltip.emit(ev)\n  }\n\n  componentWillLoad() {\n    this.attributesObserver = cloneAttributes.call(this, [\n      'ld-tabindex',\n      'mode',\n      'size',\n    ])\n  }\n\n  disconnectedCallback() {\n    /* istanbul ignore if */\n    if (this.attributesObserver) this.attributesObserver.disconnect()\n  }\n\n  render() {\n    return (\n      <Host>\n        <li class=\"ld-menuitem\" part=\"listitem\" role=\"menuitem\">\n          <ld-button\n            {...this.clonedAttributes}\n            class=\"ld-menuitem__button\"\n            disabled={this.disabled}\n            href={this.href}\n            iconOnly={false}\n            justifyContent=\"start\"\n            ldTabindex={this.ldTabindex}\n            mode={modeMap.get(this.mode)}\n            onClick={this.handleClick}\n            part=\"focusable button\"\n            ref={(element) => (this.buttonRef = element)}\n            size={this.size}\n            target={this.target}\n            type=\"button\"\n          >\n            <slot></slot>\n          </ld-button>\n        </li>\n      </Host>\n    )\n  }\n}\n"],"mappings":"oGAAA,MAAMA,EAAgB,iFCetB,MAAMC,EAAU,IAAIC,IAAkB,CACpC,CAAC,SAAU,gBACX,CAAC,YAAa,SACd,CAAC,UAAW,mB,MAcDC,EAAU,M,wEAmDbC,KAAAC,YAAeC,IACrB,GAAIF,KAAKG,aAAc,OACvBH,KAAKI,eAAeC,KAAKH,EAAG,E,4GA/BR,U,0EAmBtBI,mB,OACEC,EAAAP,KAAKQ,aAAS,MAAAD,SAAA,SAAAA,EAAEE,Y,CAclBC,oBACEV,KAAKW,mBAAqBC,EAAgBC,KAAKb,KAAM,CACnD,cACA,OACA,Q,CAIJc,uBAEE,GAAId,KAAKW,mBAAoBX,KAAKW,mBAAmBI,Y,CAGvDC,SACE,OACEC,EAACC,EAAI,KACHD,EAAA,MAAIE,MAAM,cAAcC,KAAK,WAAWC,KAAK,YAC3CJ,EAAA,YAAAK,OAAAC,OAAA,GACMvB,KAAKwB,iBAAgB,CACzBL,MAAM,sBACNM,SAAUzB,KAAKyB,SACfC,KAAM1B,KAAK0B,KACXC,SAAU,MACVC,eAAe,QACfC,WAAY7B,KAAK6B,WACjBC,KAAMjC,EAAQkC,IAAI/B,KAAK8B,MACvBE,QAAShC,KAAKC,YACdmB,KAAK,mBACLa,IAAMC,GAAalC,KAAKQ,UAAY0B,EACpCC,KAAMnC,KAAKmC,KACXC,OAAQpC,KAAKoC,OACbC,KAAK,WAELpB,EAAA,e"}