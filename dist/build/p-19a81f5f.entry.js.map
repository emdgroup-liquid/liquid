{"version":3,"names":["ldOptionShadowCss","LdOptionStyle0","LdOption","componentWillLoad","this","selected","el","setAttribute","render","h","Host","key","isLdOption","includes","tagName","isLdOptgroup","isLdOptionInternal","isLdOptgroupInternal","isLdOptInternalHidden","opt","hidden","filtered","ldSelectCss","LdSelectStyle0","LdSelect","isObserverEnabled","optionSelectListenerEnabled","isDisabled","disabled","isAriaDisabled","ariaDisabled","updateTriggerMoreIndicator","refresh","multiple","maxRows","hasMore","requestAnimationFrame","selectionListRef","selectionListItems","Array","from","querySelectorAll","_a","querySelector","remove","forEach","classList","isOverflowing","moreItem","document","createElement","add","prepend","maxOffset","overflowingTotal","overflowing","offsetTop","hideLastVisibleIfMoreIndicatorOverflowing","innerText","notOverflowing","lastNotOverflowing","slice","updatePopperWidth","listboxRef","style","setProperty","selectRef","getBoundingClientRect","width","updatePopperShadowHeight","ldPopper","updateShadowHeight","triggerRef","height","updatePopperTheme","themeEl","closest","setTimeout","theme","toString","split","find","cl","startsWith","substring","updatePopper","popper","initPopper","position","customTetherOptions","tetherOptions","JSON","parse","Object","assign","classPrefix","element","target","attachment","targetAttachment","offset","mode","constraints","to","pin","Tether","initPopperObserver","getOptsRec","children","options","flatMap","child","getInternalOptionHTML","ldOption","optgroupDisabled","classStr","size","preventDeselection","value","innerHTML","replaceAll","getInternalOptgroupHTML","ldOptgroup","label","map","join","initOptions","initialized","internalOptionsContainerRef","length","TypeError","selectedOptions","filter","internalOptionsHTML","html","text","typeAheadHandler","updateSelectedHiddenInputs","selectedValues","inputs","hiddenInput","index","indexOf","splice","appendHiddenInput","name","type","undefined","appendChild","handleSlotChange","mutationsList","some","record","oldValues","newValues","emitEventsAndUpdateHidden","handlePopperChange","contains","mutation","oldValue","toFocus","hasAttribute","shadowRoot","getFilterInput","focus","initSlotChangeObserver","slotChangeObserver","MutationObserver","observe","subtree","childList","attributes","popperObserver","attributeFilter","attributeOldValue","togglePopper","expanded","enable","disable","focusInner","clearSelection","option","handleHome","ev","preventDefault","handleEnd","visibleOptions","activeElement","selectAndFocus","shiftKey","dispatchEvent","KeyboardEvent","handleFilterChange","opts","query","detail","trim","toLowerCase","allFiltered","filterMatchesOpt","filteredOpts","optTextLower","textContent","Boolean","allOptsFiltered","handleFilterCreate","resetFilter","ldoptioncreate","emit","canCreate","creatable","focusPrev","current","previousElementSibling","lastInOptgroup","at","closestOptgroup","focusNext","firstInOptgroup","nextElementSibling","next","filterInput","handleFocusEvent","relatedTarget","stopImmediatePropagation","handleTriggerClick","handleClearClick","handleClearSingleClick","optionValue","selection","focusVisible","newSelection","oldSelection","stringify","renderHiddenInput","InputEvent","bubbles","composed","ldchange","ldinput","scrollHeight","clientHeight","updateHiddenInputs","hiddenInputs","outerForm","form","handleWindowResize","handleSelect","handleKeyDown","metaKey","filterHasFocus","btnClearRef","nextOpt","typeAhead","handleClickOutside","composedPath","isTrusted","handleTouchOutside","customIcon","hasCustomIcon","registerAutofocus","autofocus","componentDidLoad","TypeAheadHandler","componentDidUpdate","disconnectedCallback","disconnect","destroy","clearTimeout","detached","inline","ghost","invalid","triggerCl","triggerIconCl","triggerHtml","placeholder","triggerText","_b","class","getClassNames","part","onBlur","onFocusout","zIndex","ref","role","tabindex","ldTabindex","onClick","maxHeight","order","title","sanitize","sanitizeConfig","call","fill","viewBox","stroke","d","_c","allOptionsFiltered","createButtonLabel","createInputLabel","filterMatchesOption","filterPlaceholder","onLdselectfilterchange","onLdselectfiltercreate","popperClass","ADD_ATTR","ldSelectPopperShadowCss","LdSelectPopperStyle0","LdSelectPopper","handleFilterInput","filterInputValue","ldselectfilterchange","handleCreate","ldselectfiltercreate","updateCanCreate","updatePinnedState","isPinned","newValue","updateFilter","newExpanded","shadowHeight","display","onInput"],"sources":["../src/liquid/components/ld-select/ld-option/ld-option.shadow.css?tag=ld-option&encapsulation=shadow","../src/liquid/components/ld-select/ld-option/ld-option.tsx","../src/liquid/components/ld-select/utils/type-guards.ts","../src/liquid/components/ld-select/ld-select.css?tag=ld-select&encapsulation=shadow","../src/liquid/components/ld-select/ld-select.tsx","../src/liquid/components/ld-select/ld-select-popper/ld-select-popper.shadow.css?tag=ld-select-popper&encapsulation=shadow","../src/liquid/components/ld-select/ld-select-popper/ld-select-popper.tsx"],"sourcesContent":[null,"import { Component, h, Host, Prop, Element } from '@stencil/core'\n\n/**\n * @virtualProp ref - reference to component\n * @virtualProp {string | number} key - for tracking the node's identity when working with lists\n */\n@Component({\n  tag: 'ld-option',\n  styleUrl: 'ld-option.shadow.css',\n  shadow: true,\n})\nexport class LdOption {\n  @Element() el: HTMLElement\n\n  /**\n   * The content of this attribute represents the value to be submitted with the form,\n   * should this option be selected. If this attribute is omitted, the value is taken\n   * from the text content of the option element.\n   */\n  @Prop() value?: string\n\n  /** If present, this boolean attribute indicates that the option is selected. */\n  @Prop() selected?: boolean\n\n  /** Disables the option. */\n  @Prop() disabled?: boolean\n\n  /**\n   * @internal\n   * Set to true on filtering via select input.\n   */\n  @Prop() filtered? = false\n\n  componentWillLoad() {\n    // Setting selected via prop directly triggers the mutation observer to fire twice on attribute chage.\n    // This is indeed only true for the selected attribute. The disabled attribute works fine when assigned directly.\n    if (this.selected) {\n      this.el.setAttribute('selected', '')\n    }\n  }\n\n  render() {\n    return (\n      <Host>\n        <slot></slot>\n      </Host>\n    )\n  }\n}\n","export const isLdOption = (\n  el: HTMLElement | Node | EventTarget\n): el is HTMLLdOptionElement | HTMLLdOptionInternalElement =>\n  ['LD-OPTION', 'LD-OPTION-INTERNAL'].includes((el as HTMLElement)?.tagName)\n\nexport const isLdOptgroup = (\n  el: HTMLElement | Node | EventTarget\n): el is HTMLLdOptgroupElement | HTMLLdOptgroupInternalElement =>\n  ['LD-OPTGROUP', 'LD-OPTGROUP-INTERNAL'].includes((el as HTMLElement)?.tagName)\n\nexport const isLdOptionInternal = (\n  el: HTMLElement | Node | EventTarget\n): el is HTMLLdOptionInternalElement =>\n  ['LD-OPTION-INTERNAL'].includes((el as HTMLElement)?.tagName)\n\nexport const isLdOptgroupInternal = (\n  el: HTMLElement | Node | EventTarget\n): el is HTMLLdOptgroupInternalElement =>\n  ['LD-OPTGROUP-INTERNAL'].includes((el as HTMLElement)?.tagName)\n\ntype HTMLLdOptInternal =\n  | HTMLLdOptionInternalElement\n  | HTMLLdOptgroupInternalElement\nexport const isLdOptInternalHidden = (\n  opt: HTMLLdOptInternal\n): opt is\n  | (HTMLLdOptInternal & {\n      hidden: true\n    })\n  | (HTMLLdOptInternal & {\n      filtered: true\n    }) => {\n  return opt.hidden || opt.filtered\n}\n",":host {\n  display: inline-flex;\n\n  .ld-select {\n    flex-grow: 1;\n    max-width: 100%;\n  }\n}\n\n:host,\n.ld-select {\n  /* reset */\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n  ul {\n    list-style: none;\n  }\n}\n\n.ld-select {\n  /* layout */\n  --ld-select-min-width: 12.8125rem;\n  --ld-select-min-height: var(--ld-sp-40);\n  --ld-select-min-height-sm: var(--ld-sp-32);\n  --ld-select-min-height-lg: 3.125rem;\n  --ld-select-padding-x: var(--ld-sp-12);\n  --ld-select-padding-x-sm: 0.625rem;\n  --ld-select-padding-x-lg: 0.875rem;\n  --ld-select-padding-y: var(--ld-sp-8);\n  --ld-select-padding-y-sm: var(--ld-sp-4);\n  --ld-select-padding-y-lg: var(--ld-sp-8);\n  --ld-select-padding-right: calc(var(--ld-sp-40) + var(--ld-sp-12));\n  --ld-select-padding-right-sm: calc(var(--ld-sp-40) + 0.625rem);\n  --ld-select-padding-right-lg: calc(var(--ld-sp-40) + 0.875rem);\n  --ld-select-icon-size: 1.25rem;\n  --ld-select-icon-size-sm: var(--ld-sp-16);\n  --ld-select-icon-size-lg: var(--ld-sp-24);\n  --ld-select-trigger-line-height: 1.25;\n\n  &--sm {\n    --ld-select-min-height: var(--ld-select-min-height-sm);\n    --ld-select-padding-x: var(--ld-select-padding-x-sm);\n    --ld-select-padding-y: var(--ld-select-padding-y-sm);\n    --ld-select-padding-right: var(--ld-select-padding-right-sm);\n    --ld-select-icon-size: var(--ld-select-icon-size-sm);\n  }\n\n  &--lg {\n    --ld-select-min-height: var(--ld-select-min-height-lg);\n    --ld-select-padding-x: var(--ld-select-padding-x-lg);\n    --ld-select-padding-y: var(--ld-select-padding-y-lg);\n    --ld-select-padding-right: var(--ld-select-padding-right-lg);\n    --ld-select-icon-size: var(--ld-select-icon-size-lg);\n  }\n\n  /* colors */\n  --ld-select-col: var(--ld-col-neutral-900);\n  --ld-select-col-disabled: var(--ld-col-neutral-100);\n  --ld-select-col-border: var(--ld-col-neutral-100);\n  --ld-select-col-border-hover: var(--ld-col-neutral-300);\n  --ld-select-bg-col: var(--ld-col-wht);\n  --ld-select-selection-col: var(--ld-col-wht);\n\n  /* themable colors */\n  --ld-select-invalid-col: var(--ld-thm-error);\n  --ld-select-invalid-icon-col-hover: var(--ld-thm-error-hover);\n  --ld-select-invalid-icon-col-focus: var(--ld-thm-error-focus);\n  --ld-select-invalid-icon-col-active: var(--ld-thm-error-active);\n  --ld-select-invalid-disabled-bg-col: var(--ld-thm-error-disabled);\n  --ld-select-thm-col: var(--ld-thm-primary);\n  --ld-select-thm-col-hover: var(--ld-thm-primary-hover);\n  --ld-select-thm-col-focus: var(--ld-thm-primary-focus);\n  --ld-select-thm-col-active: var(--ld-thm-primary-active);\n  --ld-select-ghost-trigger-bg-col-hover: var(--ld-thm-primary-alpha-lowest);\n  --ld-select-ghost-trigger-bg-col-focus: var(--ld-thm-primary-alpha-low);\n\n  display: inline-flex;\n  position: relative;\n\n  select + .ld-icon,\n  ::slotted(ld-icon) {\n    width: var(--ld-select-icon-size);\n    height: var(--ld-select-icon-size);\n  }\n\n  ::slotted(ld-icon) {\n    display: contents !important;\n  }\n\n  select {\n    + .ld-icon,\n    + .ld-select__icon {\n      position: absolute;\n      right: var(--ld-select-padding-x);\n      top: 50%;\n      transform: translateY(-50%);\n    }\n\n    &[multiple] + .ld-icon,\n    &[multiple] + .ld-select__icon {\n      display: none;\n    }\n\n    + .ld-icon {\n      width: var(--ld-select-icon-size);\n      height: var(--ld-select-icon-size);\n    }\n  }\n\n  > select[multiple] {\n    overflow: auto;\n  }\n}\n\n/* Mobile Safari (iOS only) */\n/* stylelint-disable-next-line media-feature-range-notation, media-feature-name-no-vendor-prefix */\n@media screen and (max-width: 767px) and (-webkit-min-device-pixel-ratio: 0) {\n  .ld-select > select[multiple] {\n    padding-right: calc(var(--ld-select-padding-x) + var(--ld-sp-24));\n\n    + .ld-icon,\n    + .ld-select__icon {\n      display: flex;\n    }\n  }\n}\n\n.ld-select--expanded {\n  .ld-tether-target-attached-bottom {\n    .ld-select__btn-trigger:not(.ld-select__btn-trigger--detached) {\n      border-bottom-left-radius: 0;\n      border-bottom-right-radius: 0;\n    }\n  }\n}\n\n:where(.ld-select:not(.ld-select--inline, .ld-select--ghost)) {\n  min-width: var(--ld-select-min-width);\n}\n\n.ld-select__select,\n.ld-select__btn-trigger {\n  width: 100%;\n}\n\n.ld-select > select,\n.ld-select__btn-trigger {\n  /* outline: none; */\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  font: var(--ld-typo-body-m);\n  line-height: var(--ld-select-trigger-line-height);\n  border: 0;\n  padding: var(--ld-select-padding-y) var(--ld-select-padding-x);\n  border-radius: var(--ld-br-m);\n  height: 100%;\n  user-select: none;\n  touch-action: manipulation;\n  color: var(--ld-select-col);\n  background-color: var(--ld-select-bg-col);\n  text-align: left;\n  appearance: none;\n  -webkit-touch-callout: none;\n\n  &:where(select) {\n    width: 100%;\n  }\n\n  &:where(select:not([multiple])) {\n    padding-right: calc(var(--ld-select-padding-x) + var(--ld-sp-24));\n  }\n\n  &:where(\n      select:not(\n          :disabled,\n          [aria-disabled]:where(\n              :not([aria-disabled=''], [aria-disabled='false'])\n            )\n        )\n    ),\n  &:where(\n      .ld-select__btn-trigger:not(\n          [aria-disabled]:where(\n              :not([aria-disabled=''], [aria-disabled='false'])\n            )\n        )\n    ) {\n    cursor: pointer;\n  }\n\n  &:where([aria-expanded='true']) {\n    z-index: 2;\n\n    &:not(:focus:focus-visible, .ld-select__btn-trigger--detached) {\n      box-shadow: none;\n    }\n  }\n\n  &:disabled,\n  &:disabled + .ld-select__icon,\n  &:disabled + .ld-icon,\n  &:where(\n      [aria-disabled]:where(:not([aria-disabled=''], [aria-disabled='false']))\n    ),\n  &:where(\n      [aria-disabled]:where(:not([aria-disabled=''], [aria-disabled='false']))\n    )\n    + .ld-select__icon,\n  &:where(\n      [aria-disabled]:where(:not([aria-disabled=''], [aria-disabled='false']))\n    )\n    + .ld-icon {\n    color: var(--ld-select-col-disabled);\n  }\n}\n\n.ld-select__btn-trigger {\n  overflow: hidden;\n}\n\n:where(.ld-select),\n:where(.ld-select) > select {\n  min-height: var(--ld-select-min-height);\n}\n\n.ld-select--ghost {\n  &:not(ld-select),\n  select,\n  .ld-select__btn-trigger {\n    background-color: transparent;\n  }\n\n  select,\n  .ld-select__btn-trigger {\n    &:not(:focus) {\n      box-shadow: none;\n    }\n  }\n}\n\n.ld-select:where(:not(.ld-select--ghost)) {\n  &:where(.ld-select--detached),\n  &:where(:not(.ld-select--detached, .ld-select--expanded)) {\n    :where(select),\n    :where(.ld-select__btn-trigger) {\n      box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-select-col-border);\n    }\n  }\n\n  &:where(:not(.ld-select--invalid)) {\n    select,\n    .ld-select__btn-trigger {\n      &:where(\n          .ld-select__btn-trigger--detached:not(\n              :disabled,\n              [aria-disabled]:where(\n                  :not([aria-disabled=''], [aria-disabled='false'])\n                )\n            )\n        ),\n      &:where(\n          :not(\n              :disabled,\n              [aria-disabled]:where(\n                  :not([aria-disabled=''], [aria-disabled='false'])\n                ),\n              .ld-select__btn-trigger--detached,\n              [aria-expanded='true']\n            )\n        ) {\n        @media (hover: hover) {\n          &:hover:not(:focus:focus-visible) {\n            box-shadow: inset 0 0 0 var(--ld-sp-2)\n              var(--ld-select-col-border-hover);\n          }\n        }\n      }\n    }\n  }\n}\n\n.ld-select--invalid > select,\n.ld-select--invalid .ld-select__btn-trigger--invalid {\n  &:where(:not(:disabled)) {\n    &:where(:focus:focus-visible) {\n      box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-select-invalid-col);\n    }\n  }\n\n  &:where(\n      :not(\n          :disabled,\n          [aria-disabled]:where(\n              :not([aria-disabled=''], [aria-disabled='false'])\n            )\n        )\n    ) {\n    &:where(:not(:focus:focus-visible)) {\n      background-color: var(--ld-select-invalid-disabled-bg-col);\n      color: var(--ld-select-invalid-col);\n    }\n\n    &:where(:not(.ld-select__btn-trigger--ghost)) {\n      box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-select-invalid-col);\n    }\n\n    + .ld-icon,\n    + .ld-select__icon,\n    .ld-select__icon {\n      color: var(--ld-select-invalid-col);\n    }\n\n    @media (hover: hover) {\n      &:hover {\n        box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-select-invalid-col);\n\n        + .ld-icon,\n        + .ld-select__icon,\n        .ld-select__icon,\n        ::slotted(ld-icon) {\n          color: var(--ld-select-invalid-icon-col-hover);\n        }\n      }\n    }\n    &:where(:focus:focus-visible) {\n      + .ld-icon,\n      + .ld-select__icon,\n      .ld-select__icon,\n      ::slotted(ld-icon) {\n        color: var(--ld-select-invalid-icon-col-focus);\n      }\n    }\n    &:where(:active),\n    &:where(:active:focus-visible) {\n      + .ld-icon,\n      + .ld-select__icon,\n      .ld-select__icon,\n      ::slotted(ld-icon) {\n        color: var(--ld-select-invalid-icon-col-active);\n      }\n    }\n  }\n}\n\n.ld-select__btn-trigger-text-wrapper,\n.ld-select__selection-list {\n  flex-grow: 1;\n}\n\n.ld-select__btn-trigger-text-wrapper {\n  font: var(--ld-typo-label-m);\n  line-height: var(--ld-select-trigger-line-height);\n  padding: var(--ld-sp-6) var(--ld-sp-8) var(--ld-sp-6) 0;\n  height: calc(100% + var(--ld-sp-12));\n  margin: calc(-1 * var(--ld-sp-6)) 0;\n  display: flex;\n  align-items: center;\n  overflow: hidden;\n}\n\n.ld-select > select,\n.ld-select__btn-trigger-text,\n.ld-select__selection-label-text {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n\n.ld-select__selection-list-container {\n  display: flex;\n  flex-direction: column-reverse;\n  gap: var(--ld-sp-6);\n  margin-right: auto;\n}\n\n.ld-select__selection-list {\n  display: flex;\n  flex-wrap: wrap;\n  margin: calc(-1 * var(--ld-sp-1)) var(--ld-sp-4) calc(-1 * var(--ld-sp-4)) 0;\n  overflow: hidden;\n  padding: 0;\n}\n\n.ld-select__selection-list-item {\n  flex: 0 1;\n  margin-right: var(--ld-sp-4);\n  margin-bottom: var(--ld-sp-4);\n  width: 100%;\n}\n\n.ld-select__selection-list-item--overflowing {\n  display: none;\n}\n\n.ld-select__selection-list-more {\n  order: 2147483647; /* Highest possible */\n  display: inline-flex;\n  align-items: center;\n  font: var(--ld-typo-label-s);\n  font-weight: 700;\n  padding: var(--ld-sp-4) var(--ld-sp-6);\n  border-radius: var(--ld-br-m);\n  margin-right: var(--ld-sp-4);\n  margin-bottom: var(--ld-sp-4);\n}\n\n.ld-select__btn-clear-single,\n.ld-select__btn-clear {\n  /* outline: none; */\n  border: 0;\n  padding: 0;\n  border-radius: var(--ld-br-full);\n  user-select: none;\n  touch-action: manipulation;\n  background-color: transparent;\n  line-height: 0;\n  -webkit-touch-callout: none;\n\n  &:not(:disabled) {\n    cursor: pointer;\n  }\n}\n\n.ld-select__btn-clear {\n  margin-right: var(--ld-sp-6);\n  flex-shrink: 0;\n\n  &:disabled {\n    color: var(--ld-select-col-disabled);\n  }\n}\n\n.ld-select__btn-clear-single {\n  z-index: 1;\n  margin-left: var(--ld-sp-6);\n}\n\n.ld-select__selection-label {\n  position: relative;\n  width: 100%;\n  display: inline-flex;\n  align-items: center;\n  color: var(--ld-select-selection-col);\n  font: var(--ld-typo-label-s);\n  font-weight: 700;\n  padding: var(--ld-sp-4) var(--ld-sp-6);\n}\n\n.ld-select__selection-label-bg {\n  position: absolute;\n  inset: 0;\n  border-radius: var(--ld-br-m);\n\n  :where(\n      .ld-select__btn-trigger[aria-disabled]:where(\n          :not([aria-disabled=''], [aria-disabled='false'])\n        )\n    )\n    & {\n    background-color: var(--ld-select-col-disabled);\n  }\n}\n\n.ld-select__selection-label-text {\n  z-index: 1;\n}\n\n.ld-select__btn-clear-single-icon {\n  --ld-select-btn-clear-single-size: 0.75rem;\n  width: var(--ld-select-btn-clear-single-size);\n  height: var(--ld-select-btn-clear-single-size);\n}\n\n.ld-select__btn-clear-icon {\n  --ld-select-btn-clear-size: 1.25rem;\n  width: var(--ld-select-btn-clear-size);\n  height: var(--ld-select-btn-clear-size);\n}\n\n.ld-select__icon {\n  fill: none;\n  width: var(--ld-sp-16);\n  height: var(--ld-sp-16);\n}\n\n.ld-select select + .ld-icon,\n.ld-select__icon,\n.ld-select ::slotted(ld-icon) {\n  flex-shrink: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  pointer-events: none;\n\n  :where(\n      select[aria-disabled]:where(\n          :not([aria-disabled=''], [aria-disabled='false'])\n        )\n    )\n    &,\n  :where(select:disabled) &,\n  :where(\n      .ld-select__btn-trigger[aria-disabled]:where(\n          :not([aria-disabled=''], [aria-disabled='false'])\n        )\n    )\n    & {\n    color: var(--ld-select-col-disabled);\n  }\n\n  .ld-icon,\n  svg {\n    width: 100%;\n    height: 100%;\n  }\n}\n\n.ld-select__icon--rotated {\n  transform-origin: center;\n  transform: rotate(180deg);\n}\n\n.ld-select__slot-container {\n  display: none;\n}\n\n:where(\n    .ld-select:not(.ld-select--disabled, [aria-disabled], .ld-select--invalid)\n  ) {\n  .ld-select__btn-trigger {\n    &:where(:focus:focus-visible) {\n      box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-select-thm-col);\n    }\n  }\n\n  &.ld-select--ghost {\n    :where(select:not(:disabled)),\n    :where(.ld-select__btn-trigger) {\n      @media (hover: hover) {\n        &:hover:not(:focus) {\n          background-color: var(--ld-select-ghost-trigger-bg-col-hover);\n        }\n      }\n      &:active,\n      &:active:focus-visible {\n        background-color: var(--ld-select-ghost-trigger-bg-col-focus);\n      }\n    }\n  }\n\n  :where(select:not(:disabled)),\n  :where(.ld-select__btn-trigger) {\n    .ld-select__icon,\n    + .ld-icon,\n    + .ld-select__icon,\n    ::slotted(ld-icon) {\n      color: var(--ld-select-thm-col);\n    }\n\n    @media (hover: hover) {\n      &:where(:hover) {\n        .ld-select__icon,\n        + .ld-icon,\n        + .ld-select__icon,\n        ::slotted(ld-icon) {\n          color: var(--ld-select-thm-col-hover);\n        }\n      }\n    }\n    &:where(:focus:focus-visible) {\n      box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-select-thm-col);\n\n      .ld-select__icon,\n      + .ld-select__icon,\n      ::slotted(ld-icon) {\n        color: var(--ld-select-thm-col-focus);\n      }\n    }\n    &:where(:active),\n    &:where(:active:focus-visible) {\n      .ld-select__icon,\n      + .ld-icon,\n      + .ld-select__icon,\n      ::slotted(ld-icon) {\n        color: var(--ld-select-thm-col-active);\n      }\n    }\n  }\n}\n\n:where(.ld-select:not(.ld-select--disabled)):not(.ld-select--invalid) {\n  :where(select:not(:disabled)),\n  :where(.ld-select__btn-trigger) {\n    &:where(:focus:focus-visible) {\n      box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-select-thm-col);\n    }\n  }\n}\n\n:where(\n    .ld-select:not(\n        .ld-select--disabled,\n        [aria-disabled],\n        [aria-disabled]:where(:not([aria-disabled=''], [aria-disabled='false']))\n      )\n  ) {\n  .ld-select__selection-list-more {\n    color: var(--ld-select-thm-col);\n  }\n  .ld-select__selection-label-bg {\n    background-color: var(--ld-select-thm-col);\n  }\n\n  .ld-select__btn-clear-single {\n    &:where(:focus:focus-visible) + .ld-select__selection-label-bg {\n      background-color: var(--ld-select-thm-col-focus);\n    }\n\n    &:where(:active),\n    &:where(:active:focus-visible) {\n      + .ld-select__selection-label-bg {\n        background-color: var(--ld-select-thm-col-active);\n      }\n    }\n  }\n\n  .ld-select__btn-clear {\n    color: var(--ld-select-thm-col);\n\n    &:where(:focus:focus-visible) {\n      color: var(--ld-select-thm-col-focus);\n    }\n    @media (hover: hover) {\n      &:where(:hover) {\n        color: var(--ld-select-thm-col-hover);\n      }\n    }\n    &:where(:active),\n    &:where(:active:focus-visible) {\n      color: var(--ld-select-thm-col-active);\n    }\n  }\n}\n","import {\n  Component,\n  Element,\n  h,\n  Host,\n  Event,\n  Listen,\n  Prop,\n  State,\n  Watch,\n  EventEmitter,\n  Method,\n} from '@stencil/core'\nimport Tether from 'tether'\nimport { getClassNames } from '../../utils/getClassNames'\nimport { registerAutofocus } from '../../utils/focus'\nimport { closest } from '../../utils/closest'\nimport { TypeAheadHandler } from '../../utils/typeahead'\nimport { isAriaDisabled } from '../../utils/ariaDisabled'\nimport { sanitize } from '../../utils/sanitize'\nimport {\n  isLdOptgroup,\n  isLdOptgroupInternal,\n  isLdOption,\n  isLdOptionInternal,\n  isLdOptInternalHidden,\n} from './utils/type-guards'\n\ntype SelectOption = { value: string; html: string; text: string }\n\n/**\n * @slot - the default slot contains the select options\n * @slot icon - replaces caret with custom trigger button icon\n * @virtualProp ref - reference to component\n * @virtualProp {string | number} key - for tracking the node's identity when working with lists\n */\n@Component({\n  tag: 'ld-select',\n  styleUrl: 'ld-select.css',\n  shadow: true,\n})\nexport class LdSelect implements InnerFocusable {\n  @Element() el: HTMLLdSelectElement\n  private selectRef!: HTMLDivElement\n  private triggerRef!: HTMLDivElement\n  private selectionListRef!: HTMLUListElement\n  private internalOptionsContainerRef!: HTMLDivElement\n  private listboxRef!: HTMLLdSelectPopperElement\n  private btnClearRef: HTMLButtonElement\n  private popper: Tether\n  private slotChangeObserver: MutationObserver\n  private popperObserver: MutationObserver\n  private isObserverEnabled = true\n  private optionSelectListenerEnabled = true\n\n  /** Alternative disabled state that keeps element focusable */\n  @Prop() ariaDisabled: string\n\n  /**\n   * This Boolean attribute lets you specify that a form control should have input focus when the page loads.\n   * Only one form element in a document can have the autofocus attribute.\n   */\n  @Prop({ reflect: true }) autofocus: boolean\n\n  /**\n   * Creatable mode can be enabled when the filter prop is set to true.\n   * This mode allows the user to create new options using the filter input field.\n   */\n  @Prop() creatable?: boolean\n\n  /** The \"create\" input label (creatable mode). */\n  @Prop() createInputLabel? = 'Press Enter to create option'\n\n  /** The \"create\" button label (creatable mode). */\n  @Prop() createButtonLabel? = 'Create option'\n\n  /** Disabled state of the component. */\n  @Prop() disabled?: boolean\n\n  /** The form element to associate the select with (its form owner). */\n  @Prop() form?: string\n\n  /** Set this property to `true` in order to enable an input field for filtering options. */\n  @Prop() filter?: boolean\n\n  /** The filter input placeholder. */\n  @Prop() filterPlaceholder? = 'Filter options'\n\n  /** Set this property to `true` in order to mark the select visually as invalid. */\n  @Prop() invalid?: boolean\n\n  /** Tab index of the trigger button. */\n  @Prop() ldTabindex = 0\n\n  /** Constrains the height of the trigger button by replacing overflowing selection with a \"+X more\" indicator. */\n  @Prop({ mutable: true }) maxRows?: number\n\n  // prettier-ignore\n  /** Display mode. */\n  @Prop() mode?:\n    // default\n    | 'detached' // = default  + small gap between trigger button and popper\n    | 'inline' //   = detached + minumum trigger button width\n    | 'ghost' //    = inline   + transparent background and borders\n\n  /** Multiselect mode. */\n  @Prop() multiple?: boolean\n\n  /** Used to specify the name of the control. */\n  @Prop() name?: string\n\n  /** Used as trigger button label in multiselect mode and in single select mode if nothing is selected. */\n  @Prop() placeholder?: string\n\n  /** Attached as CSS class to the select popper element. */\n  @Prop() popperClass?: string\n\n  /** Prevents a state with no options selected after initial selection in single select mode. */\n  @Prop() preventDeselection?: boolean\n\n  /** A Boolean attribute indicating that an option with a non-empty string value must be selected. */\n  @Prop() required?: boolean\n\n  /**\n   * Sanitize config passed to DOMPurify's sanitize method.\n   * If passed as string, the component will try to parse the string as JSON.\n   * See https://github.com/cure53/DOMPurify#can-i-configure-dompurify\n   */\n  @Prop() sanitizeConfig?: SanitizeConfig | string\n\n  /** Currently selected option(s) (read only!) */\n  @Prop({ mutable: true }) selected?: SelectOption[] = []\n\n  /** Size of the select trigger button. */\n  @Prop() size?: 'sm' | 'lg'\n\n  /** Tether options object to be merged with the default options (optionally stringified). */\n  @Prop() tetherOptions?: Partial<Tether.ITetherOptions> | string\n\n  @State() allOptsFiltered = false\n  @State() filterMatchesOpt = false\n  @State() expanded = false\n  @State() hasCustomIcon = false\n  @State() hasMore = false\n  @State() initialized = false\n  @State() internalOptionsHTML: string\n  @State() renderHiddenInput = false\n  @State() theme: string\n  @State() typeAheadHandler: TypeAheadHandler<\n    HTMLLdOptionInternalElement | HTMLLdOptgroupInternalElement\n  >\n\n  /**\n   * Emitted with an array of selected values\n   * when an alteration to the selection is committed.\n   */\n  @Event() ldchange: EventEmitter<string[]>\n\n  /**\n   * Emitted with an array of selected values\n   * when an alteration to the selection is committed.\n   */\n  @Event() ldinput: EventEmitter<string[]>\n\n  /**\n   * Emitted when an option is created in create mode\n   * with the filter input value.\n   */\n  @Event() ldoptioncreate: EventEmitter<string>\n\n  /** Sets focus on the trigger button. */\n  @Method()\n  async focusInner() {\n    if (!this.disabled) {\n      // Experimental feature that fixes a bug in Firefox only.\n      // See https://github.com/emdgroup-liquid/liquid/issues/486\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error\n      this.triggerRef.focus({ focusVisible: true })\n    }\n  }\n\n  @Watch('selected')\n  emitEventsAndUpdateHidden(\n    newSelection: SelectOption[],\n    oldSelection: SelectOption[]\n  ) {\n    if (!this.initialized) return\n\n    const newValues = newSelection.map((option) => option.value)\n    const oldValues = oldSelection.map((option) => option.value)\n    if (JSON.stringify(newValues) === JSON.stringify(oldValues)) return\n\n    this.updateTriggerMoreIndicator(true)\n\n    if (this.renderHiddenInput) {\n      this.updateSelectedHiddenInputs(newSelection)\n    }\n\n    // Synchronize options with internal options.\n    this.isObserverEnabled = false\n    this.el.querySelectorAll('ld-option').forEach((ldOption) => {\n      ldOption.selected = newValues.some((value) => value === ldOption.value)\n      if (!ldOption.selected && ldOption.hidden) {\n        this.listboxRef\n          .querySelector(`ld-option-internal[value=\"${ldOption.value}\"]`)\n          .remove()\n        ldOption.remove()\n      }\n    })\n    this.isObserverEnabled = true\n\n    this.el.dispatchEvent(new InputEvent('change', { bubbles: true }))\n    this.el.dispatchEvent(\n      new InputEvent('input', { bubbles: true, composed: true })\n    )\n    this.ldchange.emit(newValues)\n    this.ldinput.emit(newValues)\n  }\n\n  private isDisabled = () => this.disabled || isAriaDisabled(this.ariaDisabled)\n\n  // This method must be a function declaration for testing purposes;\n  // otherwise Jest's mockImplementation won't work here.\n  private isOverflowing() {\n    /* istanbul ignore next */\n    return (\n      this.selectionListRef.scrollHeight >\n      this.selectionListRef.clientHeight + 2\n    )\n  }\n\n  private updateTriggerMoreIndicator = (refresh = false) => {\n    if (!this.multiple || !this.maxRows) return\n\n    if (refresh) this.hasMore = false\n\n    requestAnimationFrame(() => {\n      if (!this.selectionListRef) return\n\n      const selectionListItems = Array.from(\n        this.selectionListRef.querySelectorAll<HTMLLIElement>(\n          '.ld-select__selection-list-item'\n        )\n      )\n\n      if (!this.hasMore) {\n        // reset\n        this.selectionListRef\n          .querySelector('.ld-select__selection-list-more')\n          ?.remove()\n        selectionListItems.forEach((el) => {\n          el.classList.remove('ld-select__selection-list-item--overflowing')\n        })\n      }\n\n      // If overflowing, hide overflowing and show \"+X\" indicator\n      if (this.isOverflowing()) {\n        let moreItem\n        if (!this.hasMore) {\n          moreItem = document.createElement('li')\n          moreItem.classList.add('ld-select__selection-list-more')\n          this.selectionListRef.prepend(moreItem)\n        } else {\n          moreItem = this.selectionListRef.querySelector(\n            '.ld-select__selection-list-more'\n          )\n        }\n        this.hasMore = true\n\n        const maxOffset = this.maxRows * 1.75 * 16\n\n        let overflowingTotal = 0\n        selectionListItems.forEach((el) => {\n          const overflowing = overflowingTotal\n            ? true\n            : el.offsetTop >= maxOffset\n          el.classList[overflowing ? 'add' : 'remove'](\n            'ld-select__selection-list-item--overflowing'\n          )\n          if (overflowing) overflowingTotal++\n        })\n\n        const hideLastVisibleIfMoreIndicatorOverflowing = () => {\n          moreItem = this.selectionListRef.querySelector(\n            '.ld-select__selection-list-more'\n          )\n          moreItem.innerText = `+${overflowingTotal}`\n          if (moreItem.offsetTop < maxOffset) {\n            /* istanbul ignore next */\n            return\n          }\n\n          const notOverflowing = Array.from(\n            this.selectionListRef.querySelectorAll(\n              '.ld-select__selection-list-item:not(.ld-select__selection-list-item--overflowing)'\n            )\n          )\n          const [lastNotOverflowing] = notOverflowing.slice(-1)\n          if (lastNotOverflowing) {\n            lastNotOverflowing.classList.add(\n              'ld-select__selection-list-item--overflowing'\n            )\n            overflowingTotal++\n            moreItem.innerText = `+${overflowingTotal}`\n\n            requestAnimationFrame(() => {\n              hideLastVisibleIfMoreIndicatorOverflowing()\n            })\n          }\n        }\n        hideLastVisibleIfMoreIndicatorOverflowing()\n      }\n    })\n  }\n\n  private updatePopperWidth = () => {\n    this.listboxRef.style.setProperty(\n      'width',\n      `${this.selectRef.getBoundingClientRect().width}px`\n    )\n  }\n\n  private updatePopperShadowHeight = () => {\n    const ldPopper = this.listboxRef\n    ldPopper.updateShadowHeight(\n      `calc(100% + ${this.triggerRef.getBoundingClientRect().height}px)`\n    )\n  }\n\n  private updatePopperTheme = () => {\n    const themeEl = this.el.closest('[class*=\"ld-theme-\"]')\n    if (!themeEl) return\n\n    setTimeout(() => {\n      // Array.from(themeEl.classList).find doesn't work in JSDom for some reason.\n      this.theme = themeEl.classList\n        .toString()\n        .split(' ')\n        .find((cl) => cl.startsWith('ld-theme-'))\n        ?.substring(9)\n    })\n  }\n\n  private updatePopper = () => {\n    if (!this.popper) this.initPopper()\n    this.popper.position()\n    this.updatePopperWidth()\n    this.updatePopperShadowHeight()\n    this.updatePopperTheme()\n  }\n\n  private initPopper = () => {\n    const customTetherOptions: Partial<Tether.ITetherOptions> =\n      typeof this.tetherOptions === 'string'\n        ? JSON.parse(this.tetherOptions)\n        : this.tetherOptions\n    const tetherOptions: Tether.ITetherOptions = {\n      classPrefix: 'ld-tether',\n      element: this.listboxRef,\n      target: this.selectRef,\n      attachment: 'top left',\n      targetAttachment: 'bottom left',\n      offset: this.mode ? '-4px 0' : '0 0',\n      constraints: [\n        {\n          to: 'window',\n          pin: true,\n        },\n      ],\n      ...customTetherOptions,\n    }\n\n    this.popper = new Tether(tetherOptions)\n\n    // Observe popper in order to set focus as soon as it becomes visible.\n    this.initPopperObserver()\n\n    this.listboxRef.classList.add('ld-select__popper--initialized')\n  }\n\n  private getOptsRec = (\n    children: Element[]\n  ): (HTMLLdOptionElement | HTMLLdOptionInternalElement)[] => {\n    const options = children.flatMap((child) => {\n      if (isLdOption(child)) {\n        return child\n      }\n      if (isLdOptgroup(child)) {\n        return this.getOptsRec(Array.from(child.children))\n      }\n      return []\n    })\n    return options\n  }\n\n  private getInternalOptionHTML = (\n    ldOption: HTMLLdOptionElement,\n    optgroupDisabled = false\n  ) => {\n    const classStr = ldOption.classList.toString()\n    return `<ld-option-internal${classStr ? ' class=\"' + classStr + '\"' : ''}${\n      this.multiple ? ' mode=\"checkbox\"' : ''\n    }${this.size ? ' size=\"' + this.size + '\"' : ''}${\n      this.preventDeselection ? ' prevent-deselection' : ''\n    }${ldOption.selected ? ' selected' : ''}${\n      ldOption.hidden ? ' hidden' : ''\n    }${ldOption.value ? ' value=\"' + ldOption.value + '\"' : ''}${\n      ldOption.disabled || optgroupDisabled ? ' disabled' : ''\n    }>${ldOption.innerHTML.replaceAll(\n      /<ld-icon (.|\\n|\\r)*slot=\"icon\"(.|\\n|\\r)*>(.|\\n|\\r)*<\\/ld-icon>/g,\n      ''\n    )}</ld-option-internal>`\n  }\n\n  private getInternalOptgroupHTML = (ldOptgroup: HTMLLdOptgroupElement) => {\n    const classStr = ldOptgroup.classList.toString()\n    return `<ld-optgroup-internal label=${ldOptgroup.label} ${\n      classStr ? ' class=\"' + classStr + '\"' : ''\n    }${this.multiple ? ' mode=\"checkbox\"' : ''}${\n      this.size ? ' size=\"' + this.size + '\"' : ''\n    }${ldOptgroup.hidden ? ' hidden' : ''}${\n      ldOptgroup.disabled ? ' disabled' : ''\n    }>${Array.from(ldOptgroup.children)\n      .map((ldOption: HTMLLdOptionElement) =>\n        this.getInternalOptionHTML(ldOption, ldOptgroup.disabled)\n      )\n      .join('')}</ld-optgroup-internal>`\n  }\n\n  private initOptions = () => {\n    const initialized = this.initialized\n    const children = Array.from(\n      initialized ? this.internalOptionsContainerRef.children : this.el.children\n    )\n\n    const options = this.getOptsRec(children)\n\n    if (!options.length) {\n      throw new TypeError(\n        'ld-select requires at least one ld-option element as a child, but found none.'\n      )\n    }\n\n    const selectedOptions = options.filter((child) => {\n      return child.selected\n    })\n\n    if (selectedOptions.length > 1 && !this.multiple) {\n      throw new TypeError(\n        'Multiple selected options are not allowed, if multiple option is not set.'\n      )\n    }\n\n    if (!initialized) {\n      let internalOptionsHTML = ''\n      children.forEach((child) => {\n        if (isLdOption(child)) {\n          internalOptionsHTML += this.getInternalOptionHTML(child)\n        } else if (isLdOptgroup(child)) {\n          internalOptionsHTML += this.getInternalOptgroupHTML(child)\n        } // else it's the slotted icon which we ignore.\n      })\n      this.internalOptionsHTML = internalOptionsHTML\n    }\n    this.selected = selectedOptions.map((child) => {\n      return {\n        value: child.value,\n        html: child.innerHTML,\n        text: child.innerText,\n      }\n    })\n\n    if (this.listboxRef) {\n      this.typeAheadHandler.options =\n        this.listboxRef.querySelectorAll('ld-option-internal')\n    }\n    this.updateTriggerMoreIndicator(true)\n  }\n\n  private updateSelectedHiddenInputs = (selected: SelectOption[]) => {\n    const selectedValues = selected.map(({ value }) => value)\n    const inputs = this.el.querySelectorAll('input')\n\n    // For each existing input, remove it from DOM if not in selected.\n    // Remove each value from selectedValues if hidden input already exists.\n    inputs.forEach((hiddenInput) => {\n      const index = selectedValues.indexOf(hiddenInput.value)\n      if (index >= 0) {\n        selectedValues.splice(index, 1)\n      } else {\n        hiddenInput.remove()\n      }\n    })\n\n    // If nothing is selected we need only one hidden input without value.\n    if (selected.length === 0) {\n      this.appendHiddenInput()\n      return\n    }\n\n    // Else add hidden inputs for each value in selectedValues.\n    selectedValues.forEach(this.appendHiddenInput)\n  }\n\n  private appendHiddenInput = (value?: string) => {\n    const hiddenInput = document.createElement('input')\n\n    // Slot required to keep the hidden input outside the popper.\n    hiddenInput.setAttribute('slot', 'hidden')\n    hiddenInput.name = this.name\n    hiddenInput.type = 'hidden'\n\n    if (value !== undefined) {\n      hiddenInput.value = value\n    }\n\n    this.el.appendChild(hiddenInput)\n  }\n\n  @Watch('name')\n  @Watch('form')\n  updateHiddenInputs() {\n    const hiddenInputs = this.el.querySelectorAll('input')\n\n    const outerForm = this.el.closest('form')\n    if (!this.name || !(outerForm || this.form)) {\n      hiddenInputs.forEach((hiddenInput) => {\n        hiddenInput.remove()\n      })\n      return\n    }\n\n    if (!hiddenInputs.length) {\n      this.updateSelectedHiddenInputs(this.selected)\n      return\n    }\n\n    hiddenInputs.forEach((hiddenInput) => {\n      hiddenInput.name = this.name\n      if (this.form) {\n        hiddenInput.setAttribute('form', this.form)\n      }\n    })\n  }\n\n  private handleSlotChange = (mutationsList: MutationRecord[]) => {\n    if (!this.isObserverEnabled) return\n    if (\n      !mutationsList.some(\n        (record) => isLdOption(record.target) || isLdOptgroup(record.target)\n      )\n    ) {\n      return\n    }\n\n    this.initialized = false\n\n    const oldValues = [...this.selected]\n    this.initOptions()\n\n    this.initialized = true\n    const newValues = [...this.selected]\n    this.emitEventsAndUpdateHidden(newValues, oldValues)\n  }\n\n  private handlePopperChange = (mutationsList: MutationRecord[]) => {\n    if (\n      this.listboxRef.classList.contains('ld-tether-enabled') &&\n      mutationsList.some((mutation) =>\n        mutation.oldValue.includes('display: none;')\n      )\n    ) {\n      // Popper has just been expanded and is visible.\n\n      // If there is a selected option in single select mode, focus it.\n      let toFocus\n      if (!this.multiple) {\n        // Using find instead of ld-option-internal[selected] selector below\n        // in order to prevent \"TypeError: e.getAttributeNode is not a function\" in JSDom.\n        toFocus = Array.from(\n          this.listboxRef.querySelectorAll('ld-option-internal')\n        )\n          .find((ldOption) => ldOption.hasAttribute('selected'))\n          ?.shadowRoot.querySelector('[role=\"option\"]')\n      }\n\n      // Otherwise, focus either the filter input (if available) or the trigger button.\n      if (!toFocus) {\n        if (this.filter) {\n          toFocus = this.getFilterInput()\n        } else {\n          toFocus = this.triggerRef\n        }\n      }\n\n      toFocus.focus()\n    }\n  }\n\n  private initSlotChangeObserver = () => {\n    this.slotChangeObserver = new MutationObserver(this.handleSlotChange)\n    this.slotChangeObserver.observe(this.el, {\n      subtree: true,\n      childList: true,\n      attributes: true,\n    })\n  }\n\n  private initPopperObserver = () => {\n    this.popperObserver = new MutationObserver(this.handlePopperChange)\n    this.popperObserver.observe(this.listboxRef, {\n      subtree: false,\n      childList: false,\n      attributes: true,\n      attributeFilter: ['style'],\n      attributeOldValue: true,\n    })\n  }\n\n  private getFilterInput = () =>\n    this.listboxRef.shadowRoot.querySelector<HTMLInputElement>(\n      '.ld-select-popper__filter-input'\n    )\n\n  private togglePopper = () => {\n    if (!this.popper) this.initPopper()\n\n    this.expanded = !this.expanded\n\n    if (this.expanded) {\n      this.popper.enable()\n    } else {\n      this.popper.disable()\n      this.focusInner()\n    }\n  }\n\n  private clearSelection = () => {\n    Array.from(this.listboxRef.querySelectorAll('ld-option-internal')).forEach(\n      (option) => {\n        option.selected = false\n      }\n    )\n    this.selected = []\n  }\n\n  @Listen('resize', { target: 'window', passive: true })\n  handleWindowResize() {\n    if (this.isDisabled()) return // this is for a minor performance optimization only\n\n    this.updatePopperWidth()\n    this.updateTriggerMoreIndicator(true)\n    this.updatePopperShadowHeight()\n  }\n\n  @Listen('ldoptionselect', { target: 'window', passive: true })\n  handleSelect(ev: CustomEvent<boolean>) {\n    const target = ev.target as HTMLLdOptionInternalElement\n\n    // Ignore events which are not fired on current instance.\n    if (target.closest('[role=\"listbox\"]') !== this.listboxRef) return\n\n    if (!this.optionSelectListenerEnabled) return\n    this.optionSelectListenerEnabled = false\n\n    if (!this.multiple) {\n      // Deselect currently selected option, if it's not the target option.\n      this.listboxRef\n        .querySelectorAll('ld-option-internal')\n        .forEach((option) => {\n          if (option !== target.closest('ld-option-internal')) {\n            option.selected = false\n          }\n        })\n      this.togglePopper()\n      if (this.filter) {\n        this.resetFilter()\n        this.focusInner()\n      }\n    }\n    this.initOptions()\n\n    this.optionSelectListenerEnabled = true\n  }\n\n  private handleHome = (ev) => {\n    ev.preventDefault()\n    this.focusInner()\n  }\n\n  private handleEnd = (ev) => {\n    // Move focus to the last option.\n    ev.preventDefault()\n    const visibleOptions = Array.from(\n      this.listboxRef.querySelectorAll('ld-option-internal')\n    ).filter((option) => !isLdOptInternalHidden(option))\n    if (document.activeElement !== visibleOptions[visibleOptions.length - 1]) {\n      visibleOptions[visibleOptions.length - 1].focusInner()\n    }\n  }\n\n  private selectAndFocus = (\n    ev: KeyboardEvent,\n    opt: HTMLLdOptionInternalElement | HTMLLdOptgroupInternalElement | undefined\n  ) => {\n    if (!opt) return\n\n    if (this.multiple && ev.shiftKey) {\n      if (\n        isLdOptionInternal(document.activeElement) &&\n        !isLdOptgroupInternal(document.activeElement) &&\n        !document.activeElement.hasAttribute('selected')\n      ) {\n        document.activeElement.dispatchEvent(\n          new KeyboardEvent('keydown', { key: ' ' })\n        )\n      }\n      if (!opt.hasAttribute('selected') && !isLdOptgroupInternal(opt)) {\n        opt.dispatchEvent(new KeyboardEvent('keydown', { key: ' ' }))\n      }\n    }\n    opt.focusInner()\n  }\n\n  private handleFilterChange = (ev: CustomEvent<string>) => {\n    // Hide options which do not match the filter query.\n    const opts = this.internalOptionsContainerRef.querySelectorAll<\n      HTMLLdOptionInternalElement | HTMLLdOptgroupInternalElement\n    >('ld-option-internal, ld-optgroup-internal')\n    const query = ev.detail.trim().toLowerCase()\n    let allFiltered = true\n    let filterMatchesOpt = false\n    const filteredOpts = Array.from(opts).filter((opt) => {\n      const optTextLower = isLdOptionInternal(opt)\n        ? opt.textContent.toLowerCase()\n        : (opt as HTMLLdOptgroupInternalElement).label.toLowerCase()\n      const filtered = Boolean(query) && !optTextLower.includes(query)\n\n      opt.filtered = filtered\n      if (optTextLower === query) {\n        filterMatchesOpt = true\n      }\n      if (!opt.filtered) {\n        allFiltered = false\n      }\n\n      return !filtered\n    })\n\n    this.typeAheadHandler.options = filteredOpts\n    this.allOptsFiltered = allFiltered\n    this.filterMatchesOpt = filterMatchesOpt\n\n    // Re-position popper after new height has been applied.\n    requestAnimationFrame(() => {\n      this.updatePopper()\n    })\n  }\n\n  private handleFilterCreate = () => {\n    // In single select mode, deselect currently selected option\n    if (!this.multiple) {\n      const options = this.el.querySelectorAll('ld-option')\n      options.forEach((ldOption) => {\n        ldOption.selected = false\n      })\n    }\n\n    const value = this.getFilterInput().value\n    this.resetFilter()\n    this.ldoptioncreate.emit(value)\n  }\n\n  private canCreate = () => {\n    return Boolean(\n      this.creatable && !this.filterMatchesOpt && this.getFilterInput().value\n    )\n  }\n\n  private focusPrev = (\n    current: HTMLLdOptionInternalElement | HTMLLdOptgroupInternalElement,\n    ev: KeyboardEvent\n  ) => {\n    // Focus previous visible option, if any.\n    // If the previous is an option, we check if it's visible.\n    if (isLdOptionInternal(current.previousElementSibling)) {\n      if (isLdOptInternalHidden(current.previousElementSibling)) {\n        // If it's hidden, we repeat with the hidden option.\n        this.focusPrev(current.previousElementSibling, ev)\n        return\n      }\n      // If it's not hidden we focus it.\n      this.selectAndFocus(ev, current.previousElementSibling)\n      return\n    }\n\n    // If the previous is an optgroup, we try to focus the last option in it.\n    if (isLdOptgroupInternal(current.previousElementSibling)) {\n      const lastInOptgroup = Array.from(\n        current.previousElementSibling.children\n      ).at(-1) as HTMLLdOptionInternalElement\n\n      // If it's hidden, we repeat with the hidden option.\n      if (isLdOptInternalHidden(lastInOptgroup)) {\n        this.focusPrev(lastInOptgroup, ev)\n        return\n      }\n      // If it's not hidden we focus it.\n      this.selectAndFocus(ev, lastInOptgroup)\n      return\n    }\n\n    // If there is no previous element, we check if we are currently in an optgroup.\n    const closestOptgroup =\n      isLdOptionInternal(current) &&\n      current.closest<HTMLLdOptgroupInternalElement | undefined>(\n        'ld-optgroup-internal'\n      )\n    // If we are in an optgroup, we try to focus the optgroup.\n    if (closestOptgroup) {\n      // If the optgroup is not visible, we set current to the optgroup and repeat.\n      if (isLdOptInternalHidden(closestOptgroup)) {\n        this.focusPrev(closestOptgroup, ev)\n        return\n      }\n      closestOptgroup.focusInner()\n      return\n    }\n\n    // Otherwise we focus either the filter input or the trigger button.\n    if (this.filter) {\n      this.getFilterInput().focus()\n      return\n    }\n    this.handleHome(ev)\n  }\n\n  private focusNext = (\n    current: HTMLLdOptionInternalElement | HTMLLdOptgroupInternalElement,\n    ev: KeyboardEvent\n  ) => {\n    // Focus next visible option, if any.\n    // If current is an optgroup, try to focus the first option in it.\n    if (isLdOptgroupInternal(current)) {\n      const firstInOptgroup = current.children[0] as HTMLLdOptionInternalElement\n      // If it's hidden, we repeat with the hidden option.\n      if (isLdOptInternalHidden(firstInOptgroup)) {\n        this.focusNext(firstInOptgroup, ev)\n        return\n      }\n      // If it's not hidden we focus it.\n      this.selectAndFocus(ev, firstInOptgroup)\n      return\n    }\n\n    // If the next is an option, we check if it's visible.\n    if (isLdOptionInternal(current.nextElementSibling)) {\n      if (isLdOptInternalHidden(current.nextElementSibling)) {\n        // If it's hidden, we repeat with the hidden option.\n        this.focusNext(current.nextElementSibling, ev)\n        return\n      }\n      // If it's not hidden we focus it.\n      this.selectAndFocus(ev, current.nextElementSibling)\n      return\n    }\n\n    // If the next is an optgroup, we try to focus the optgroup.\n    if (isLdOptgroupInternal(current.nextElementSibling)) {\n      // If it's hidden, we repeat with first input within the hidden optgroup.\n      if (isLdOptInternalHidden(current.nextElementSibling)) {\n        const firstInOptgroup = current.nextElementSibling\n          .children[0] as HTMLLdOptionInternalElement\n        // If the first is not visible, we continue with it as current.\n        if (isLdOptInternalHidden(firstInOptgroup)) {\n          this.focusNext(firstInOptgroup, ev)\n          return\n        }\n        // Otherwise we focus it.\n        this.selectAndFocus(ev, firstInOptgroup)\n        return\n      }\n      // If it's not hidden we focus it.\n      this.selectAndFocus(ev, current.nextElementSibling)\n      return\n    }\n\n    // If there is no next element, we check if we are currently in an optgroup.\n    const closestOptgroup =\n      isLdOptionInternal(current) &&\n      current.closest<HTMLLdOptgroupInternalElement | undefined>(\n        'ld-optgroup-internal'\n      )\n    // If we are in an optgroup, we try to focus its next sibling.\n    if (closestOptgroup) {\n      const next = closestOptgroup.nextElementSibling as\n        | HTMLLdOptionInternalElement\n        | HTMLLdOptgroupInternalElement\n        | undefined\n      if (!next) return\n\n      // If the next sibling is not visible, we repeat with the next sibling.\n      if (isLdOptInternalHidden(next)) {\n        this.focusNext(next, ev)\n        return\n      }\n      // If it's visible, we focus it.\n      next.focusInner()\n    }\n  }\n\n  @Listen('keydown', { passive: false, target: 'window' })\n  handleKeyDown(ev: KeyboardEvent) {\n    if (this.isDisabled()) return\n\n    // Ignore page special meta key combos.\n    if (ev.metaKey && !['ArrowDown', 'ArrowUp'].includes(ev.key)) return\n\n    // Ignore events if current instance has no focus.\n    if (\n      document.activeElement.closest('[role=\"listbox\"]') !== this.listboxRef &&\n      document.activeElement.closest('ld-select') !== this.el\n    ) {\n      return\n    }\n\n    const filterHasFocus =\n      this.filter &&\n      this.listboxRef?.shadowRoot.activeElement === this.getFilterInput()\n\n    // If filter has focus...\n    if (filterHasFocus) {\n      // ... and create mode is active\n      if (this.canCreate() && ev.key === 'Enter') {\n        this.handleFilterCreate()\n        return\n      }\n\n      // Ignore events if filter input has focus,\n      // except for navigation-specific keys.\n      if (\n        !['ArrowDown', 'ArrowUp', 'End', 'Escape', 'Home', 'Tab'].includes(\n          ev.key\n        )\n      ) {\n        return\n      }\n    }\n\n    // If the clear button is focused, ignore Enter and Space key events.\n    if (\n      this.el.shadowRoot.activeElement === this.btnClearRef &&\n      (ev.key === ' ' || ev.key === 'Enter')\n    ) {\n      return\n    }\n\n    switch (ev.key) {\n      case 'ArrowDown': {\n        // If not expanded, expand popper.\n        // If expanded, move focus to the next option.\n        // If shift is pressed, select the next option.\n        // Holding down the Shift key and then using the Down cursor keys\n        // increases the range of items selected (multiple mode only).\n        ev.preventDefault()\n        if (!this.expanded) {\n          this.togglePopper()\n          return\n        }\n\n        if (ev.metaKey) {\n          this.handleEnd(ev)\n          return\n        }\n\n        // Focus next visible option, if any,\n        // or the filter input, if applicable.\n        if (document.activeElement === this.el || filterHasFocus) {\n          if (this.filter && !filterHasFocus) {\n            this.getFilterInput().focus()\n          } else {\n            const nextOpt = Array.from(\n              this.listboxRef.querySelectorAll<\n                HTMLLdOptionInternalElement | HTMLLdOptgroupInternalElement\n              >('ld-option-internal, ld-optgroup-internal')\n            ).find((opt) => !isLdOptInternalHidden(opt))\n            this.selectAndFocus(ev, nextOpt)\n          }\n        } else {\n          this.focusNext(\n            document.activeElement as\n              | HTMLLdOptionInternalElement\n              | HTMLLdOptgroupInternalElement,\n            ev\n          )\n        }\n        break\n      }\n      case 'ArrowUp': {\n        // If not expanded, expand popper.\n        // If expanded, move focus to the previous option.\n        // If the first option is focused, focus the trigger button.\n        // Holding down the Shift key and then using the Up cursor keys\n        // increases the range of items selected (multiple mode only).\n        ev.preventDefault()\n        if (!this.expanded) {\n          this.togglePopper()\n          return\n        }\n\n        if (ev.metaKey || filterHasFocus) {\n          this.handleHome(ev)\n          return\n        }\n\n        // Focus previous visible option, if any.\n        if (\n          isLdOptionInternal(document.activeElement) ||\n          isLdOptgroupInternal(document.activeElement)\n        ) {\n          this.focusPrev(document.activeElement, ev)\n        }\n        break\n      }\n      case 'Home':\n        if (this.expanded) {\n          this.handleHome(ev)\n        }\n        break\n      case 'End':\n        if (this.expanded) {\n          this.handleEnd(ev)\n        }\n        break\n      case ' ': {\n        // If trigger has focus: Toggle popper.\n        ev.stopImmediatePropagation()\n        ev.preventDefault()\n        if (this.expanded) {\n          this.togglePopper()\n        } else {\n          this.togglePopper()\n        }\n        break\n      }\n      case 'Enter':\n        // If expanded and trigger button is focused: Toggle popper.\n        ev.preventDefault()\n        if (\n          this.expanded &&\n          this.el.shadowRoot.activeElement === this.triggerRef\n        ) {\n          this.togglePopper()\n        }\n        break\n      case 'Escape':\n        // If expanded: Close popper.\n        if (this.expanded) {\n          ev.preventDefault()\n          ev.stopImmediatePropagation()\n          this.togglePopper()\n        }\n        break\n      case 'Tab': // Also covers Shift+Tab\n        // If expanded and popper element has focus within: Prevent default.\n        if (\n          this.expanded &&\n          document.activeElement.closest('[role=\"listbox\"]') === this.listboxRef\n        ) {\n          ev.preventDefault()\n          ev.stopImmediatePropagation()\n        }\n        break\n      default:\n        if (this.expanded) {\n          ev.stopImmediatePropagation()\n          ev.preventDefault()\n          this.typeAheadHandler.typeAhead(ev.key)\n        }\n    }\n  }\n\n  @Listen('click', {\n    target: 'window',\n  })\n  handleClickOutside(ev) {\n    // closest utility function must be used here for the component\n    // to work in Solid.js app, where ev.target can be an element\n    // within the shadow DOM of the component.\n    // Usage of ev.composedPath() is required for penetrating shadow DOM.\n    const target = 'composedPath' in ev ? ev.composedPath().at(0) : ev.target\n    if (\n      ev.isTrusted &&\n      closest('ld-select', target) !== this.el &&\n      closest('[role=\"listbox\"]', target) !== this.listboxRef\n    ) {\n      this.expanded = false\n      this.resetFilter()\n    }\n  }\n\n  // Mobile Safari in some cases does not react to click events on elements\n  // which are not interactive. But it does to touch events.\n  @Listen('touchend', {\n    target: 'window',\n    passive: true,\n  })\n  handleTouchOutside(ev) {\n    this.handleClickOutside(ev)\n  }\n\n  private resetFilter = () => {\n    this.allOptsFiltered = false\n    this.filterMatchesOpt = false\n\n    if (!this.filter) return\n    const filterInput = this.getFilterInput()\n    if (!filterInput) return\n\n    filterInput.value = ''\n    const opts = this.internalOptionsContainerRef.querySelectorAll<\n      HTMLLdOptionInternalElement | HTMLLdOptgroupInternalElement\n    >('ld-option-internal, ld-optgroup-internal')\n\n    opts.forEach((opt) => {\n      opt.filtered = false\n    })\n\n    this.typeAheadHandler.options = opts\n    this.listboxRef.resetFilter()\n  }\n\n  private handleFocusEvent = (ev: FocusEvent) => {\n    // Emit event only, if focus is not within the select component.\n    if (\n      ev.relatedTarget === null ||\n      ev.relatedTarget === this.listboxRef ||\n      isLdOption(ev.relatedTarget) ||\n      isLdOptgroup(ev.relatedTarget) ||\n      closest('ld-select', ev.relatedTarget as HTMLElement) === this.el\n    ) {\n      ev.stopImmediatePropagation()\n    } else {\n      // Focus left the select component - make sure it is not expanded.\n      this.expanded = false\n      this.resetFilter()\n    }\n  }\n\n  private handleTriggerClick = (ev: Event) => {\n    ev.preventDefault()\n\n    if (this.isDisabled()) return\n\n    this.togglePopper()\n  }\n\n  private handleClearClick = (ev: MouseEvent) => {\n    ev.preventDefault()\n    ev.stopImmediatePropagation()\n\n    if (this.isDisabled()) return\n\n    this.clearSelection()\n    this.focusInner()\n  }\n\n  private handleClearSingleClick = (ev: MouseEvent, optionValue) => {\n    ev.preventDefault()\n    ev.stopImmediatePropagation()\n\n    if (this.isDisabled()) return\n\n    this.selected = this.selected.filter(\n      (selection) => selection.value !== optionValue\n    )\n\n    this.listboxRef\n      .querySelector(`ld-option-internal[value='${optionValue}']`)\n      ?.dispatchEvent(new KeyboardEvent('keydown', { key: ' ' }))\n  }\n\n  componentWillLoad() {\n    const outerForm = this.el.closest('form')\n\n    if (this.name && (outerForm || this.form)) {\n      this.renderHiddenInput = true\n    }\n\n    const customIcon = this.el.querySelector('ld-icon')\n    this.hasCustomIcon = !!customIcon\n\n    if (customIcon) {\n      customIcon.setAttribute('size', this.size)\n    }\n\n    this.initOptions()\n\n    if (this.renderHiddenInput) {\n      this.updateSelectedHiddenInputs(this.selected)\n    }\n\n    registerAutofocus(this.autofocus)\n  }\n\n  componentDidLoad() {\n    setTimeout(() => {\n      this.initSlotChangeObserver()\n      this.typeAheadHandler = new TypeAheadHandler(\n        this.listboxRef.querySelectorAll('ld-option-internal')\n      )\n      this.initialized = true\n    })\n  }\n\n  componentDidUpdate() {\n    if (this.expanded) {\n      this.updatePopper()\n    }\n  }\n\n  disconnectedCallback() {\n    /* istanbul ignore if */\n    if (this.popperObserver) this.popperObserver.disconnect()\n    /* istanbul ignore if */\n    if (this.popper) this.popper.destroy()\n    /* istanbul ignore if */\n    if (this.slotChangeObserver) this.slotChangeObserver.disconnect()\n    /* istanbul ignore if */\n    if (this.listboxRef) this.listboxRef.remove()\n    /* istanbul ignore if */\n    if (this.typeAheadHandler) this.typeAheadHandler.clearTimeout()\n  }\n\n  render() {\n    // Endable detached mode if any display mode is set.\n    const detached = !!this.mode\n\n    // Implicitly enable inline mode if ghost mode is enabled.\n    const inline = this.mode === 'inline' || this.mode === 'ghost'\n\n    // Disallow ghost in combination with multiple select mode.\n    const ghost = !this.multiple && this.mode === 'ghost'\n\n    const cl = [\n      'ld-select',\n      this.disabled && 'ld-select--disabled',\n      this.size && `ld-select--${this.size}`,\n      this.invalid && 'ld-select--invalid',\n      this.expanded && 'ld-select--expanded',\n      detached && 'ld-select--detached',\n      inline && 'ld-select--inline',\n      ghost && 'ld-select--ghost',\n    ]\n\n    const triggerCl = [\n      'ld-select__btn-trigger',\n      this.invalid && 'ld-select__btn-trigger--invalid',\n      detached && 'ld-select__btn-trigger--detached',\n      inline && 'ld-select__btn-trigger--inline',\n      ghost && 'ld-select__btn-trigger--ghost',\n    ]\n\n    const triggerIconCl = [\n      'ld-select__icon',\n      this.expanded && 'ld-select__icon--rotated',\n    ]\n\n    const triggerHtml = this.multiple\n      ? this.placeholder\n      : this.selected[0]?.html || this.placeholder\n\n    const triggerText = this.multiple\n      ? this.placeholder\n      : this.selected[0]?.text || this.placeholder\n\n    return (\n      <Host>\n        <div\n          class={getClassNames(cl)}\n          aria-disabled={this.isDisabled() ? 'true' : undefined}\n          part=\"root\"\n          onBlur={this.handleFocusEvent}\n          onFocusout={this.handleFocusEvent}\n          style={\n            this.expanded\n              ? {\n                  zIndex: '2147483647', // Highest possible z-index\n                }\n              : undefined\n          }\n        >\n          {this.renderHiddenInput && <slot name=\"hidden\" />}\n          <div class=\"ld-select__slot-container\" part=\"slot-container\">\n            <slot></slot>\n          </div>\n          <div\n            class=\"ld-select__select\"\n            part=\"select\"\n            ref={(el) => (this.selectRef = el)}\n          >\n            <div\n              class={getClassNames(triggerCl)}\n              role=\"button\"\n              part=\"btn-trigger focusable\"\n              tabindex={\n                this.disabled && !isAriaDisabled(this.ariaDisabled)\n                  ? undefined\n                  : this.ldTabindex\n              }\n              aria-disabled={this.isDisabled() ? 'true' : undefined}\n              aria-haspopup=\"listbox\"\n              aria-expanded={this.expanded ? 'true' : 'false'}\n              aria-label={triggerText}\n              onClick={this.handleTriggerClick}\n              ref={(el) => (this.triggerRef = el)}\n            >\n              {this.multiple && this.selected.length ? (\n                <div\n                  class=\"ld-select__selection-list-container\"\n                  part=\"selection-list-container\"\n                >\n                  <ul\n                    class=\"ld-select__selection-list\"\n                    part=\"selection-list\"\n                    aria-label=\"Selected options\"\n                    ref={(el) => (this.selectionListRef = el)}\n                    style={{\n                      maxHeight:\n                        this.maxRows && this.maxRows > 0\n                          ? `${this.maxRows * 1.75}rem`\n                          : undefined,\n                    }}\n                  >\n                    {this.selected.map((selection, index) => {\n                      return (\n                        <li\n                          key={index}\n                          class=\"ld-select__selection-list-item\"\n                          style={{ order: index + 1 + '' }}\n                          part=\"selection-list-item\"\n                        >\n                          <label class=\"ld-select__selection-label\">\n                            <span\n                              class=\"ld-select__selection-label-text\"\n                              title={selection.text}\n                              part=\"selection-label-text\"\n                              innerHTML={sanitize(\n                                selection.html,\n                                this.sanitizeConfig\n                              )}\n                            ></span>\n\n                            <button\n                              disabled={this.isDisabled() ? true : undefined}\n                              class=\"ld-select__btn-clear-single\"\n                              part=\"btn-clear-single focusable\"\n                              onClick={(ev) => {\n                                this.handleClearSingleClick.call(\n                                  this,\n                                  ev,\n                                  selection.value\n                                )\n                              }}\n                            >\n                              {/* custom icon cross */}\n                              <svg\n                                class=\"ld-select__btn-clear-single-icon\"\n                                part=\"icon-clear-single\"\n                                fill=\"none\"\n                                viewBox=\"0 0 12 12\"\n                              >\n                                <title>Clear</title>\n                                <path\n                                  stroke=\"#fff\"\n                                  stroke-linecap=\"round\"\n                                  stroke-linejoin=\"round\"\n                                  stroke-width=\"2\"\n                                  d=\"M2 2l8 8M2 10l8-8\"\n                                />\n                              </svg>\n                            </button>\n\n                            <span\n                              class=\"ld-select__selection-label-bg\"\n                              part=\"selection-label-bg\"\n                            />\n                          </label>\n                        </li>\n                      )\n                    })}\n                  </ul>\n                </div>\n              ) : (\n                <span\n                  class=\"ld-select__btn-trigger-text-wrapper\"\n                  title={triggerText}\n                  part=\"trigger-text-wrapper\"\n                >\n                  <span\n                    class=\"ld-select__btn-trigger-text\"\n                    part=\"trigger-text\"\n                    innerHTML={sanitize(triggerHtml, this.sanitizeConfig)}\n                  ></span>\n                </span>\n              )}\n\n              {this.selected?.length && this.multiple ? (\n                <button\n                  class=\"ld-select__btn-clear\"\n                  disabled={this.isDisabled() ? true : undefined}\n                  onClick={this.handleClearClick}\n                  ref={(el) => (this.btnClearRef = el)}\n                  part=\"btn-clear focusable\"\n                >\n                  {/* custom icon cross */}\n                  <svg\n                    class=\"ld-select__btn-clear-icon\"\n                    fill=\"none\"\n                    viewBox=\"0 0 21 20\"\n                    part=\"icon-clear\"\n                  >\n                    <title>Clear all</title>\n                    <path\n                      fill=\"currentColor\"\n                      fill-rule=\"evenodd\"\n                      d=\"M10 20a10 10 0 100-20 10 10 0 000 20z\"\n                      clip-rule=\"evenodd\"\n                    />\n                    <path\n                      stroke=\"#fff\"\n                      stroke-linecap=\"round\"\n                      stroke-linejoin=\"round\"\n                      stroke-width=\"2\"\n                      d=\"M6.67 6.67l6.67 6.66M6.67 13.33l6.67-6.66\"\n                    />\n                  </svg>\n                </button>\n              ) : (\n                ''\n              )}\n\n              <slot name=\"icon\"></slot>\n              {!this.hasCustomIcon && (\n                /* custom icon arrow-down */\n                <svg\n                  class={getClassNames(triggerIconCl)}\n                  role={'presentation'}\n                  viewBox=\"0 0 16 16\"\n                  part=\"trigger-icon\"\n                >\n                  <path\n                    stroke=\"currentColor\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"3\"\n                    d=\"M3 6l5 4 5-4\"\n                  />\n                </svg>\n              )}\n            </div>\n          </div>\n          <ld-select-popper\n            allOptionsFiltered={this.allOptsFiltered}\n            creatable={this.creatable}\n            createButtonLabel={this.createButtonLabel}\n            createInputLabel={this.createInputLabel}\n            detached={detached}\n            expanded={this.expanded}\n            filter={this.filter}\n            filterMatchesOption={this.filterMatchesOpt}\n            filterPlaceholder={this.filterPlaceholder}\n            onBlur={this.handleFocusEvent}\n            onFocusout={this.handleFocusEvent}\n            onLdselectfilterchange={this.handleFilterChange}\n            onLdselectfiltercreate={this.handleFilterCreate}\n            popperClass={this.popperClass}\n            ref={(el) => (this.listboxRef = el)}\n            role=\"listbox\"\n            size={this.size}\n            theme={this.theme}\n          >\n            <div\n              ref={(el) => (this.internalOptionsContainerRef = el)}\n              innerHTML={sanitize(this.internalOptionsHTML, {\n                ...(typeof this.sanitizeConfig === 'string'\n                  ? JSON.parse(this.sanitizeConfig)\n                  : this.sanitizeConfig),\n                ADD_ATTR: ['prevent-deselection'],\n              })}\n              part=\"options-container\"\n            ></div>\n          </ld-select-popper>\n        </div>\n      </Host>\n    )\n  }\n}\n",":host {\n  /* layout */\n  --ld-select-popper-min-width: 12.8125rem;\n  --ld-select-popper-max-height: min(23.75rem, 75vh - 1.25rem);\n\n  /* colors */\n  --ld-select-popper-border-col: var(--ld-col-neutral-100);\n  min-width: var(--ld-select-popper-min-width);\n}\n\n.ld-select-popper {\n  min-width: 100%;\n\n  &:not(.ld-select-popper--expanded) {\n    display: none;\n  }\n\n  ::slotted(.ld-select__shadow) {\n    display: block;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    box-shadow: var(--ld-shadow-sticky);\n    border-radius: var(--ld-br-m);\n    pointer-events: none;\n    z-index: -1;\n  }\n}\n\n.ld-select-popper__scroll-container {\n  max-height: var(--ld-select-popper-max-height);\n  overflow-y: auto;\n  border-bottom-left-radius: var(--ld-br-m);\n  border-bottom-right-radius: var(--ld-br-m);\n  border-top: solid var(--ld-select-popper-border-col) var(--ld-sp-1);\n  overscroll-behavior: contain;\n\n  .ld-select-popper--detached:not(.ld-select-popper--filter) &,\n  .ld-select-popper--pinned:not(.ld-select-popper--filter) & {\n    border-top: 0;\n    border-radius: var(--ld-br-m);\n  }\n\n  .ld-select-popper--all-filtered & {\n    border-top: 0;\n  }\n}\n\n.ld-select-popper__shadow {\n  position: absolute;\n  width: 100%;\n  height: calc(100% + var(--ld-select-min-height-md));\n  box-shadow: var(--ld-shadow-sticky);\n  border-radius: var(--ld-br-m);\n  pointer-events: none;\n  z-index: -1;\n  bottom: 0;\n\n  .ld-select-popper--detached & {\n    height: 100% !important;\n  }\n}\n\n.ld-select-popper__filter-container {\n  align-items: center;\n  background-color: var(--ld-col-wht);\n  border-top: solid var(--ld-col-neutral-100) var(--ld-sp-1);\n  color: var(--ld-col-neutral-900);\n  display: grid;\n  font: var(--ld-typo-label-m);\n  grid-template-columns: 1fr auto;\n\n  .ld-select-popper--detached &,\n  .ld-select-popper--pinned & {\n    border-top: 0;\n    border-top-left-radius: var(--ld-br-m);\n    border-top-right-radius: var(--ld-br-m);\n  }\n\n  .ld-select-popper--all-filtered & {\n    border-bottom-left-radius: var(--ld-br-m);\n    border-bottom-right-radius: var(--ld-br-m);\n  }\n}\n\n.ld-select-popper__create-button {\n  font: var(--ld-typo-label-s);\n  line-height: var(--ld-select-trigger-line-height);\n  margin-right: var(--ld-sp-8);\n\n  &::part(button) {\n    --ld-button-padding-x-sm: var(--ld-sp-6);\n    --ld-button-padding-y-sm: var(--ld-sp-4);\n    min-height: 0;\n    min-width: 0;\n  }\n}\n\n.ld-select-popper__filter-input {\n  appearance: none;\n  background-color: transparent;\n  border: 0;\n  box-sizing: border-box;\n  color: inherit;\n  font: inherit;\n  height: 2.5rem;\n  line-height: var(--ld-select-trigger-line-height);\n  outline: none;\n  padding: var(--ld-sp-8) var(--ld-sp-12);\n  width: 100%;\n\n  &::placeholder {\n    color: var(--ld-col-neutral-600);\n  }\n\n  .ld-select-popper--detached &,\n  .ld-select-popper--pinned & {\n    border-top: 0;\n    border-top-left-radius: var(--ld-br-m);\n    border-top-right-radius: var(--ld-br-m);\n  }\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core'\nimport { getClassNames } from '../../../utils/getClassNames'\n\n/** @internal **/\n@Component({\n  tag: 'ld-select-popper',\n  styleUrl: 'ld-select-popper.shadow.css',\n  shadow: true,\n})\nexport class LdSelectPopper {\n  @Element() el: HTMLElement\n\n  /** Indicates that all options are filtered (used in creatable mode) */\n  @Prop() allOptionsFiltered?: boolean\n\n  /** A watcher is applied to the CSS class in order to be able to react to tether changes. */\n  @Prop({ reflect: true }) class?: string\n\n  /**\n   * Creatable mode can be enabled when the filter prop is set to true.\n   * This mode allows the user to create new options using the filter input field.\n   */\n  @Prop() creatable?: boolean\n\n  /** The \"create\" input label (creatable mode). */\n  @Prop() createInputLabel!: string\n\n  /** The \"create\" button label (creatable mode). */\n  @Prop() createButtonLabel!: string\n\n  /** Popper is visually detached from the select trigger element (there's a gap between the two). */\n  @Prop() detached?: boolean\n\n  /** Indicates if select element is expanded. */\n  @Prop() expanded? = false\n\n  /** Set this property to `true` in order to enable an input field for filtering options. */\n  @Prop() filter?: boolean\n\n  /** The filter input value matches an option (do not allow to create the option). */\n  @Prop() filterMatchesOption?: boolean\n\n  /** The filter input placeholder. */\n  @Prop() filterPlaceholder!: string\n\n  /** Attaches CSS class to the select popper element. */\n  @Prop() popperClass?: string\n\n  /** Size of the select trigger button (required for applying the correct shadow height). */\n  @Prop() size?: 'sm' | 'lg'\n\n  /** Since the select popper is located outside the select element, the theme needs to be applied as a prop. */\n  @Prop() theme?: string\n\n  @State() isPinned = false\n  @State() shadowHeight = '100%'\n  @State() filterInputValue = ''\n  @State() canCreate = false\n\n  /**\n   * @internal\n   * Emitted on filter change with the filter input value.\n   */\n  @Event() ldselectfilterchange: EventEmitter<string>\n\n  /**\n   * @internal\n   * Emitted on create button click in filter input field.\n   */\n  @Event() ldselectfiltercreate: EventEmitter<string>\n\n  private handleFilterInput = (ev) => {\n    this.filterInputValue = ev.target.value\n    this.ldselectfilterchange.emit(ev.target.value)\n  }\n\n  private handleCreate = (ev) => {\n    ev.preventDefault()\n    const value = this.filterInputValue\n    this.filterInputValue = ''\n    this.ldselectfiltercreate.emit(value)\n  }\n\n  @Watch('creatable')\n  @Watch('filterMatchesOption')\n  @Watch('filterInputValue')\n  updateCanCreate() {\n    this.canCreate = Boolean(\n      this.creatable && !this.filterMatchesOption && this.filterInputValue\n    )\n  }\n\n  @Watch('class')\n  updatePinnedState() {\n    this.isPinned = this.el.classList.contains('ld-tether-pinned')\n  }\n\n  @Watch('theme')\n  updatePopperTheme(newValue: string, oldValue: string) {\n    this.el.classList.remove(`ld-theme-${oldValue}`)\n    if (newValue) this.el.classList.add(`ld-theme-${newValue}`)\n  }\n\n  @Watch('expanded')\n  updateFilter(newExpanded: boolean) {\n    if (!newExpanded) {\n      this.resetFilter()\n    }\n  }\n\n  /** Updates shadow height */\n  @Method()\n  async updateShadowHeight(height: string) {\n    this.shadowHeight = height\n  }\n\n  /** Focuses the tab */\n  @Method()\n  async resetFilter() {\n    this.filterInputValue = ''\n  }\n\n  componentWillLoad() {\n    this.popperClass && this.el.classList.add(this.popperClass)\n  }\n\n  render() {\n    return (\n      <Host\n        style={{\n          zIndex: this.isPinned ? '2147483647' : '2147483646',\n          display: this.expanded ? 'block' : 'none',\n        }}\n      >\n        <div\n          class={getClassNames([\n            'ld-select-popper',\n            this.detached && 'ld-select-popper--detached',\n            this.expanded && 'ld-select-popper--expanded',\n            this.filter && 'ld-select-popper--filter',\n            this.allOptionsFiltered && 'ld-select-popper--all-filtered',\n            this.isPinned && 'ld-select-popper--pinned',\n            this.size && `ld-select-popper--${this.size}`,\n          ])}\n          part=\"popper\"\n        >\n          {this.filter && (\n            <div class=\"ld-select-popper__filter-container\">\n              <input\n                aria-haspopup={this.allOptionsFiltered ? undefined : 'listbox'}\n                aria-label={this.canCreate ? this.createInputLabel : undefined}\n                type=\"text\"\n                placeholder={this.filterPlaceholder}\n                class=\"ld-select-popper__filter-input\"\n                part=\"filter-input focusable\"\n                onInput={this.handleFilterInput}\n              />\n              {this.canCreate && (\n                <ld-button\n                  onClick={this.handleCreate}\n                  size=\"sm\"\n                  class=\"ld-select-popper__create-button\"\n                  aria-label={this.createButtonLabel}\n                >\n                  <ld-icon\n                    class=\"ld-select-popper__create-icon\"\n                    role=\"presentation\"\n                    size=\"sm\"\n                  >\n                    <svg viewBox=\"-1 -1 24 24\" fill=\"none\">\n                      <path\n                        d=\"M2.5 11h17M11 19.5v-17\"\n                        stroke=\"currentColor\"\n                        stroke-width=\"3\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                      />\n                    </svg>\n                  </ld-icon>\n                </ld-button>\n              )}\n            </div>\n          )}\n          <div\n            class=\"ld-select-popper__scroll-container\"\n            part=\"popper-scroll-container\"\n          >\n            <slot></slot>\n            <div\n              class=\"ld-select-popper__shadow\"\n              style={{ height: this.isPinned ? '100%' : this.shadowHeight }}\n              part=\"shadow\"\n            ></div>\n          </div>\n        </div>\n      </Host>\n    )\n  }\n}\n"],"mappings":"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"}