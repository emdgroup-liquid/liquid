{"version":3,"names":["global","factory","module","exports","this","entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","Object","freeze","seal","create","apply","construct","Reflect","fun","thisValue","args","x","Func","arrayForEach","unapply","Array","prototype","forEach","arrayPop","pop","arrayPush","push","stringToLowerCase","String","toLowerCase","stringToString","toString","stringMatch","match","stringReplace","replace","stringIndexOf","indexOf","stringTrim","trim","regExpTest","RegExp","test","typeErrorCreate","unconstruct","TypeError","func","thisArg","_len","arguments","length","_key","_len2","_key2","addToSet","set","array","transformCaseFunc","l","element","lcElement","clone","object","newObject","property","value","lookupGetter","prop","desc","get","fallbackValue","console","warn","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","text","html","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","EXPRESSIONS","__proto__","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","document","createPolicy","suffix","ATTR_NAME","currentScript","hasAttribute","getAttribute","policyName","createHTML","createScriptURL","scriptUrl","_","createDOMPurify","undefined","DOMPurify","root","version","removed","nodeType","isSupported","originalDocument","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","getNextSibling","getChildNodes","getParentNode","template","createElement","content","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","hooks","createHTMLDocument","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","table","tbody","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","namespaceURI","parentTagName","Boolean","_forceRemove","node","parentNode","removeChild","remove","_removeAttribute","name","attribute","getAttributeNode","from","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","body","insertBefore","createTextNode","childNodes","call","_createIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","_isClobbered","elm","nodeName","textContent","attributes","hasChildNodes","_isNode","_executeHook","entryPoint","currentNode","data","hook","_sanitizeElements","allowedTags","firstElementChild","_basicCustomElementTest","childCount","i","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attr","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","forceKeepAttr","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","appendChild","firstChild","nodeIterator","shadowroot","shadowrootmod","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","tag","addHook","hookFunction","removeHook","removeHooks","removeAllHooks","purify","sanitizeConfigCustomElements","htmlString","sanitizeConfig","assign","JSON","parse","ldNotificationShadowCss","DEFAULT_NOTIFICATION_TIMEOUT","FADE_TRANSITION_DURATION","LdNotification","updateDismissTimeout","clearTimeout","dismissTimeout","currentNotification","type","timeout","setTimeout","handleNotificationDismiss","handleNotification","ev","stopImmediatePropagation","newNotification","detail","inQueue","queue","some","notification","firstErrorNotificationIndex","findIndex","splice","queueDismissed","unshift","fadeoutTimeouts","slice","handleNotificationClear","renderNotification","dismissed","cl","h","class","key","part","role","onClick","bind","width","height","viewBox","fill","d","stroke","disconnectedCallback","render","placement","Host","map"],"sources":["../node_modules/dompurify/dist/purify.js","../src/liquid/utils/sanitize.ts","../src/liquid/components/ld-notification/ld-notification.shadow.css?tag=ld-notification&encapsulation=shadow","../src/liquid/components/ld-notification/ld-notification.tsx"],"sourcesContent":["/*! @license DOMPurify 3.0.2 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.0.2/LICENSE */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.DOMPurify = factory());\n})(this, (function () { 'use strict';\n\n  const {\n    entries,\n    setPrototypeOf,\n    isFrozen,\n    getPrototypeOf,\n    getOwnPropertyDescriptor\n  } = Object;\n  let {\n    freeze,\n    seal,\n    create\n  } = Object; // eslint-disable-line import/no-mutable-exports\n\n  let {\n    apply,\n    construct\n  } = typeof Reflect !== 'undefined' && Reflect;\n\n  if (!apply) {\n    apply = function apply(fun, thisValue, args) {\n      return fun.apply(thisValue, args);\n    };\n  }\n\n  if (!freeze) {\n    freeze = function freeze(x) {\n      return x;\n    };\n  }\n\n  if (!seal) {\n    seal = function seal(x) {\n      return x;\n    };\n  }\n\n  if (!construct) {\n    construct = function construct(Func, args) {\n      return new Func(...args);\n    };\n  }\n\n  const arrayForEach = unapply(Array.prototype.forEach);\n  const arrayPop = unapply(Array.prototype.pop);\n  const arrayPush = unapply(Array.prototype.push);\n  const stringToLowerCase = unapply(String.prototype.toLowerCase);\n  const stringToString = unapply(String.prototype.toString);\n  const stringMatch = unapply(String.prototype.match);\n  const stringReplace = unapply(String.prototype.replace);\n  const stringIndexOf = unapply(String.prototype.indexOf);\n  const stringTrim = unapply(String.prototype.trim);\n  const regExpTest = unapply(RegExp.prototype.test);\n  const typeErrorCreate = unconstruct(TypeError);\n  function unapply(func) {\n    return function (thisArg) {\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      return apply(func, thisArg, args);\n    };\n  }\n  function unconstruct(func) {\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return construct(func, args);\n    };\n  }\n  /* Add properties to a lookup table */\n\n  function addToSet(set, array, transformCaseFunc) {\n    transformCaseFunc = transformCaseFunc ? transformCaseFunc : stringToLowerCase;\n\n    if (setPrototypeOf) {\n      // Make 'in' and truthy checks like Boolean(set.constructor)\n      // independent of any properties defined on Object.prototype.\n      // Prevent prototype setters from intercepting set as a this value.\n      setPrototypeOf(set, null);\n    }\n\n    let l = array.length;\n\n    while (l--) {\n      let element = array[l];\n\n      if (typeof element === 'string') {\n        const lcElement = transformCaseFunc(element);\n\n        if (lcElement !== element) {\n          // Config presets (e.g. tags.js, attrs.js) are immutable.\n          if (!isFrozen(array)) {\n            array[l] = lcElement;\n          }\n\n          element = lcElement;\n        }\n      }\n\n      set[element] = true;\n    }\n\n    return set;\n  }\n  /* Shallow clone an object */\n\n  function clone(object) {\n    const newObject = create(null);\n\n    for (const [property, value] of entries(object)) {\n      newObject[property] = value;\n    }\n\n    return newObject;\n  }\n  /* This method automatically checks if the prop is function\n   * or getter and behaves accordingly. */\n\n  function lookupGetter(object, prop) {\n    while (object !== null) {\n      const desc = getOwnPropertyDescriptor(object, prop);\n\n      if (desc) {\n        if (desc.get) {\n          return unapply(desc.get);\n        }\n\n        if (typeof desc.value === 'function') {\n          return unapply(desc.value);\n        }\n      }\n\n      object = getPrototypeOf(object);\n    }\n\n    function fallbackValue(element) {\n      console.warn('fallback value for', element);\n      return null;\n    }\n\n    return fallbackValue;\n  }\n\n  const html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']); // SVG\n\n  const svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\n  const svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']); // List of SVG elements that are disallowed by default.\n  // We still need to know them so that we can do namespace\n  // checks properly in case one wants to add them to\n  // allow-list.\n\n  const svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'fedropshadow', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\n  const mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']); // Similarly to SVG, we want to know all MathML elements,\n  // even those that we disallow by default.\n\n  const mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\n  const text = freeze(['#text']);\n\n  const html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'xmlns', 'slot']);\n  const svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\n  const mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\n  const xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n  const MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\n\n  const ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\n  const TMPLIT_EXPR = seal(/\\${[\\w\\W]*}/gm);\n  const DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]/); // eslint-disable-line no-useless-escape\n\n  const ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\n\n  const IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n  );\n  const IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\n  const ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n  );\n  const DOCTYPE_NAME = seal(/^html$/i);\n\n  var EXPRESSIONS = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    MUSTACHE_EXPR: MUSTACHE_EXPR,\n    ERB_EXPR: ERB_EXPR,\n    TMPLIT_EXPR: TMPLIT_EXPR,\n    DATA_ATTR: DATA_ATTR,\n    ARIA_ATTR: ARIA_ATTR,\n    IS_ALLOWED_URI: IS_ALLOWED_URI,\n    IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE: ATTR_WHITESPACE,\n    DOCTYPE_NAME: DOCTYPE_NAME\n  });\n\n  const getGlobal = () => typeof window === 'undefined' ? null : window;\n  /**\n   * Creates a no-op policy for internal use only.\n   * Don't export this function outside this module!\n   * @param {?TrustedTypePolicyFactory} trustedTypes The policy factory.\n   * @param {Document} document The document object (to determine policy name suffix)\n   * @return {?TrustedTypePolicy} The policy created (or null, if Trusted Types\n   * are not supported).\n   */\n\n\n  const _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, document) {\n    if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n      return null;\n    } // Allow the callers to control the unique policy name\n    // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n    // Policy creation with duplicate names throws in Trusted Types.\n\n\n    let suffix = null;\n    const ATTR_NAME = 'data-tt-policy-suffix';\n\n    if (document.currentScript && document.currentScript.hasAttribute(ATTR_NAME)) {\n      suffix = document.currentScript.getAttribute(ATTR_NAME);\n    }\n\n    const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n\n    try {\n      return trustedTypes.createPolicy(policyName, {\n        createHTML(html) {\n          return html;\n        },\n\n        createScriptURL(scriptUrl) {\n          return scriptUrl;\n        }\n\n      });\n    } catch (_) {\n      // Policy creation failed (most likely another DOMPurify script has\n      // already run). Skip creating the policy, as this will only cause errors\n      // if TT are enforced.\n      console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n      return null;\n    }\n  };\n\n  function createDOMPurify() {\n    let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n\n    const DOMPurify = root => createDOMPurify(root);\n    /**\n     * Version label, exposed for easier checks\n     * if DOMPurify is up to date or not\n     */\n\n\n    DOMPurify.version = '3.0.2';\n    /**\n     * Array of elements that DOMPurify removed during sanitation.\n     * Empty if nothing was removed.\n     */\n\n    DOMPurify.removed = [];\n\n    if (!window || !window.document || window.document.nodeType !== 9) {\n      // Not running in a browser, provide a factory function\n      // so that you can pass your own Window\n      DOMPurify.isSupported = false;\n      return DOMPurify;\n    }\n\n    const originalDocument = window.document;\n    let {\n      document\n    } = window;\n    const {\n      DocumentFragment,\n      HTMLTemplateElement,\n      Node,\n      Element,\n      NodeFilter,\n      NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n      HTMLFormElement,\n      DOMParser,\n      trustedTypes\n    } = window;\n    const ElementPrototype = Element.prototype;\n    const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n    const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n    const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n    const getParentNode = lookupGetter(ElementPrototype, 'parentNode'); // As per issue #47, the web-components registry is inherited by a\n    // new document created via createHTMLDocument. As per the spec\n    // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n    // a new empty registry is used when creating a template contents owner\n    // document, so we use that as our parent document to ensure nothing\n    // is inherited.\n\n    if (typeof HTMLTemplateElement === 'function') {\n      const template = document.createElement('template');\n\n      if (template.content && template.content.ownerDocument) {\n        document = template.content.ownerDocument;\n      }\n    }\n\n    const trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, originalDocument);\n\n    const emptyHTML = trustedTypesPolicy ? trustedTypesPolicy.createHTML('') : '';\n    const {\n      implementation,\n      createNodeIterator,\n      createDocumentFragment,\n      getElementsByTagName\n    } = document;\n    const {\n      importNode\n    } = originalDocument;\n    let hooks = {};\n    /**\n     * Expose whether this browser supports running the full DOMPurify.\n     */\n\n    DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && typeof implementation.createHTMLDocument !== 'undefined';\n    const {\n      MUSTACHE_EXPR,\n      ERB_EXPR,\n      TMPLIT_EXPR,\n      DATA_ATTR,\n      ARIA_ATTR,\n      IS_SCRIPT_OR_DATA,\n      ATTR_WHITESPACE\n    } = EXPRESSIONS;\n    let {\n      IS_ALLOWED_URI: IS_ALLOWED_URI$1\n    } = EXPRESSIONS;\n    /**\n     * We consider the elements and attributes below to be safe. Ideally\n     * don't add any new ones but feel free to remove unwanted ones.\n     */\n\n    /* allowed element names */\n\n    let ALLOWED_TAGS = null;\n    const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n    /* Allowed attribute names */\n\n    let ALLOWED_ATTR = null;\n    const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n    /*\n     * Configure how DOMPUrify should handle custom elements and their attributes as well as customized built-in elements.\n     * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n     * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n     * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n     */\n\n    let CUSTOM_ELEMENT_HANDLING = Object.seal(Object.create(null, {\n      tagNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      attributeNameCheck: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: null\n      },\n      allowCustomizedBuiltInElements: {\n        writable: true,\n        configurable: false,\n        enumerable: true,\n        value: false\n      }\n    }));\n    /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n\n    let FORBID_TAGS = null;\n    /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n\n    let FORBID_ATTR = null;\n    /* Decide if ARIA attributes are okay */\n\n    let ALLOW_ARIA_ATTR = true;\n    /* Decide if custom data attributes are okay */\n\n    let ALLOW_DATA_ATTR = true;\n    /* Decide if unknown protocols are okay */\n\n    let ALLOW_UNKNOWN_PROTOCOLS = false;\n    /* Decide if self-closing tags in attributes are allowed.\n     * Usually removed due to a mXSS issue in jQuery 3.0 */\n\n    let ALLOW_SELF_CLOSE_IN_ATTR = true;\n    /* Output should be safe for common template engines.\n     * This means, DOMPurify removes data attributes, mustaches and ERB\n     */\n\n    let SAFE_FOR_TEMPLATES = false;\n    /* Decide if document with <html>... should be returned */\n\n    let WHOLE_DOCUMENT = false;\n    /* Track whether config is already set on this instance of DOMPurify. */\n\n    let SET_CONFIG = false;\n    /* Decide if all elements (e.g. style, script) must be children of\n     * document.body. By default, browsers might move them to document.head */\n\n    let FORCE_BODY = false;\n    /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n     * string (or a TrustedHTML object if Trusted Types are supported).\n     * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n     */\n\n    let RETURN_DOM = false;\n    /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n     * string  (or a TrustedHTML object if Trusted Types are supported) */\n\n    let RETURN_DOM_FRAGMENT = false;\n    /* Try to return a Trusted Type object instead of a string, return a string in\n     * case Trusted Types are not supported  */\n\n    let RETURN_TRUSTED_TYPE = false;\n    /* Output should be free from DOM clobbering attacks?\n     * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n     */\n\n    let SANITIZE_DOM = true;\n    /* Achieve full DOM Clobbering protection by isolating the namespace of named\n     * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n     *\n     * HTML/DOM spec rules that enable DOM Clobbering:\n     *   - Named Access on Window (§7.3.3)\n     *   - DOM Tree Accessors (§3.1.5)\n     *   - Form Element Parent-Child Relations (§4.10.3)\n     *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n     *   - HTMLCollection (§4.2.10.2)\n     *\n     * Namespace isolation is implemented by prefixing `id` and `name` attributes\n     * with a constant string, i.e., `user-content-`\n     */\n\n    let SANITIZE_NAMED_PROPS = false;\n    const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n    /* Keep element content when removing element? */\n\n    let KEEP_CONTENT = true;\n    /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n     * of importing it into a new Document and returning a sanitized copy */\n\n    let IN_PLACE = false;\n    /* Allow usage of profiles like html, svg and mathMl */\n\n    let USE_PROFILES = {};\n    /* Tags to ignore content of when KEEP_CONTENT is true */\n\n    let FORBID_CONTENTS = null;\n    const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n    /* Tags that are safe for data: URIs */\n\n    let DATA_URI_TAGS = null;\n    const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n    /* Attributes safe for values like \"javascript:\" */\n\n    let URI_SAFE_ATTRIBUTES = null;\n    const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n    const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n    const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n    const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n    /* Document namespace */\n\n    let NAMESPACE = HTML_NAMESPACE;\n    let IS_EMPTY_INPUT = false;\n    /* Allowed XHTML+XML namespaces */\n\n    let ALLOWED_NAMESPACES = null;\n    const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n    /* Parsing of strict XHTML documents */\n\n    let PARSER_MEDIA_TYPE;\n    const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n    const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n    let transformCaseFunc;\n    /* Keep a reference to config to pass to hooks */\n\n    let CONFIG = null;\n    /* Ideally, do not touch anything below this line */\n\n    /* ______________________________________________ */\n\n    const formElement = document.createElement('form');\n\n    const isRegexOrFunction = function isRegexOrFunction(testValue) {\n      return testValue instanceof RegExp || testValue instanceof Function;\n    };\n    /**\n     * _parseConfig\n     *\n     * @param  {Object} cfg optional config literal\n     */\n    // eslint-disable-next-line complexity\n\n\n    const _parseConfig = function _parseConfig(cfg) {\n      if (CONFIG && CONFIG === cfg) {\n        return;\n      }\n      /* Shield configuration object from tampering */\n\n\n      if (!cfg || typeof cfg !== 'object') {\n        cfg = {};\n      }\n      /* Shield configuration object from prototype pollution */\n\n\n      cfg = clone(cfg);\n      PARSER_MEDIA_TYPE = // eslint-disable-next-line unicorn/prefer-includes\n      SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? PARSER_MEDIA_TYPE = DEFAULT_PARSER_MEDIA_TYPE : PARSER_MEDIA_TYPE = cfg.PARSER_MEDIA_TYPE; // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n\n      transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n      /* Set configuration parameters */\n\n      ALLOWED_TAGS = 'ALLOWED_TAGS' in cfg ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n      ALLOWED_ATTR = 'ALLOWED_ATTR' in cfg ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n      ALLOWED_NAMESPACES = 'ALLOWED_NAMESPACES' in cfg ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n      URI_SAFE_ATTRIBUTES = 'ADD_URI_SAFE_ATTR' in cfg ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), // eslint-disable-line indent\n      cfg.ADD_URI_SAFE_ATTR, // eslint-disable-line indent\n      transformCaseFunc // eslint-disable-line indent\n      ) // eslint-disable-line indent\n      : DEFAULT_URI_SAFE_ATTRIBUTES;\n      DATA_URI_TAGS = 'ADD_DATA_URI_TAGS' in cfg ? addToSet(clone(DEFAULT_DATA_URI_TAGS), // eslint-disable-line indent\n      cfg.ADD_DATA_URI_TAGS, // eslint-disable-line indent\n      transformCaseFunc // eslint-disable-line indent\n      ) // eslint-disable-line indent\n      : DEFAULT_DATA_URI_TAGS;\n      FORBID_CONTENTS = 'FORBID_CONTENTS' in cfg ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n      FORBID_TAGS = 'FORBID_TAGS' in cfg ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n      FORBID_ATTR = 'FORBID_ATTR' in cfg ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n      USE_PROFILES = 'USE_PROFILES' in cfg ? cfg.USE_PROFILES : false;\n      ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n\n      ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n\n      ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n\n      ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n\n      SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n\n      WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n\n      RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n\n      RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n\n      RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n\n      FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n\n      SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n\n      SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n\n      KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n\n      IN_PLACE = cfg.IN_PLACE || false; // Default false\n\n      IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n      NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n      CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n      }\n\n      if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n        CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n      }\n\n      if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n        CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n      }\n\n      if (SAFE_FOR_TEMPLATES) {\n        ALLOW_DATA_ATTR = false;\n      }\n\n      if (RETURN_DOM_FRAGMENT) {\n        RETURN_DOM = true;\n      }\n      /* Parse profile info */\n\n\n      if (USE_PROFILES) {\n        ALLOWED_TAGS = addToSet({}, [...text]);\n        ALLOWED_ATTR = [];\n\n        if (USE_PROFILES.html === true) {\n          addToSet(ALLOWED_TAGS, html$1);\n          addToSet(ALLOWED_ATTR, html);\n        }\n\n        if (USE_PROFILES.svg === true) {\n          addToSet(ALLOWED_TAGS, svg$1);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.svgFilters === true) {\n          addToSet(ALLOWED_TAGS, svgFilters);\n          addToSet(ALLOWED_ATTR, svg);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n\n        if (USE_PROFILES.mathMl === true) {\n          addToSet(ALLOWED_TAGS, mathMl$1);\n          addToSet(ALLOWED_ATTR, mathMl);\n          addToSet(ALLOWED_ATTR, xml);\n        }\n      }\n      /* Merge configuration parameters */\n\n\n      if (cfg.ADD_TAGS) {\n        if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n          ALLOWED_TAGS = clone(ALLOWED_TAGS);\n        }\n\n        addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n      }\n\n      if (cfg.ADD_ATTR) {\n        if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n          ALLOWED_ATTR = clone(ALLOWED_ATTR);\n        }\n\n        addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n      }\n\n      if (cfg.ADD_URI_SAFE_ATTR) {\n        addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n      }\n\n      if (cfg.FORBID_CONTENTS) {\n        if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n          FORBID_CONTENTS = clone(FORBID_CONTENTS);\n        }\n\n        addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n      }\n      /* Add #text in case KEEP_CONTENT is set to true */\n\n\n      if (KEEP_CONTENT) {\n        ALLOWED_TAGS['#text'] = true;\n      }\n      /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n\n\n      if (WHOLE_DOCUMENT) {\n        addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n      }\n      /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n\n\n      if (ALLOWED_TAGS.table) {\n        addToSet(ALLOWED_TAGS, ['tbody']);\n        delete FORBID_TAGS.tbody;\n      } // Prevent further manipulation of configuration.\n      // Not available in IE8, Safari 5, etc.\n\n\n      if (freeze) {\n        freeze(cfg);\n      }\n\n      CONFIG = cfg;\n    };\n\n    const MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n    const HTML_INTEGRATION_POINTS = addToSet({}, ['foreignobject', 'desc', 'title', 'annotation-xml']); // Certain elements are allowed in both SVG and HTML\n    // namespace. We need to specify them explicitly\n    // so that they don't get erroneously deleted from\n    // HTML namespace.\n\n    const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n    /* Keep track of all possible SVG and MathML tags\n     * so that we can perform the namespace checks\n     * correctly. */\n\n    const ALL_SVG_TAGS = addToSet({}, svg$1);\n    addToSet(ALL_SVG_TAGS, svgFilters);\n    addToSet(ALL_SVG_TAGS, svgDisallowed);\n    const ALL_MATHML_TAGS = addToSet({}, mathMl$1);\n    addToSet(ALL_MATHML_TAGS, mathMlDisallowed);\n    /**\n     *\n     *\n     * @param  {Element} element a DOM element whose namespace is being checked\n     * @returns {boolean} Return false if the element has a\n     *  namespace that a spec-compliant parser would never\n     *  return. Return true otherwise.\n     */\n\n    const _checkValidNamespace = function _checkValidNamespace(element) {\n      let parent = getParentNode(element); // In JSDOM, if we're inside shadow DOM, then parentNode\n      // can be null. We just simulate parent in this case.\n\n      if (!parent || !parent.tagName) {\n        parent = {\n          namespaceURI: NAMESPACE,\n          tagName: 'template'\n        };\n      }\n\n      const tagName = stringToLowerCase(element.tagName);\n      const parentTagName = stringToLowerCase(parent.tagName);\n\n      if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n        return false;\n      }\n\n      if (element.namespaceURI === SVG_NAMESPACE) {\n        // The only way to switch from HTML namespace to SVG\n        // is via <svg>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'svg';\n        } // The only way to switch from MathML to SVG is via`\n        // svg if parent is either <annotation-xml> or MathML\n        // text integration points.\n\n\n        if (parent.namespaceURI === MATHML_NAMESPACE) {\n          return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n        } // We only allow elements that are defined in SVG\n        // spec. All others are disallowed in SVG namespace.\n\n\n        return Boolean(ALL_SVG_TAGS[tagName]);\n      }\n\n      if (element.namespaceURI === MATHML_NAMESPACE) {\n        // The only way to switch from HTML namespace to MathML\n        // is via <math>. If it happens via any other tag, then\n        // it should be killed.\n        if (parent.namespaceURI === HTML_NAMESPACE) {\n          return tagName === 'math';\n        } // The only way to switch from SVG to MathML is via\n        // <math> and HTML integration points\n\n\n        if (parent.namespaceURI === SVG_NAMESPACE) {\n          return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n        } // We only allow elements that are defined in MathML\n        // spec. All others are disallowed in MathML namespace.\n\n\n        return Boolean(ALL_MATHML_TAGS[tagName]);\n      }\n\n      if (element.namespaceURI === HTML_NAMESPACE) {\n        // The only way to switch from SVG to HTML is via\n        // HTML integration points, and from MathML to HTML\n        // is via MathML text integration points\n        if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        }\n\n        if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n          return false;\n        } // We disallow tags that are specific for MathML\n        // or SVG and should never appear in HTML namespace\n\n\n        return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n      } // For XHTML and XML documents that support custom namespaces\n\n\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n        return true;\n      } // The code should never reach this place (this means\n      // that the element somehow got namespace that is not\n      // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n      // Return false just in case.\n\n\n      return false;\n    };\n    /**\n     * _forceRemove\n     *\n     * @param  {Node} node a DOM node\n     */\n\n\n    const _forceRemove = function _forceRemove(node) {\n      arrayPush(DOMPurify.removed, {\n        element: node\n      });\n\n      try {\n        // eslint-disable-next-line unicorn/prefer-dom-node-remove\n        node.parentNode.removeChild(node);\n      } catch (_) {\n        node.remove();\n      }\n    };\n    /**\n     * _removeAttribute\n     *\n     * @param  {String} name an Attribute name\n     * @param  {Node} node a DOM node\n     */\n\n\n    const _removeAttribute = function _removeAttribute(name, node) {\n      try {\n        arrayPush(DOMPurify.removed, {\n          attribute: node.getAttributeNode(name),\n          from: node\n        });\n      } catch (_) {\n        arrayPush(DOMPurify.removed, {\n          attribute: null,\n          from: node\n        });\n      }\n\n      node.removeAttribute(name); // We void attribute values for unremovable \"is\"\" attributes\n\n      if (name === 'is' && !ALLOWED_ATTR[name]) {\n        if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n          try {\n            _forceRemove(node);\n          } catch (_) {}\n        } else {\n          try {\n            node.setAttribute(name, '');\n          } catch (_) {}\n        }\n      }\n    };\n    /**\n     * _initDocument\n     *\n     * @param  {String} dirty a string of dirty markup\n     * @return {Document} a DOM, filled with the dirty markup\n     */\n\n\n    const _initDocument = function _initDocument(dirty) {\n      /* Create a HTML document */\n      let doc;\n      let leadingWhitespace;\n\n      if (FORCE_BODY) {\n        dirty = '<remove></remove>' + dirty;\n      } else {\n        /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n        const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n        leadingWhitespace = matches && matches[0];\n      }\n\n      if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n        // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n        dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n      }\n\n      const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      /*\n       * Use the DOMParser API by default, fallback later if needs be\n       * DOMParser not work for svg when has multiple root element.\n       */\n\n      if (NAMESPACE === HTML_NAMESPACE) {\n        try {\n          doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n        } catch (_) {}\n      }\n      /* Use createHTMLDocument in case DOMParser is not available */\n\n\n      if (!doc || !doc.documentElement) {\n        doc = implementation.createDocument(NAMESPACE, 'template', null);\n\n        try {\n          doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n        } catch (_) {// Syntax error if dirtyPayload is invalid xml\n        }\n      }\n\n      const body = doc.body || doc.documentElement;\n\n      if (dirty && leadingWhitespace) {\n        body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n      }\n      /* Work on whole document or just its body */\n\n\n      if (NAMESPACE === HTML_NAMESPACE) {\n        return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n      }\n\n      return WHOLE_DOCUMENT ? doc.documentElement : body;\n    };\n    /**\n     * _createIterator\n     *\n     * @param  {Document} root document/fragment to create iterator for\n     * @return {Iterator} iterator instance\n     */\n\n\n    const _createIterator = function _createIterator(root) {\n      return createNodeIterator.call(root.ownerDocument || root, root, // eslint-disable-next-line no-bitwise\n      NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT, null, false);\n    };\n    /**\n     * _isClobbered\n     *\n     * @param  {Node} elm element to check for clobbering attacks\n     * @return {Boolean} true if clobbered, false if safe\n     */\n\n\n    const _isClobbered = function _isClobbered(elm) {\n      return elm instanceof HTMLFormElement && (typeof elm.nodeName !== 'string' || typeof elm.textContent !== 'string' || typeof elm.removeChild !== 'function' || !(elm.attributes instanceof NamedNodeMap) || typeof elm.removeAttribute !== 'function' || typeof elm.setAttribute !== 'function' || typeof elm.namespaceURI !== 'string' || typeof elm.insertBefore !== 'function' || typeof elm.hasChildNodes !== 'function');\n    };\n    /**\n     * _isNode\n     *\n     * @param  {Node} obj object to check whether it's a DOM node\n     * @return {Boolean} true is object is a DOM node\n     */\n\n\n    const _isNode = function _isNode(object) {\n      return typeof Node === 'object' ? object instanceof Node : object && typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string';\n    };\n    /**\n     * _executeHook\n     * Execute user configurable hooks\n     *\n     * @param  {String} entryPoint  Name of the hook's entry point\n     * @param  {Node} currentNode node to work on with the hook\n     * @param  {Object} data additional hook parameters\n     */\n\n\n    const _executeHook = function _executeHook(entryPoint, currentNode, data) {\n      if (!hooks[entryPoint]) {\n        return;\n      }\n\n      arrayForEach(hooks[entryPoint], hook => {\n        hook.call(DOMPurify, currentNode, data, CONFIG);\n      });\n    };\n    /**\n     * _sanitizeElements\n     *\n     * @protect nodeName\n     * @protect textContent\n     * @protect removeChild\n     *\n     * @param   {Node} currentNode to check for permission to exist\n     * @return  {Boolean} true if node was killed, false if left alive\n     */\n\n\n    const _sanitizeElements = function _sanitizeElements(currentNode) {\n      let content;\n      /* Execute a hook if present */\n\n      _executeHook('beforeSanitizeElements', currentNode, null);\n      /* Check if element is clobbered or can clobber */\n\n\n      if (_isClobbered(currentNode)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Now let's check the element's type and name */\n\n\n      const tagName = transformCaseFunc(currentNode.nodeName);\n      /* Execute a hook if present */\n\n      _executeHook('uponSanitizeElement', currentNode, {\n        tagName,\n        allowedTags: ALLOWED_TAGS\n      });\n      /* Detect mXSS attempts abusing namespace confusion */\n\n\n      if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && (!_isNode(currentNode.content) || !_isNode(currentNode.content.firstElementChild)) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Remove element if anything forbids its presence */\n\n\n      if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n        /* Check if we have a custom element to handle */\n        if (!FORBID_TAGS[tagName] && _basicCustomElementTest(tagName)) {\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) return false;\n          if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) return false;\n        }\n        /* Keep content except for bad-listed elements */\n\n\n        if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n          const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n          const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n\n          if (childNodes && parentNode) {\n            const childCount = childNodes.length;\n\n            for (let i = childCount - 1; i >= 0; --i) {\n              parentNode.insertBefore(cloneNode(childNodes[i], true), getNextSibling(currentNode));\n            }\n          }\n        }\n\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Check whether element has a valid namespace */\n\n\n      if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Make sure that older browsers don't get noscript mXSS */\n\n\n      if ((tagName === 'noscript' || tagName === 'noembed') && regExpTest(/<\\/no(script|embed)/i, currentNode.innerHTML)) {\n        _forceRemove(currentNode);\n\n        return true;\n      }\n      /* Sanitize element content to be template-safe */\n\n\n      if (SAFE_FOR_TEMPLATES && currentNode.nodeType === 3) {\n        /* Get the element's text content */\n        content = currentNode.textContent;\n        content = stringReplace(content, MUSTACHE_EXPR, ' ');\n        content = stringReplace(content, ERB_EXPR, ' ');\n        content = stringReplace(content, TMPLIT_EXPR, ' ');\n\n        if (currentNode.textContent !== content) {\n          arrayPush(DOMPurify.removed, {\n            element: currentNode.cloneNode()\n          });\n          currentNode.textContent = content;\n        }\n      }\n      /* Execute a hook if present */\n\n\n      _executeHook('afterSanitizeElements', currentNode, null);\n\n      return false;\n    };\n    /**\n     * _isValidAttribute\n     *\n     * @param  {string} lcTag Lowercase tag name of containing element.\n     * @param  {string} lcName Lowercase attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid, otherwise false.\n     */\n    // eslint-disable-next-line complexity\n\n\n    const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n      /* Make sure attribute cannot clobber */\n      if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n        return false;\n      }\n      /* Allow valid data-* attributes: At least one character after \"-\"\n          (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n          XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n          We don't need to check the value; it's always URI safe. */\n\n\n      if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n        if ( // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n        // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n        _basicCustomElementTest(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) || // Alternative, second condition checks if it's an `is`-attribute, AND\n        // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n        lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n          return false;\n        }\n        /* Check value is safe. First, is attr inert? If so, is safe */\n\n      } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (!value) ; else {\n        return false;\n      }\n\n      return true;\n    };\n    /**\n     * _basicCustomElementCheck\n     * checks if at least one dash is included in tagName, and it's not the first char\n     * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n     * @param {string} tagName name of the tag of the node to sanitize\n     */\n\n\n    const _basicCustomElementTest = function _basicCustomElementTest(tagName) {\n      return tagName.indexOf('-') > 0;\n    };\n    /**\n     * _sanitizeAttributes\n     *\n     * @protect attributes\n     * @protect nodeName\n     * @protect removeAttribute\n     * @protect setAttribute\n     *\n     * @param  {Node} currentNode to sanitize\n     */\n\n\n    const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n      let attr;\n      let value;\n      let lcName;\n      let l;\n      /* Execute a hook if present */\n\n      _executeHook('beforeSanitizeAttributes', currentNode, null);\n\n      const {\n        attributes\n      } = currentNode;\n      /* Check if we have attributes; if not we might have a text node */\n\n      if (!attributes) {\n        return;\n      }\n\n      const hookEvent = {\n        attrName: '',\n        attrValue: '',\n        keepAttr: true,\n        allowedAttributes: ALLOWED_ATTR\n      };\n      l = attributes.length;\n      /* Go backwards over all attributes; safely remove bad ones */\n\n      while (l--) {\n        attr = attributes[l];\n        const {\n          name,\n          namespaceURI\n        } = attr;\n        value = name === 'value' ? attr.value : stringTrim(attr.value);\n        lcName = transformCaseFunc(name);\n        /* Execute a hook if present */\n\n        hookEvent.attrName = lcName;\n        hookEvent.attrValue = value;\n        hookEvent.keepAttr = true;\n        hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n\n        _executeHook('uponSanitizeAttribute', currentNode, hookEvent);\n\n        value = hookEvent.attrValue;\n        /* Did the hooks approve of the attribute? */\n\n        if (hookEvent.forceKeepAttr) {\n          continue;\n        }\n        /* Remove attribute */\n\n\n        _removeAttribute(name, currentNode);\n        /* Did the hooks approve of the attribute? */\n\n\n        if (!hookEvent.keepAttr) {\n          continue;\n        }\n        /* Work around a security issue in jQuery 3.0 */\n\n\n        if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n          _removeAttribute(name, currentNode);\n\n          continue;\n        }\n        /* Sanitize attribute content to be template-safe */\n\n\n        if (SAFE_FOR_TEMPLATES) {\n          value = stringReplace(value, MUSTACHE_EXPR, ' ');\n          value = stringReplace(value, ERB_EXPR, ' ');\n          value = stringReplace(value, TMPLIT_EXPR, ' ');\n        }\n        /* Is `value` valid for this attribute? */\n\n\n        const lcTag = transformCaseFunc(currentNode.nodeName);\n\n        if (!_isValidAttribute(lcTag, lcName, value)) {\n          continue;\n        }\n        /* Full DOM Clobbering protection via namespace isolation,\n         * Prefix id and name attributes with `user-content-`\n         */\n\n\n        if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n          // Remove the attribute with this value\n          _removeAttribute(name, currentNode); // Prefix the value and later re-create the attribute with the sanitized value\n\n\n          value = SANITIZE_NAMED_PROPS_PREFIX + value;\n        }\n        /* Handle attributes that require Trusted Types */\n\n\n        if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n          if (namespaceURI) ; else {\n            switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n              case 'TrustedHTML':\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n\n              case 'TrustedScriptURL':\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n            }\n          }\n        }\n        /* Handle invalid data-* attribute set by try-catching it */\n\n\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n\n          arrayPop(DOMPurify.removed);\n        } catch (_) {}\n      }\n      /* Execute a hook if present */\n\n\n      _executeHook('afterSanitizeAttributes', currentNode, null);\n    };\n    /**\n     * _sanitizeShadowDOM\n     *\n     * @param  {DocumentFragment} fragment to iterate over recursively\n     */\n\n\n    const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n      let shadowNode;\n\n      const shadowIterator = _createIterator(fragment);\n      /* Execute a hook if present */\n\n\n      _executeHook('beforeSanitizeShadowDOM', fragment, null);\n\n      while (shadowNode = shadowIterator.nextNode()) {\n        /* Execute a hook if present */\n        _executeHook('uponSanitizeShadowNode', shadowNode, null);\n        /* Sanitize tags and elements */\n\n\n        if (_sanitizeElements(shadowNode)) {\n          continue;\n        }\n        /* Deep shadow DOM detected */\n\n\n        if (shadowNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(shadowNode.content);\n        }\n        /* Check attributes, sanitize if necessary */\n\n\n        _sanitizeAttributes(shadowNode);\n      }\n      /* Execute a hook if present */\n\n\n      _executeHook('afterSanitizeShadowDOM', fragment, null);\n    };\n    /**\n     * Sanitize\n     * Public method providing core sanitation functionality\n     *\n     * @param {String|Node} dirty string or DOM node\n     * @param {Object} configuration object\n     */\n    // eslint-disable-next-line complexity\n\n\n    DOMPurify.sanitize = function (dirty) {\n      let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      let body;\n      let importedNode;\n      let currentNode;\n      let returnNode;\n      /* Make sure we have a string to sanitize.\n        DO NOT return early, as this will return the wrong type if\n        the user has requested a DOM object rather than a string */\n\n      IS_EMPTY_INPUT = !dirty;\n\n      if (IS_EMPTY_INPUT) {\n        dirty = '<!-->';\n      }\n      /* Stringify, in case dirty is an object */\n\n\n      if (typeof dirty !== 'string' && !_isNode(dirty)) {\n        // eslint-disable-next-line no-negated-condition\n        if (typeof dirty.toString !== 'function') {\n          throw typeErrorCreate('toString is not a function');\n        } else {\n          dirty = dirty.toString();\n\n          if (typeof dirty !== 'string') {\n            throw typeErrorCreate('dirty is not a string, aborting');\n          }\n        }\n      }\n      /* Return dirty HTML if DOMPurify cannot run */\n\n\n      if (!DOMPurify.isSupported) {\n        return dirty;\n      }\n      /* Assign config vars */\n\n\n      if (!SET_CONFIG) {\n        _parseConfig(cfg);\n      }\n      /* Clean up removed elements */\n\n\n      DOMPurify.removed = [];\n      /* Check if dirty is correctly typed for IN_PLACE */\n\n      if (typeof dirty === 'string') {\n        IN_PLACE = false;\n      }\n\n      if (IN_PLACE) {\n        /* Do some early pre-sanitization to avoid unsafe root nodes */\n        if (dirty.nodeName) {\n          const tagName = transformCaseFunc(dirty.nodeName);\n\n          if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n            throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n          }\n        }\n      } else if (dirty instanceof Node) {\n        /* If dirty is a DOM element, append to an empty document to avoid\n           elements being stripped by the parser */\n        body = _initDocument('<!---->');\n        importedNode = body.ownerDocument.importNode(dirty, true);\n\n        if (importedNode.nodeType === 1 && importedNode.nodeName === 'BODY') {\n          /* Node is already a body, use as is */\n          body = importedNode;\n        } else if (importedNode.nodeName === 'HTML') {\n          body = importedNode;\n        } else {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          body.appendChild(importedNode);\n        }\n      } else {\n        /* Exit directly if we have nothing to do */\n        if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT && // eslint-disable-next-line unicorn/prefer-includes\n        dirty.indexOf('<') === -1) {\n          return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n        }\n        /* Initialize the document to work on */\n\n\n        body = _initDocument(dirty);\n        /* Check we have a DOM node from the data */\n\n        if (!body) {\n          return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n        }\n      }\n      /* Remove first element node (ours) if FORCE_BODY is set */\n\n\n      if (body && FORCE_BODY) {\n        _forceRemove(body.firstChild);\n      }\n      /* Get node iterator */\n\n\n      const nodeIterator = _createIterator(IN_PLACE ? dirty : body);\n      /* Now start iterating over the created document */\n\n\n      while (currentNode = nodeIterator.nextNode()) {\n        /* Sanitize tags and elements */\n        if (_sanitizeElements(currentNode)) {\n          continue;\n        }\n        /* Shadow DOM detected, sanitize it */\n\n\n        if (currentNode.content instanceof DocumentFragment) {\n          _sanitizeShadowDOM(currentNode.content);\n        }\n        /* Check attributes, sanitize if necessary */\n\n\n        _sanitizeAttributes(currentNode);\n      }\n      /* If we sanitized `dirty` in-place, return it. */\n\n\n      if (IN_PLACE) {\n        return dirty;\n      }\n      /* Return sanitized string or DOM */\n\n\n      if (RETURN_DOM) {\n        if (RETURN_DOM_FRAGMENT) {\n          returnNode = createDocumentFragment.call(body.ownerDocument);\n\n          while (body.firstChild) {\n            // eslint-disable-next-line unicorn/prefer-dom-node-append\n            returnNode.appendChild(body.firstChild);\n          }\n        } else {\n          returnNode = body;\n        }\n\n        if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmod) {\n          /*\n            AdoptNode() is not used because internal state is not reset\n            (e.g. the past names map of a HTMLFormElement), this is safe\n            in theory but we would rather not risk another attack vector.\n            The state that is cloned by importNode() is explicitly defined\n            by the specs.\n          */\n          returnNode = importNode.call(originalDocument, returnNode, true);\n        }\n\n        return returnNode;\n      }\n\n      let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n      /* Serialize doctype if allowed */\n\n      if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n        serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n      }\n      /* Sanitize final string template-safe */\n\n\n      if (SAFE_FOR_TEMPLATES) {\n        serializedHTML = stringReplace(serializedHTML, MUSTACHE_EXPR, ' ');\n        serializedHTML = stringReplace(serializedHTML, ERB_EXPR, ' ');\n        serializedHTML = stringReplace(serializedHTML, TMPLIT_EXPR, ' ');\n      }\n\n      return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n    };\n    /**\n     * Public method to set the configuration once\n     * setConfig\n     *\n     * @param {Object} cfg configuration object\n     */\n\n\n    DOMPurify.setConfig = function (cfg) {\n      _parseConfig(cfg);\n\n      SET_CONFIG = true;\n    };\n    /**\n     * Public method to remove the configuration\n     * clearConfig\n     *\n     */\n\n\n    DOMPurify.clearConfig = function () {\n      CONFIG = null;\n      SET_CONFIG = false;\n    };\n    /**\n     * Public method to check if an attribute value is valid.\n     * Uses last set config, if any. Otherwise, uses config defaults.\n     * isValidAttribute\n     *\n     * @param  {string} tag Tag name of containing element.\n     * @param  {string} attr Attribute name.\n     * @param  {string} value Attribute value.\n     * @return {Boolean} Returns true if `value` is valid. Otherwise, returns false.\n     */\n\n\n    DOMPurify.isValidAttribute = function (tag, attr, value) {\n      /* Initialize shared config vars if necessary. */\n      if (!CONFIG) {\n        _parseConfig({});\n      }\n\n      const lcTag = transformCaseFunc(tag);\n      const lcName = transformCaseFunc(attr);\n      return _isValidAttribute(lcTag, lcName, value);\n    };\n    /**\n     * AddHook\n     * Public method to add DOMPurify hooks\n     *\n     * @param {String} entryPoint entry point for the hook to add\n     * @param {Function} hookFunction function to execute\n     */\n\n\n    DOMPurify.addHook = function (entryPoint, hookFunction) {\n      if (typeof hookFunction !== 'function') {\n        return;\n      }\n\n      hooks[entryPoint] = hooks[entryPoint] || [];\n      arrayPush(hooks[entryPoint], hookFunction);\n    };\n    /**\n     * RemoveHook\n     * Public method to remove a DOMPurify hook at a given entryPoint\n     * (pops it from the stack of hooks if more are present)\n     *\n     * @param {String} entryPoint entry point for the hook to remove\n     * @return {Function} removed(popped) hook\n     */\n\n\n    DOMPurify.removeHook = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        return arrayPop(hooks[entryPoint]);\n      }\n    };\n    /**\n     * RemoveHooks\n     * Public method to remove all DOMPurify hooks at a given entryPoint\n     *\n     * @param  {String} entryPoint entry point for the hooks to remove\n     */\n\n\n    DOMPurify.removeHooks = function (entryPoint) {\n      if (hooks[entryPoint]) {\n        hooks[entryPoint] = [];\n      }\n    };\n    /**\n     * RemoveAllHooks\n     * Public method to remove all DOMPurify hooks\n     *\n     */\n\n\n    DOMPurify.removeAllHooks = function () {\n      hooks = {};\n    };\n\n    return DOMPurify;\n  }\n\n  var purify = createDOMPurify();\n\n  return purify;\n\n}));\n//# sourceMappingURL=purify.js.map\n","import { sanitize as purify } from 'dompurify'\n\nconst sanitizeConfigCustomElements = {\n  CUSTOM_ELEMENT_HANDLING: {\n    tagNameCheck: /^ld-/,\n  },\n}\n\nexport const sanitize = (\n  htmlString: string,\n  sanitizeConfig: SanitizeConfig | string\n) => {\n  return purify(htmlString, {\n    ...sanitizeConfigCustomElements,\n    ...(typeof sanitizeConfig === 'string'\n      ? JSON.parse(sanitizeConfig)\n      : sanitizeConfig || {}),\n  } as SanitizeConfig)\n}\n",":host {\n  /* layout */\n  --ld-notification-min-height: var(--ld-sp-40);\n  --ld-notification-border-radius: var(--ld-br-m);\n  --ld-notification-inset-y: var(--ld-sp-32);\n\n  /* colors */\n  --ld-notification-col: var(--ld-col-wht);\n  --ld-notification-warn-col: var(--ld-col-neutral-900);\n  --ld-notification-alert-col: var(--ld-col-wht);\n\n  /* themable colors */\n  --ld-notification-bg-col: var(--ld-thm-primary);\n  --ld-notification-warn-bg-col: var(--ld-thm-warning);\n  --ld-notification-alert-bg-col: var(--ld-thm-error);\n\n  position: fixed;\n  z-index: 2147483647; /* Highest possible */\n  display: flex;\n  justify-content: center;\n  inset: 0;\n  min-width: 20rem;\n  font: var(--ld-typo-body-m);\n  pointer-events: none;\n}\n\n@keyframes ld-notification-fade-in {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes ld-notification-fade-out {\n  from {\n    transform: none;\n    opacity: 1;\n  }\n  to {\n    transform: none;\n    opacity: 0;\n  }\n}\n\n.ld-notification__item {\n  pointer-events: auto;\n  position: absolute;\n  transform-origin: center;\n  width: fit-content;\n  min-width: 19rem;\n  max-width: calc(90% - 1rem);\n  max-height: 80vh;\n  overflow-y: auto;\n  display: flex;\n  justify-content: space-between;\n  transition: transform var(--ld-transition-duration-normal) ease,\n    opacity var(--ld-transition-duration-normal) linear;\n  box-shadow: var(--ld-shadow-sticky);\n  min-height: var(--ld-notification-min-height);\n  border-radius: var(--ld-notification-border-radius);\n\n  &:where(:not(.ld-notification__item--dismissed)) {\n    animation: ld-notification-fade-in var(--ld-transition-duration-normal)\n      linear;\n  }\n\n  &:nth-last-of-type(n + 5) {\n    opacity: 0;\n  }\n\n  &:nth-last-of-type(n + 2) {\n    .ld-notification__item-content,\n    .ld-notification__btn-dismiss {\n      opacity: 0;\n    }\n  }\n\n  &:nth-last-of-type(2) {\n    opacity: 0.75;\n  }\n\n  &:nth-last-of-type(3) {\n    opacity: 0.5;\n  }\n\n  &:nth-last-of-type(4) {\n    opacity: 0.25;\n  }\n\n  &.ld-notification__item--dismissed {\n    opacity: 0;\n    animation: ld-notification-fade-out var(--ld-transition-duration-normal)\n      linear forwards;\n  }\n\n  :host(.ld-notification--bottom) & {\n    bottom: var(--ld-notification-inset-y);\n\n    &:nth-last-of-type(2) {\n      transform: scale(0.975) translateY(25%);\n    }\n\n    &:nth-last-of-type(3) {\n      transform: scale(0.95) translateY(50%);\n    }\n\n    &:nth-last-of-type(4) {\n      transform: scale(0.925) translateY(75%);\n    }\n  }\n\n  :host(.ld-notification--top) & {\n    top: var(--ld-notification-inset-y);\n\n    &:nth-last-of-type(2) {\n      transform: scale(0.975) translateY(-25%);\n    }\n\n    &:nth-last-of-type(3) {\n      transform: scale(0.95) translateY(-50%);\n    }\n\n    &:nth-last-of-type(4) {\n      transform: scale(0.925) translateY(-75%);\n    }\n  }\n}\n\n.ld-notification__item--info {\n  background-color: var(--ld-notification-bg-col);\n  color: var(--ld-notification-col);\n}\n.ld-notification__item--warn {\n  background-color: var(--ld-notification-warn-bg-col);\n  color: var(--ld-notification-warn-col);\n}\n.ld-notification__item--alert {\n  background-color: var(--ld-notification-alert-bg-col);\n  color: var(--ld-notification-alert-col);\n}\n\n.ld-notification__item-content,\n.ld-notification__btn-dismiss {\n  transition: opacity var(--ld-transition-duration-normal) linear;\n}\n\n.ld-notification__item-content {\n  display: grid;\n  grid-auto-flow: column;\n  align-items: baseline;\n  gap: var(--ld-sp-12);\n  padding: var(--ld-sp-6) var(--ld-sp-12);\n\n  > * {\n    align-self: center;\n  }\n}\n\n.ld-notification__btn-dismiss {\n  margin-left: var(--ld-sp-16);\n  align-self: center;\n  flex-shrink: 0;\n  border: 0;\n  border-radius: var(--ld-br-full);\n  background-color: transparent;\n  cursor: pointer;\n  padding: 0;\n  height: var(--ld-sp-40);\n  width: var(--ld-sp-40);\n  display: inline-grid;\n  place-items: center;\n  color: inherit;\n  user-select: none;\n  touch-action: manipulation;\n  -webkit-touch-callout: none;\n}\n","import { Component, h, Host, Listen, Prop, State, Watch } from '@stencil/core'\nimport { sanitize } from '../../utils/sanitize'\n\ntype Notification = {\n  type: 'info' | 'warn' | 'alert'\n  content: string\n  timeout?: number\n}\n\nconst DEFAULT_NOTIFICATION_TIMEOUT = 6000\nconst FADE_TRANSITION_DURATION = 200\n\n@Component({\n  tag: 'ld-notification',\n  styleUrl: 'ld-notification.shadow.css',\n  shadow: true,\n})\nexport class LdNotification {\n  /**\n   * Notification placement within the screen.\n   */\n  @Prop() placement?: 'top' | 'bottom' = 'top'\n\n  /**\n   * Sanitize config passed to DOMPurify's sanitize method.\n   * If passed as string, the component will try to parse the string as JSON.\n   * See https://github.com/cure53/DOMPurify#can-i-configure-dompurify\n   */\n  @Prop() sanitizeConfig?: SanitizeConfig | string\n\n  @State() queue: Notification[] = []\n  @State() queueDismissed: Notification[] = []\n\n  @State() dismissTimeout: NodeJS.Timeout | null\n\n  @State() fadeoutTimeouts: (NodeJS.Timeout | null)[] = []\n\n  @State() currentNotification?: Notification\n\n  @Watch('currentNotification')\n  updateDismissTimeout() {\n    clearTimeout(this.dismissTimeout)\n\n    if (!this.currentNotification) return\n\n    // Do not dismiss, if alert has no explicit timeout.\n    if (\n      this.currentNotification.type === 'alert' &&\n      !this.currentNotification.timeout\n    ) {\n      return\n    }\n\n    // Do not dismiss, if timeout is disabled explicitly.\n    if (this.currentNotification.timeout === 0) return\n\n    this.dismissTimeout = setTimeout(() => {\n      this.handleNotificationDismiss()\n    }, this.currentNotification.timeout || DEFAULT_NOTIFICATION_TIMEOUT)\n  }\n\n  @Listen('ldNotificationAdd', {\n    target: 'window',\n    passive: true,\n  })\n  handleNotification(ev: CustomEvent<Notification>) {\n    ev.stopImmediatePropagation()\n    const newNotification = ev.detail\n\n    // If the same notification is already in queue (same content, same type), ignore this notification.\n    const inQueue = this.queue.some(\n      (notification) =>\n        notification.content === newNotification.content &&\n        notification.type === newNotification.type\n    )\n    if (inQueue) return\n\n    // Insert by relevance, whith error notifications being more relevant than non-error notifications.\n    if (newNotification.type === 'alert') {\n      this.queue = [...this.queue, newNotification]\n      this.currentNotification = newNotification\n      return\n    }\n\n    const firstErrorNotificationIndex = this.queue.findIndex(\n      (notification) => notification.type === 'alert'\n    )\n    if (firstErrorNotificationIndex === -1) {\n      this.queue = [...this.queue, newNotification]\n      this.currentNotification = newNotification\n      return\n    }\n\n    this.queue.splice(firstErrorNotificationIndex, 0, newNotification)\n    this.queue = [...this.queue]\n  }\n\n  @Listen('ldNotificationDismiss', {\n    target: 'window',\n    passive: true,\n  })\n  handleNotificationDismiss() {\n    if (!this.currentNotification) return\n\n    this.queueDismissed.unshift(this.queue.pop())\n    this.queueDismissed = [...this.queueDismissed]\n    this.queue = [...this.queue]\n    this.currentNotification = this.queue[this.queue.length - 1]\n\n    this.fadeoutTimeouts.push(\n      setTimeout(() => {\n        this.queueDismissed = this.queueDismissed.slice(0, -1)\n      }, FADE_TRANSITION_DURATION)\n    )\n  }\n\n  @Listen('ldNotificationClear', {\n    target: 'window',\n    passive: true,\n  })\n  handleNotificationClear() {\n    this.queueDismissed = [...this.queue]\n    this.queue = []\n    this.currentNotification = undefined\n    this.fadeoutTimeouts.forEach(clearTimeout)\n    this.fadeoutTimeouts.push(\n      setTimeout(() => {\n        this.queueDismissed = []\n      }, FADE_TRANSITION_DURATION)\n    )\n  }\n\n  private renderNotification(notification: Notification, dismissed = false) {\n    let cl = `ld-notification__item ld-notification__item--${\n      notification.type || 'info'\n    }`\n    if (dismissed) cl += ' ld-notification__item--dismissed'\n\n    return (\n      <div\n        class={cl}\n        key={notification.type + notification.content}\n        part=\"item\"\n      >\n        <div\n          class=\"ld-notification__item-content\"\n          innerHTML={sanitize(notification.content, this.sanitizeConfig)}\n          role={notification.type === 'alert' ? 'alert' : 'status'}\n          part=\"content\"\n        ></div>\n        <button\n          class=\"ld-notification__btn-dismiss\"\n          onClick={\n            dismissed ? undefined : this.handleNotificationDismiss.bind(this)\n          }\n          part=\"btn-dismiss focusable\"\n        >\n          {/* custom icon cross */}\n          <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            part=\"btn-dismiss-icon\"\n          >\n            <title>Dismiss</title>\n            <path\n              d=\"M6 6L18 18\"\n              stroke=\"currentColor\"\n              stroke-width=\"3\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            />\n            <path\n              d=\"M6 18L18 6\"\n              stroke=\"currentColor\"\n              stroke-width=\"3\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            />\n          </svg>\n        </button>\n      </div>\n    )\n  }\n\n  /* istanbul ignore next */\n  disconnectedCallback() {\n    clearTimeout(this.dismissTimeout)\n    this.fadeoutTimeouts.forEach(clearTimeout)\n  }\n\n  render() {\n    const cl = `ld-notification ld-notification--${this.placement}`\n\n    return (\n      <Host class={cl} role=\"region\" aria-label=\"Notifications\">\n        {this.queue.map((notification) =>\n          this.renderNotification.call(this, notification)\n        )}\n        {this.queueDismissed.map((notification) =>\n          this.renderNotification.call(this, notification, true)\n        )}\n      </Host>\n    )\n  }\n}\n"],"mappings":"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"}