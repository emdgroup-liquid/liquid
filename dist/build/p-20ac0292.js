const t=["a[href]","area[href]",'input:not([type="hidden"]):not([type="radio"]):not(:disabled)','input[type="radio"]:not(:disabled)',"select:not(:disabled)","textarea:not(:disabled)","button:not(:disabled)","iframe","audio[controls]","video[controls]","[contenteditable]","[tabindex]"].map((t=>t+':not([tabindex^="-"])')).join(","),n=o=>{if(o.matches(t))return o;if("SLOT"===o.tagName){const t=o.getRootNode().host,e=o.getAttribute("name")?t.querySelector(`[slot="${o.getAttribute("name")}"]`):Array.from(t.children).find((t=>!t.hasAttribute("slot")));return e?n(e):null}if(o.shadowRoot){const t=Array.from(o.shadowRoot.children);for(const o of t){const t=n(o);if(t)return t}}const e=Array.from(o.children);for(const t of e){const o=n(t);if(o)return o}return null},o=t=>t&&"focusInner"in t;let e;const r=t=>{t&&!e&&(e=setTimeout((()=>{const t=Array.from(document.querySelectorAll("[autofocus]")).find((t=>!t.disabled));o(t)&&t.focusInner()}),200))};export{n as g,o as i,r}