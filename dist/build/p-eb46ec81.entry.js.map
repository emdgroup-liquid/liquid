{"version":3,"names":["ldMenuCss","getMenuItemOrNestedMenuItems","node","isElement","isMenuItem","items","isSlot","assignedNodes","forEach","push","childNodes","LdMenu","this","initMenuItems","element","initial","size","ldTabindex","initialized","getAllMenuItems","el","querySelectorAll","focusFirst","target","allMenuItems","first","focusInner","focusLast","last","length","focusNext","index","indexOf","next","focusPrev","prev","handleKeyDown","event","focusedElement","key","preventDefault","metaKey","typeAheadHandler","typeAhead","updateMenuItems","async","handleSizeChange","componentWillLoad","TypeAheadHandler","disconnectedCallback","clearTimeout","render","h","Host","onKeyDown","class","part","role"],"sources":["../src/liquid/components/ld-context-menu/ld-menu/ld-menu.css?tag=ld-menu&encapsulation=shadow","../src/liquid/components/ld-context-menu/ld-menu/ld-menu.tsx"],"sourcesContent":[":host {\n  display: inline-flex;\n}\n\n.ld-menu {\n  background: var(--ld-col-wht);\n  border-radius: var(--ld-br-l);\n  box-shadow: var(--ld-shadow-stacked);\n  box-sizing: border-box;\n  list-style: none;\n  margin: 0;\n  padding: var(--ld-sp-12);\n}\n","import {\n  Component,\n  Element,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core'\nimport { TypeAheadHandler } from '../../../utils/typeahead'\nimport { isElement, isMenuItem, isSlot } from '../../../utils/type-checking'\n\nconst getMenuItemOrNestedMenuItems = (node: Node) => {\n  if (!isElement(node)) {\n    return []\n  }\n\n  if (isMenuItem(node)) {\n    return [node]\n  }\n\n  const items: HTMLLdMenuitemElement[] = []\n\n  if (isSlot(node)) {\n    node\n      .assignedNodes()\n      .forEach((node) => items.push(...getMenuItemOrNestedMenuItems(node)))\n    return items\n  }\n\n  node.childNodes.forEach((node) =>\n    items.push(...getMenuItemOrNestedMenuItems(node))\n  )\n\n  return items\n}\n\n/**\n * @virtualProp ref - reference to component\n * @virtualProp {string | number} key - for tracking the node's identity when working with lists\n * @part list - `ul` element wrapping the default slot\n */\n@Component({\n  tag: 'ld-menu',\n  styleUrl: 'ld-menu.css',\n  shadow: true,\n})\nexport class LdMenu {\n  @Element() el: HTMLLdMenuElement\n\n  /** Size of the context menu. */\n  @Prop() size?: 'sm' | 'lg'\n\n  @State() initialized = false\n  @State() typeAheadHandler: TypeAheadHandler<HTMLLdMenuitemElement>\n\n  private initMenuItems = (element: Node, initial = false) => {\n    if (!isElement(element)) {\n      return\n    }\n\n    if (isMenuItem(element)) {\n      element.size = this.size\n\n      if (!initial) {\n        return\n      }\n\n      element.ldTabindex = this.initialized ? -1 : 0\n\n      if (!this.initialized) {\n        this.initialized = true\n      }\n\n      return\n    }\n\n    if (isSlot(element)) {\n      element.assignedNodes().forEach((node) => this.initMenuItems(node))\n      return\n    }\n\n    element.childNodes.forEach((node) => this.initMenuItems(node))\n  }\n\n  /** Get the first menu item inside this menu. */\n  @Method()\n  async getFirstMenuItem(): Promise<HTMLLdMenuitemElement> {\n    return this.getAllMenuItems()[0]\n  }\n\n  private getAllMenuItems = () => {\n    const items: HTMLLdMenuitemElement[] = []\n\n    this.el\n      .querySelectorAll('slot, ld-menuitem')\n      .forEach((node) => items.push(...getMenuItemOrNestedMenuItems(node)))\n\n    return items\n  }\n\n  private focusFirst = (target: HTMLLdMenuitemElement) => {\n    const allMenuItems = this.getAllMenuItems()\n    const [first] = allMenuItems\n\n    target.ldTabindex = -1\n    first.ldTabindex = 0\n    first.focusInner()\n  }\n\n  private focusLast = (target: HTMLLdMenuitemElement) => {\n    const allMenuItems = this.getAllMenuItems()\n    const last = allMenuItems[allMenuItems.length - 1]\n\n    target.ldTabindex = -1\n    last.ldTabindex = 0\n    last.focusInner()\n  }\n\n  private focusNext = (target: HTMLLdMenuitemElement) => {\n    const allMenuItems = this.getAllMenuItems()\n    const index = allMenuItems.indexOf(target)\n    const next =\n      allMenuItems.length > index + 1\n        ? allMenuItems[index + 1]\n        : allMenuItems[0]\n\n    target.ldTabindex = -1\n    next.ldTabindex = 0\n    next.focusInner()\n  }\n\n  private focusPrev = (target: HTMLLdMenuitemElement) => {\n    const allMenuItems = this.getAllMenuItems()\n    const index = allMenuItems.indexOf(target)\n    const prev =\n      index === 0\n        ? allMenuItems[allMenuItems.length - 1]\n        : allMenuItems[index - 1]\n\n    target.ldTabindex = -1\n    prev.ldTabindex = 0\n    prev.focusInner()\n  }\n\n  private handleKeyDown = (event: KeyboardEvent) => {\n    const target = event.target as HTMLLdMenuitemElement\n    let focusedElement: HTMLLdMenuitemElement\n\n    switch (event.key) {\n      case 'ArrowUp':\n        event.preventDefault()\n        if (event.metaKey) {\n          this.focusFirst(target)\n        } else {\n          this.focusPrev(target)\n        }\n        break\n      case 'ArrowDown':\n        event.preventDefault()\n        if (event.metaKey) {\n          this.focusLast(target)\n        } else {\n          this.focusNext(target)\n        }\n        break\n      case 'Home':\n        event.preventDefault()\n        this.focusFirst(target)\n        break\n      case 'End':\n        event.preventDefault()\n        this.focusLast(target)\n        break\n      default:\n        focusedElement = this.typeAheadHandler.typeAhead(event.key, target)\n\n        if (focusedElement) {\n          target.ldTabindex = -1\n          focusedElement.ldTabindex = 0\n        }\n    }\n  }\n\n  @Watch('size')\n  handleSizeChange() {\n    this.updateMenuItems()\n  }\n\n  private updateMenuItems = (initial = false) => {\n    this.el\n      .querySelectorAll('slot, ld-menuitem')\n      .forEach((element) => this.initMenuItems(element, initial))\n  }\n\n  componentWillLoad() {\n    this.updateMenuItems(true)\n    this.typeAheadHandler = new TypeAheadHandler(this.getAllMenuItems())\n  }\n\n  disconnectedCallback() {\n    this.typeAheadHandler.clearTimeout()\n  }\n\n  render() {\n    return (\n      <Host onKeyDown={this.handleKeyDown}>\n        <ul class=\"ld-menu\" part=\"list\" role=\"menu\">\n          <slot />\n        </ul>\n      </Host>\n    )\n  }\n}\n"],"mappings":"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"}