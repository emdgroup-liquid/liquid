{"version":3,"names":["ldTablistShadowCss","LdTablist","this","isFloating","includes","mode","onClick","ev","pointerType","focusVisible","onFocusout","relatedTarget","closest","el","selectedIsFocused","onKeydown","key","preventDefault","focusTab","target","setFocusOnSelectedTabpanel","handleResize","updateSelectedTabIndicator","updateScrollable","updateScrollButtons","updateSelectedTab","selectedTab","Array","from","querySelectorAll","find","tab","selected","scrollButtonsWidth","scrollable","Math","round","btnScrollLeftRef","getBoundingClientRect","width","scrollContainerWidth","slotContainerRef","contentWidth","children","map","child","reduce","a","b","scrollLeftEnabled","scrollLeft","scrollRightEnabled","scrollWidth","scroll","dir","scrollTo","left","behavior","prevLdTab","currentTab","previousElementSibling","nextElementSibling","isInnerFocusable","focusInner","scrollTabIntoView","_a","tabpanel","hasAttribute","focus","scrollButtonWidth","offsetLeft","handleTabSelect","selectedTabIndicatorRef","indicatorStyle","style","opacity","selectedTabBcr","scrollContainerBcr","scrollContainerScrollLeft","transform","updateIconSize","forEach","icon","size","undefined","classList","remove","add","componentWillLoad","mutationObserver","MutationObserver","observe","subtree","childList","attributes","componentDidLoad","setTimeout","initialized","resizeObserver","ResizeObserver","disconnectedCallback","unobserve","disconnect","render","h","Host","role","class","getClassNames","rounded","part","hidden","bind","ref","tabindex","fill","height","viewBox","d","stroke","onScroll"],"sources":["../src/liquid/components/ld-tabs/ld-tablist/ld-tablist.shadow.css?tag=ld-tablist&encapsulation=shadow","../src/liquid/components/ld-tabs/ld-tablist/ld-tablist.tsx"],"sourcesContent":[":host {\n  /* layout */\n  --ld-tablist-max-height: 2.5rem;\n  --ld-tablist-padding: 0px;\n\n  /* colors */\n  --ld-tablist-border-col: var(--ld-col-neutral-100);\n  --ld-tablist-border-height: 0.1875rem;\n  --ld-tablist-btn-scroll-col: var(--ld-col-neutral-900);\n  --ld-tablist-btn-scroll-col-active: var(--ld-col-neutral-900);\n  --ld-tablist-btn-scroll-bg-col: var(--ld-col-neutral-010);\n  --ld-tablist-btn-scroll-bg-col-hover: var(--ld-col-neutral-100);\n  --ld-tablist-btn-scroll-bg-col-active: var(--ld-col-neutral-300);\n\n  /* theme colors */\n  --ld-tablist-border-brand-col: var(--ld-thm-primary-hover);\n  --ld-tablist-btn-scroll-bg-brand-col-active: var(--ld-thm-primary-active);\n  --ld-tablist-btn-scroll-bg-brand-col-hover: var(--ld-thm-primary-hover);\n  --ld-tablist-btn-scroll-bg-brand-col: var(--ld-thm-primary);\n\n  /* theme colors (ld-tab) */\n  --ld-tab-bg-brand-col-active: var(--ld-thm-primary-active);\n  --ld-tab-bg-brand-col-focus: var(--ld-thm-primary-focus);\n  --ld-tab-bg-brand-col-hover: var(--ld-thm-primary-hover);\n  --ld-tab-bg-brand-col: var(--ld-thm-primary);\n  --ld-tab-text-brand-col-focus: var(--ld-thm-primary-active);\n  --ld-tab-disabled-bg-brand-col-focus: var(--ld-thm-primary-active);\n  --ld-tab-disabled-text-brand-col-focus: var(--ld-thm-primary-focus);\n  --ld-tab-disabled-text-brand-col: var(--ld-thm-primary-focus);\n  --ld-tab-selected-border-brand-col: var(--ld-thm-secondary);\n\n  /* transitions */\n  --ld-tablist-transition-duration: 0s;\n  @media (prefers-reduced-motion: no-preference) {\n    --ld-tablist-transition-duration: var(--ld-transition-duration-normal);\n  }\n\n  position: relative; /* Host element needs to be offset parent. */\n}\n\n.ld-tablist {\n  padding: var(--ld-tablist-padding);\n  position: relative;\n  display: flex;\n  overflow: hidden;\n  z-index: 0;\n  background-color: var(--ld-tablist-btn-scroll-bg-col);\n  max-height: var(\n    --ld-tablist-max-height\n  ); /* required to fix scrollbar issue on windows */\n\n  &::after {\n    content: '';\n    position: absolute;\n    inset: auto 0 0;\n    height: var(--ld-tablist-border-height);\n    background-color: var(--ld-tablist-border-col);\n    z-index: 2;\n  }\n\n  &--rounded-all {\n    border-radius: var(--ld-br-m);\n  }\n\n  &--rounded-all-lg {\n    border-radius: var(--ld-br-l);\n  }\n\n  &--rounded-top {\n    border-radius: var(--ld-br-m) var(--ld-br-m) 0 0;\n  }\n\n  &--rounded-top-lg {\n    border-radius: var(--ld-br-l) var(--ld-br-l) 0 0;\n  }\n\n  & ::slotted(ld-tab) {\n    --ld-tab-indicator-height: var(--ld-tablist-border-height);\n  }\n\n  &--sm {\n    --ld-tablist-max-height: 2rem;\n\n    ::slotted(ld-tab) {\n      --ld-tab-font: var(--ld-typo-body-s);\n      --ld-tab-gap: 0.375rem;\n      --ld-tab-min-height: 2rem;\n      --ld-tab-padding-x: 0.625rem;\n      --ld-tab-padding-y: 0.5rem;\n    }\n  }\n\n  &--lg {\n    --ld-tablist-max-height: 3.125rem;\n\n    ::slotted(ld-tab) {\n      --ld-tab-font: var(--ld-typo-body-l);\n      --ld-tab-gap: 0.875rem;\n      --ld-tab-min-height: 3.125rem;\n      --ld-tab-padding-x: 1.3125rem;\n      --ld-tab-padding-y: 0.75rem;\n    }\n  }\n\n  &--ghost {\n    --ld-tablist-btn-scroll-bg-col: transparent;\n    ::slotted(ld-tab) {\n      --ld-tab-bg-col: transparent;\n    }\n  }\n\n  &--brand-color {\n    /* ld-tablist internal vars */\n    --ld-tablist-btn-scroll-col-active: var(--ld-col-wht);\n    --ld-tablist-btn-scroll-col: var(--ld-col-wht);\n    --ld-tablist-btn-scroll-bg-col: var(--ld-tablist-btn-scroll-bg-brand-col);\n    --ld-tablist-btn-scroll-bg-col-hover: var(\n      --ld-tablist-btn-scroll-bg-brand-col-hover\n    );\n    --ld-tablist-btn-scroll-bg-col-active: var(\n      --ld-tablist-btn-scroll-bg-brand-col-active\n    );\n    --ld-tablist-border-col: var(--ld-tablist-border-brand-col);\n\n    ::slotted(ld-tab) {\n      --ld-tab-disabled-opacity: 0.5;\n      --ld-tab-disabled-content-opacity: 1;\n\n      /* colors */\n      --ld-tab-selected-text-col-focus: var(--ld-col-wht);\n      --ld-tab-selected-text-col: var(--ld-col-wht);\n      --ld-tab-text-col: var(--ld-col-wht);\n      --ld-tab-text-col-hover: var(--ld-col-wht);\n\n      /* theme colors */\n      --ld-tab-bg-col: var(--ld-tab-bg-brand-col);\n      --ld-tab-bg-col-focus: var(--ld-tab-bg-brand-col-focus);\n      --ld-tab-bg-col-hover: var(--ld-tab-bg-brand-col-hover);\n      --ld-tab-bg-col-active: var(--ld-tab-bg-brand-col-active);\n      --ld-tab-disabled-bg-col-focus: var(--ld-tab-disabled-bg-brand-col-focus);\n      --ld-tab-disabled-text-col-focus: var(\n        --ld-tab-disabled-text-brand-col-focus\n      );\n      --ld-tab-disabled-text-col: var(--ld-tab-disabled-text-brand-col);\n      --ld-tab-selected-border-col-focus: var(--ld-tab-selected-border-col);\n      --ld-tab-selected-border-col: var(--ld-tab-selected-border-brand-col);\n      --ld-tab-text-col-focus: var(--ld-tab-text-brand-col-focus);\n    }\n  }\n\n  &--floating,\n  &--floating-on-brand-color {\n    --ld-tablist-padding: var(--ld-sp-8) 0;\n    --ld-tab-border-radius: var(--ld-br-m);\n    --ld-tab-selected-border-display: none;\n    --ld-tab-text-col-focus: var(--ld-tab-text-brand-col-focus);\n    border-radius: var(--ld-br-l);\n\n    &::after {\n      content: none;\n    }\n\n    .ld-tablist__scroll-container {\n      gap: var(--ld-sp-8);\n      padding-left: var(--ld-sp-8);\n      padding-right: var(--ld-sp-8);\n      position: relative;\n      scroll-snap-type: none;\n    }\n\n    ::slotted(ld-tab) {\n      /* colors */\n      --ld-tab-selected-text-col-focus: var(--ld-col-wht);\n      --ld-tab-selected-text-col: var(--ld-col-wht);\n      --ld-tab-bg-col: transparent;\n      --ld-tab-bg-col-active: transparent;\n      --ld-tab-bg-col-hover: transparent;\n      --ld-tab-bg-col-focus: transparent;\n      --ld-tab-disabled-bg-col-focus: transparent;\n      --ld-tab-disabled-text-col-focus: var(--ld-col-neutral-700);\n      --ld-tab-selected-bg-col-hover: transparent;\n      --ld-tab-selected-bg-col-active: transparent;\n      --ld-tab-text-col-hover: var(--ld-thm-primary-hover);\n      --ld-tab-text-col-focus: var(--ld-thm-primary-focus);\n    }\n  }\n\n  &--floating-on-brand-color {\n    --ld-tablist-btn-scroll-bg-col: var(--ld-col-wht);\n  }\n}\n\n.ld-tablist__scroll-container {\n  display: flex;\n  overflow-x: auto;\n  scroll-snap-type: x mandatory;\n  padding-bottom: 4rem;\n  margin-bottom: -4rem;\n}\n\n.ld-tablist__btn-scroll {\n  position: relative;\n  border: 0;\n  text-decoration: none;\n  user-select: none;\n  touch-action: manipulation;\n  justify-content: center;\n  align-items: center;\n  -webkit-touch-callout: none;\n  color: var(--ld-tablist-btn-scroll-col);\n  background-color: var(--ld-tablist-btn-scroll-bg-col);\n  box-shadow: var(--ld-shadow-active);\n  width: var(--ld-sp-32);\n  z-index: 2;\n\n  &:focus:focus-visible {\n    outline: none;\n  }\n\n  &[aria-disabled]:where(:not([aria-disabled=''], [aria-disabled='false'])) {\n    svg {\n      opacity: 0.25;\n    }\n  }\n\n  &:where(\n      :not(\n          [aria-disabled]:where(\n              :not([aria-disabled=''], [aria-disabled='false'])\n            )\n        )\n    ) {\n    cursor: pointer;\n\n    @media (hover: hover) {\n      &:hover {\n        background-color: var(--ld-tablist-btn-scroll-bg-col-hover);\n      }\n    }\n    &:active:focus,\n    &:active:focus:focus-visible {\n      color: var(--ld-tablist-btn-scroll-col-active);\n      background-color: var(--ld-tablist-btn-scroll-bg-col-active);\n    }\n  }\n\n  &--left {\n    left: 0;\n  }\n  &--right {\n    right: 0;\n  }\n}\n\n.ld-tablist__active-tab-indicator {\n  background-color: var(--ld-thm-primary);\n  border: solid $colorSynBrightBlue 2px;\n  border-radius: var(--ld-br-m);\n  height: var(--ld-tablist-max-height);\n  opacity: 0;\n  position: absolute;\n  width: 0;\n  will-change: transform, width;\n  z-index: -1;\n\n  /* stylelint-disable plugin/no-low-performance-animation-properties */\n  .ld-tablist--initialized & {\n    transition:\n      width var(--ld-tablist-transition-duration) ease,\n      transform var(--ld-tablist-transition-duration) ease,\n      opacity var(--ld-tablist-transition-duration)\n        var(--ld-tablist-transition-duration) linear;\n  }\n  /* stylelint-enable plugin/no-low-performance-animation-properties */\n\n  .ld-tablist--focus-visible.ld-tablist--selected-focused:focus-within & {\n    background-color: var(--ld-thm-primary-focus);\n  }\n}\n","import {\n  Component,\n  Element,\n  h,\n  Host,\n  Listen,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core'\nimport { getClassNames } from '../../../utils/getClassNames'\nimport { isInnerFocusable } from '../../../utils/focus'\n\n/**\n * @virtualProp ref - reference to component\n * @virtualProp {string | number} key - for tracking the node's identity when working with lists\n * @part active-tab-indicator - Active tab indicator in floating mode\n * @part arrow - Both arrow button elements\n * @part arrow-icon - Both arrow icon SVGs\n * @part arrow-icon-left - Left arrow icon SVG\n * @part arrow-icon-right - Right arrow icon SVG\n * @part arrow-left - Left arrow button element\n * @part arrow-right - Right arrow button element\n * @part scroll-container - Container wrapping the slot\n * @part wrapper - Container wrapping the arrows and the scroll-container\n */\n@Component({\n  tag: 'ld-tablist',\n  styleUrl: 'ld-tablist.shadow.css',\n  shadow: true,\n})\nexport class LdTablist {\n  @Element() el: HTMLElement\n\n  /** Size of the tabs. */\n  @Prop() size?: 'sm' | 'lg'\n\n  /** Display mode. */\n  @Prop() mode?:\n    | 'ghost'\n    | 'brand-color'\n    | 'floating'\n    | 'floating-on-brand-color'\n\n  /** Sets border radii. */\n  @Prop() rounded?: 'all' | 'all-lg' | 'top' | 'top-lg'\n\n  private slotContainerRef!: HTMLElement\n  private selectedTabIndicatorRef: HTMLElement\n  private btnScrollLeftRef!: HTMLButtonElement\n  private resizeObserver: ResizeObserver\n  private mutationObserver: MutationObserver\n\n  @State() initialized = false\n  @State() selectedTab?: HTMLLdTabElement\n  @State() scrollable: boolean\n  @State() scrollLeftEnabled: boolean\n  @State() scrollRightEnabled: boolean\n  @State() focusVisible = true\n  @State() selectedIsFocused = true\n\n  private isFloating = () =>\n    ['floating', 'floating-on-brand-color'].includes(this.mode)\n\n  private updateScrollable() {\n    if (this.isFloating()) return\n\n    // We must round all width values to prevent circular painting!\n    const scrollButtonsWidth = this.scrollable\n      ? Math.round(2 * this.btnScrollLeftRef.getBoundingClientRect().width)\n      : 0\n    const scrollContainerWidth = Math.round(\n      this.slotContainerRef.getBoundingClientRect().width\n    )\n    const contentWidth = Math.round(\n      Array.from(this.el.children)\n        .map((child) => child.getBoundingClientRect().width)\n        .reduce((a, b) => a + b)\n    )\n    this.scrollable = scrollContainerWidth + scrollButtonsWidth < contentWidth\n  }\n\n  private updateScrollButtons() {\n    if (this.isFloating()) return\n    if (!this.scrollable) return\n    this.scrollLeftEnabled = this.slotContainerRef.scrollLeft > 0\n    this.scrollRightEnabled =\n      this.slotContainerRef.scrollLeft +\n        this.slotContainerRef.getBoundingClientRect().width -\n        this.slotContainerRef.scrollWidth <\n      0\n  }\n\n  private scroll(dir: 'left' | 'right') {\n    this.slotContainerRef.scrollTo({\n      left:\n        this.slotContainerRef.scrollLeft +\n        ((dir === 'left' ? -1 : 1) *\n          this.slotContainerRef.getBoundingClientRect().width) /\n          2,\n      behavior: 'smooth',\n    })\n  }\n\n  private focusTab(prevLdTab: HTMLLdTabElement, dir: 'left' | 'right') {\n    const currentTab =\n      dir === 'left'\n        ? prevLdTab.previousElementSibling\n        : prevLdTab.nextElementSibling\n    if (isInnerFocusable(currentTab)) {\n      currentTab.focusInner()\n      this.scrollTabIntoView(currentTab as HTMLLdTabElement)\n      this.selectedIsFocused = currentTab === this.selectedTab\n    }\n  }\n\n  private setFocusOnSelectedTabpanel() {\n    // TODO: fix Stencils DOM implementation for unit testing and replace\n    // ;(this.el\n    //   .closest('ld-tabs')\n    //   .querySelector('ld-tabpanel:not([hidden])') as HTMLElement)?.focus()\n    Array.from(this.el.closest('ld-tabs').querySelectorAll('ld-tabpanel'))\n      .find((tabpanel) => !tabpanel.hasAttribute('hidden'))\n      ?.focus()\n  }\n\n  private onClick = (ev) => {\n    if (ev.pointerType === 'mouse') {\n      this.focusVisible = false\n    }\n  }\n\n  private onFocusout = (ev) => {\n    if (\n      !ev.relatedTarget ||\n      ev.relatedTarget.closest('ld-tablist') !== this.el\n    ) {\n      this.focusVisible = true\n      this.selectedIsFocused = true\n    }\n  }\n\n  private onKeydown = (ev) => {\n    switch (ev.key) {\n      case 'ArrowLeft':\n        ev.preventDefault()\n        this.focusVisible = true\n        this.focusTab(ev.target, 'left')\n        return\n      case 'ArrowRight': {\n        ev.preventDefault()\n        this.focusVisible = true\n        this.focusTab(ev.target, 'right')\n        return\n      }\n      case 'ArrowDown': {\n        ev.preventDefault()\n        this.focusVisible = true\n        this.setFocusOnSelectedTabpanel()\n        return\n      }\n    }\n  }\n\n  private handleResize = () => {\n    if (this.isFloating()) {\n      this.updateSelectedTabIndicator()\n    } else {\n      this.updateScrollable()\n      this.updateScrollButtons()\n    }\n  }\n\n  private updateSelectedTab = () => {\n    this.selectedTab = Array.from(this.el.querySelectorAll('ld-tab')).find(\n      (tab) => tab.selected\n    )\n  }\n\n  private scrollTabIntoView(tab: HTMLLdTabElement) {\n    if (!tab || !this.slotContainerRef) {\n      return\n    }\n    const scrollContainerWidth =\n      this.slotContainerRef.getBoundingClientRect().width\n    const scrollButtonWidth = this.scrollable\n      ? this.btnScrollLeftRef.getBoundingClientRect().width\n      : 0\n    this.slotContainerRef.scrollTo({\n      left:\n        tab.offsetLeft +\n        tab.getBoundingClientRect().width / 2 -\n        scrollContainerWidth / 2 -\n        scrollButtonWidth,\n      behavior: 'smooth',\n    })\n  }\n\n  @Listen('ldtabselect')\n  handleTabSelect(ev) {\n    this.selectedIsFocused = true\n    this.selectedTab = ev.target\n  }\n\n  @Watch('selectedTab')\n  private updateSelectedTabIndicator() {\n    // Scroll tab into view.\n    this.scrollTabIntoView(this.selectedTab)\n\n    if (!this.selectedTabIndicatorRef) return\n\n    const indicatorStyle = this.selectedTabIndicatorRef.style\n    if (!this.selectedTab) {\n      // hide indicator\n      indicatorStyle.opacity = '0'\n      return\n    }\n\n    const selectedTabBcr = this.selectedTab.getBoundingClientRect()\n    const scrollContainerBcr = this.slotContainerRef.getBoundingClientRect()\n    const scrollContainerScrollLeft = this.slotContainerRef.scrollLeft\n    const offsetLeft =\n      selectedTabBcr.left - scrollContainerBcr.left + scrollContainerScrollLeft\n    indicatorStyle.transform = `translateX(${offsetLeft - 8}px)`\n    indicatorStyle.width = `${selectedTabBcr.width}px`\n    indicatorStyle.opacity = '1'\n  }\n\n  @Watch('size')\n  updateIconSize() {\n    this.el.querySelectorAll('ld-icon').forEach((icon) => {\n      if (this.size !== undefined) {\n        icon.size = this.size\n      } else {\n        icon.size = undefined\n      }\n    })\n    this.el.querySelectorAll('.ld-icon').forEach((icon) => {\n      if (this.size === 'sm') {\n        icon.classList.remove('ld-icon--lg')\n        icon.classList.add('ld-icon--sm')\n      } else if (this.size === 'lg') {\n        icon.classList.remove('ld-icon--sm')\n        icon.classList.add('ld-icon--lg')\n      } else {\n        icon.classList.remove('ld-icon--sm', 'ld-icon--lg')\n      }\n    })\n  }\n\n  componentWillLoad() {\n    // Attribute selector fails in test env, hance filtering with js below.\n    this.selectedTab = Array.from(this.el.querySelectorAll('ld-tab')).find(\n      (tab) => tab.selected\n    )\n    this.updateIconSize()\n\n    this.mutationObserver = new MutationObserver(this.updateSelectedTab)\n    this.mutationObserver.observe(this.el, {\n      subtree: true,\n      childList: true,\n      attributes: false,\n    })\n  }\n\n  componentDidLoad() {\n    setTimeout(() => {\n      this.updateScrollable()\n      this.updateScrollButtons()\n      this.initialized = true\n    })\n    this.resizeObserver = new ResizeObserver(this.handleResize)\n    this.resizeObserver.observe(this.slotContainerRef)\n  }\n\n  disconnectedCallback() {\n    /* istanbul ignore if */\n    if (this.resizeObserver) {\n      this.resizeObserver.unobserve(this.slotContainerRef)\n    }\n    /* istanbul ignore if */\n    if (this.mutationObserver) this.mutationObserver.disconnect()\n  }\n\n  render() {\n    return (\n      <Host\n        onClick={this.onClick}\n        onKeydown={this.onKeydown}\n        onFocusout={this.onFocusout}\n        role=\"tablist\"\n      >\n        <div\n          class={getClassNames([\n            'ld-tablist',\n            this.initialized && 'ld-tablist--initialized',\n            this.focusVisible && 'ld-tablist--focus-visible',\n            this.selectedIsFocused && 'ld-tablist--selected-focused',\n            this.size && `ld-tablist--${this.size}`,\n            this.mode && `ld-tablist--${this.mode}`,\n            this.rounded && `ld-tablist--rounded-${this.rounded}`,\n          ])}\n          part=\"wrapper\"\n        >\n          {!this.isFloating() && (\n            <button\n              aria-disabled={this.scrollLeftEnabled ? undefined : 'true'}\n              class=\"ld-tablist__btn-scroll ld-tablist__btn-scroll--left\"\n              hidden={!this.scrollable}\n              onClick={this.scroll.bind(this, 'left')}\n              part=\"arrow arrow-left\"\n              ref={(el) => (this.btnScrollLeftRef = el)}\n              tabindex=\"-1\"\n            >\n              {/* custom icon arrow-left */}\n              <svg\n                fill=\"none\"\n                height=\"16\"\n                part=\"arrow-icon arrow-icon-left\"\n                viewBox=\"0 0 16 16\"\n                width=\"16\"\n              >\n                <title>Scroll left</title>\n                <path\n                  d=\"M10 13L6 8L10 3\"\n                  stroke=\"currentColor\"\n                  stroke-width=\"2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                />\n              </svg>\n            </button>\n          )}\n          <div\n            class=\"ld-tablist__scroll-container\"\n            onScroll={this.updateScrollButtons.bind(this)}\n            part=\"scroll-container\"\n            ref={(el) => (this.slotContainerRef = el)}\n          >\n            <slot></slot>\n            {this.isFloating() && (\n              <div\n                part=\"active-tab-indicator\"\n                class=\"ld-tablist__active-tab-indicator\"\n                ref={(el) => (this.selectedTabIndicatorRef = el)}\n              />\n            )}\n          </div>\n          {!this.isFloating() && (\n            <button\n              aria-disabled={this.scrollRightEnabled ? undefined : 'true'}\n              class=\"ld-tablist__btn-scroll ld-tablist__btn-scroll--right\"\n              hidden={!this.scrollable}\n              onClick={this.scroll.bind(this, 'right')}\n              part=\"arrow arrow-right\"\n              tabindex=\"-1\"\n            >\n              {/* custom icon arrow-right */}\n              <svg\n                fill=\"none\"\n                height=\"16\"\n                part=\"arrow-icon arrow-icon-right\"\n                viewBox=\"0 0 16 16\"\n                width=\"16\"\n              >\n                <title>Scroll right</title>\n                <path\n                  d=\"M6 13L10 8L6 3\"\n                  stroke=\"currentColor\"\n                  stroke-width=\"2\"\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                />\n              </svg>\n            </button>\n          )}\n        </div>\n      </Host>\n    )\n  }\n}\n"],"mappings":"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"}