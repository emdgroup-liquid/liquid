{"version":3,"names":["ldInputCss","LdInputStyle0","LdInput","this","isInputTypeFile","input","type","handleChange","ev","el","dispatchEvent","InputEvent","ldchange","emit","value","handleInput","ldinput","handleClick","target","composedPath","disabled","isAriaDisabled","ariaDisabled","preventDefault","closest","shadowRoot","activeElement","focus","MouseEvent","bubbles","handleKeyDown","outerForm","formToSubmit","form","_a","document","querySelector","includes","key","multiline","requestSubmit","focusInner","undefined","updateHiddenInput","hiddenInput","name","createHiddenInput","dirname","dirName","remove","setAttribute","getAttribute","removeAttribute","clonedInput","cloneNode","style","display","replaceWith","createElement","appendChild","updateIconAndButtonSize","querySelectorAll","forEach","button","size","classList","add","icon","componentWillLoad","Object","defineProperty","get","files","attributesObserver","cloneAttributes","call","autocomplete","registerAutofocus","autofocus","disconnectedCallback","disconnect","render","cl","getClassNames","tone","invalid","resize","_c","clonedAttributes","clonedAttributesWithoutType","__rest","h","Host","class","onClick","assign","readonly","onChange","onInput","part","ref","tabIndex","ldTabindex","placeholder","onKeyDown","_b"],"sources":["../src/liquid/components/ld-input/ld-input.css?tag=ld-input&encapsulation=shadow","../src/liquid/components/ld-input/ld-input.tsx"],"sourcesContent":[":host > input [type='file'] {\n  pointer-events: none; /* important for Safari */\n}\n\n:host,\n.ld-input {\n  --ld-input-padding-x-sm: 0.5rem;\n  --ld-input-padding-x-md: 0.625rem;\n  --ld-input-padding-x-lg: 0.875rem;\n  --ld-input-padding-top-sm: 0.25rem;\n  --ld-input-padding-top-md: 0.625rem;\n  --ld-input-padding-top-lg: 0.625rem;\n  --ld-input-padding-bottom-sm: 0.25rem;\n  --ld-input-padding-bottom-md: 0.6875rem;\n  --ld-input-padding-bottom-lg: 0.6875rem;\n  --ld-input-min-height-sm: 2rem;\n  --ld-input-min-height-md: 2.5rem;\n  --ld-input-min-height-lg: 3.125rem;\n  --ld-input-max-height-sm: 2rem;\n  --ld-input-max-height-md: 2.5rem;\n  --ld-input-max-height-lg: 3.125rem;\n  --ld-input-time-min-width-sm: 5.125rem;\n  --ld-input-time-min-width-md: 6.25rem;\n  --ld-input-time-min-width-lg: 7.5rem;\n\n  /* colors */\n  --ld-input-bg-col-disabled: var(--ld-col-neutral-010);\n  --ld-input-bg-col-invalid-focus: var(--ld-col-wht);\n  --ld-input-bg-col-invalid: var(--ld-thm-error-disabled);\n  --ld-input-bg-col: var(--ld-col-wht);\n  --ld-input-border-col-disabled: var(--ld-col-neutral-100);\n  --ld-input-border-col-hover: var(--ld-col-neutral-300);\n  --ld-input-border-col: var(--ld-col-neutral-100);\n  --ld-input-icon-col-focus: var(--ld-thm-primary-focus);\n  --ld-input-icon-col-invalid-focus: var(--ld-thm-error-focus);\n  --ld-input-icon-col: var(--ld-thm-primary);\n  --ld-input-placeholder-opacity: 0.6;\n  --ld-input-text-col-disabled: var(--ld-col-neutral-300);\n  --ld-input-text-col-invalid-focus: var(--ld-col-neutral-900);\n  --ld-input-text-col-invalid: var(--ld-thm-error);\n  --ld-input-text-col: var(--ld-col-neutral-900);\n\n  /* mode colors */\n  --ld-input-dark-bg-col-focus: var(--ld-col-wht);\n  --ld-input-dark-bg-col: var(--ld-col-neutral-010);\n\n  cursor: text;\n  position: relative;\n  display: inline-flex;\n  align-items: center;\n  background-color: var(--ld-input-bg-col);\n  color: var(--ld-input-text-col);\n  max-width: 100%;\n  border-radius: var(--ld-br-m);\n  line-height: 1;\n  min-height: var(--ld-input-min-height-md);\n\n  &::before {\n    content: '';\n    position: absolute;\n    inset: 0;\n    border-radius: var(--ld-br-m);\n    display: block;\n    pointer-events: none;\n    box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-input-border-col);\n  }\n\n  :where(input) {\n    margin: 0; /* margin reset for Safari */\n  }\n\n  ::slotted(*),\n  > :where(:not(input, textarea)) {\n    user-select: none;\n  }\n\n  ::slotted(:not(ld-button, .ld-button)[slot='start']),\n  > :where(\n      :not(input, textarea, ld-button, .ld-button, [slot='end']):first-child\n    ) {\n    margin-left: var(--ld-input-padding-x-md);\n  }\n\n  ::slotted(:not(ld-button, .ld-button)[slot='end']),\n  > :where(\n      :not(input, textarea, ld-button, .ld-button, [slot='start']):last-child\n    ) {\n    margin-right: var(--ld-input-padding-x-md);\n  }\n\n  > input {\n    color: var(--ld-input-text-col);\n    align-self: stretch;\n    max-height: var(--ld-input-max-height-md);\n    -webkit-text-fill-color: var(--ld-input-text-col);\n\n    &[type='file'] {\n      opacity: 0;\n\n      &::-webkit-file-upload-button {\n        display: none;\n      }\n    }\n\n    &[type='number'] {\n      appearance: textfield;\n\n      &::-webkit-inner-spin-button,\n      &::-webkit-outer-spin-button {\n        -webkit-appearance: none;\n        margin: 0;\n      }\n    }\n\n    &[type='search'] {\n      &::-webkit-search-decoration,\n      &::-webkit-search-cancel-button,\n      &::-webkit-search-results-button,\n      &::-webkit-search-results-decoration {\n        -webkit-appearance: none;\n      }\n    }\n\n    &::-webkit-calendar-picker-indicator {\n      cursor: pointer;\n      background: var(--ld-input-icon-col);\n      mask-repeat: no-repeat;\n      mask-position: center;\n      outline: none;\n\n      &:focus:focus-visible {\n        background: var(--ld-input-icon-col-focus);\n      }\n    }\n    /* custom icon calendar-picker */\n    &[type='datetime-local']::-webkit-calendar-picker-indicator,\n    &[type='date']::-webkit-calendar-picker-indicator {\n      mask-image: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" width=\"20\" height=\"20\"><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M2 6v9.69c0 .65.28.93.48 1.01C3.8 17.26 6.24 18 10 18s6.2-.74 7.52-1.3c.2-.08.48-.36.48-1.01V6H2zM3.08.53A3.68 3.68 0 000 4.24V15.7c0 1.22.57 2.37 1.7 2.85C3.25 19.2 5.96 20 10 20c4.03 0 6.74-.8 8.3-1.46 1.13-.48 1.7-1.63 1.7-2.85V4.24a3.68 3.68 0 00-3.08-3.7C15.12.25 12.68 0 10 0 7.32 0 4.88.26 3.08.53zM8.25 8.5c0-.28.22-.5.5-.5h2.5c.28 0 .5.22.5.5v2a.5.5 0 01-.5.5h-2.5a.5.5 0 01-.5-.5v-2zm5.5-.5a.5.5 0 00-.5.5v2c0 .28.22.5.5.5h2.5a.5.5 0 00.5-.5v-2a.5.5 0 00-.5-.5h-2.5zm-10.5.5c0-.28.22-.5.5-.5h2.5c.28 0 .5.22.5.5v2a.5.5 0 01-.5.5h-2.5a.5.5 0 01-.5-.5v-2zm5.5 3.75a.5.5 0 00-.5.5v2c0 .28.22.5.5.5h2.5a.5.5 0 00.5-.5v-2a.5.5 0 00-.5-.5h-2.5zm-5.5.5c0-.28.22-.5.5-.5h2.5c.28 0 .5.22.5.5v2a.5.5 0 01-.5.5h-2.5a.5.5 0 01-.5-.5v-2z\" clip-rule=\"evenodd\"/></svg>');\n      transform: translateY(4%);\n    }\n    /* custom icon calendar-picker */\n    &[type='time'] {\n      min-width: var(--ld-input-time-min-width-md);\n\n      &::-webkit-calendar-picker-indicator {\n        mask-image: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\"><path stroke=\"currentColor\" stroke-width=\"2\" d=\"M3 6.24c0-1.39.94-2.53 2.23-2.72C6.99 3.26 9.38 3 12 3c2.62 0 5 .26 6.77.52A2.68 2.68 0 0121 6.24V17.7c0 .93-.43 1.65-1.08 1.93C18.47 20.24 15.9 21 12 21c-3.9 0-6.47-.76-7.92-1.38-.65-.28-1.08-1-1.08-1.93V6.24z\"/><path fill=\"currentColor\" d=\"M11 3.5c0-.28.22-.5.5-.5h1c.28 0 .5.22.5.5v2a.5.5 0 01-.5.5h-1a.5.5 0 01-.5-.5v-2zM11 18.5c0-.28.22-.5.5-.5h1c.28 0 .5.22.5.5v2a.5.5 0 01-.5.5h-1a.5.5 0 01-.5-.5v-2zM5.5 11c.28 0 .5.22.5.5v1a.5.5 0 01-.5.5h-2a.5.5 0 01-.5-.5v-1c0-.28.22-.5.5-.5h2zM20.5 11c.28 0 .5.22.5.5v1a.5.5 0 01-.5.5h-2a.5.5 0 01-.5-.5v-1c0-.28.22-.5.5-.5h2z\"/><path fill=\"currentColor\" fill-rule=\"evenodd\" d=\"M7.68 10.24a.5.5 0 01.61-.34l3.86 1.1c.25.07.47.2.65.38l4.26 4.27c.2.2.2.5 0 .7l-.7.71a.5.5 0 01-.71 0l-4.08-4.08a.5.5 0 00-.22-.13l-3.6-1.03a.5.5 0 01-.35-.61l.28-.97z\" clip-rule=\"evenodd\"/></svg>');\n      }\n    }\n  }\n\n  > input,\n  > textarea {\n    padding: var(--ld-input-padding-top-md) var(--ld-input-padding-x-md)\n      var(--ld-input-padding-bottom-md);\n    font: var(--ld-typo-body-m);\n    line-height: 1;\n    background-color: rgba(255, 255, 255, 0);\n    width: 100%;\n    border: 0;\n    border-radius: var(--ld-br-m);\n    outline: none;\n    appearance: none;\n    box-sizing: border-box;\n\n    &::placeholder {\n      opacity: var(--ld-input-placeholder-opacity);\n    }\n  }\n\n  > textarea {\n    height: 100%;\n    max-height: inherit;\n    min-height: inherit;\n    flex-grow: 1;\n  }\n\n  ::slotted(ld-button),\n  ::slotted(.ld-button),\n  > ld-button,\n  > .ld-button {\n    --ld-button-ghost-bg-color-active: transparent;\n    --ld-button-ghost-bg-color-focus: transparent;\n    --ld-button-ghost-bg-color-hover: transparent;\n    flex-shrink: 0;\n    z-index: 0;\n  }\n\n  ::slotted(ld-button[slot='start']),\n  ::slotted(.ld-button[slot='start']),\n  > ld-button:where(:not([slot='end'])):first-child,\n  > .ld-button:where(:not([slot='end'])):first-child {\n    --ld-button-border-top-right-radius: 0;\n    --ld-button-border-bottom-right-radius: 0;\n  }\n\n  ::slotted(ld-button[slot='end']),\n  ::slotted(.ld-button[slot='end']),\n  > ld-button:where(:not([slot='start'])):last-child,\n  > .ld-button:where(:not([slot='start'])):last-child {\n    --ld-button-border-top-left-radius: 0;\n    --ld-button-border-bottom-left-radius: 0;\n  }\n\n  ::slotted(ld-button[mode='ghost']:where([slot='start'])),\n  ::slotted(.ld-button.ld-button--ghost:where([slot='start'])),\n  > ld-button[mode='ghost']:where(:not([slot='end'])):first-child,\n  > .ld-button.ld-button--ghost:where(:not([slot='end'])):first-child {\n    margin-right: calc(-1 * var(--ld-input-padding-x-md));\n  }\n\n  ::slotted(ld-button[mode='ghost']:where([slot='end'])),\n  ::slotted(.ld-button.ld-button--ghost:where([slot='end'])),\n  > ld-button[mode='ghost']:where(:not([slot='start'])):last-child,\n  > .ld-button.ld-button--ghost:where(:not([slot='start'])):last-child {\n    margin-left: calc(-1 * var(--ld-input-padding-x-md));\n  }\n\n  ::slotted(ld-icon),\n  ::slotted(.ld-icon),\n  > ld-icon,\n  > .ld-icon {\n    color: var(--ld-input-icon-col);\n    cursor: text;\n    display: inline-flex;\n  }\n}\n\n:host(.ld-input--resize-both),\n.ld-input--resize-both {\n  > textarea {\n    resize: both; /* stylelint-disable-line plugin/no-unsupported-browser-features */\n  }\n}\n:host(.ld-input--resize-horizontal),\n.ld-input--resize-horizontal {\n  > textarea {\n    resize: horizontal; /* stylelint-disable-line plugin/no-unsupported-browser-features */\n  }\n}\n:host(.ld-input--resize-vertical),\n.ld-input--resize-vertical {\n  > textarea {\n    resize: vertical; /* stylelint-disable-line plugin/no-unsupported-browser-features */\n  }\n}\n:host(.ld-input--resize-none),\n.ld-input--resize-none {\n  > textarea {\n    resize: none; /* stylelint-disable-line plugin/no-unsupported-browser-features */\n  }\n}\n\n:host(.ld-input--sm),\n.ld-input--sm {\n  min-height: var(--ld-input-min-height-sm);\n\n  ::slotted(:not(ld-button, .ld-button)[slot='start']),\n  > :where(\n      :not(input, textarea, ld-button, .ld-button, [slot='end']):first-child\n    ) {\n    margin-left: var(--ld-input-padding-x-sm);\n  }\n\n  ::slotted(:not(ld-button, .ld-button)[slot='end']),\n  > :where(\n      :not(input, textarea, ld-button, .ld-button, [slot='start']):last-child\n    ) {\n    margin-right: var(--ld-input-padding-x-sm);\n  }\n\n  > input {\n    max-height: var(--ld-input-max-height-sm);\n\n    &[type='datetime-local']::-webkit-calendar-picker-indicator,\n    &[type='date']::-webkit-calendar-picker-indicator {\n      mask-size: 65%;\n    }\n    &[type='time'] {\n      min-width: var(--ld-input-time-min-width-sm);\n\n      &::-webkit-calendar-picker-indicator {\n        mask-size: 85%;\n      }\n    }\n  }\n\n  > input,\n  > textarea {\n    padding: var(--ld-input-padding-top-sm) var(--ld-input-padding-x-sm)\n      var(--ld-input-padding-bottom-sm);\n    font: var(--ld-typo-body-s);\n  }\n\n  ::slotted(ld-button[mode='ghost']:where([slot='start'])),\n  ::slotted(.ld-button.ld-button--ghost:where([slot='start'])),\n  > ld-button[mode='ghost']:where(:not([slot='end'])):first-child,\n  > .ld-button.ld-button--ghost:where(:not([slot='end'])):first-child {\n    margin-right: calc(-1 * var(--ld-input-padding-x-sm));\n  }\n\n  ::slotted(ld-button[mode='ghost']:where([slot='end'])),\n  ::slotted(.ld-button.ld-button--ghost:where([slot='end'])),\n  > ld-button[mode='ghost']:where(:not([slot='start'])):last-child,\n  > .ld-button.ld-button--ghost:where(:not([slot='start'])):last-child {\n    margin-left: calc(-1 * var(--ld-input-padding-x-sm));\n  }\n}\n\n:host(.ld-input--lg),\n.ld-input--lg {\n  min-height: var(--ld-input-min-height-lg);\n\n  ::slotted(:not(ld-button, .ld-button)[slot='start']),\n  > :where(\n      :not(input, textarea, ld-button, .ld-button, [slot='end']):first-child\n    ) {\n    margin-left: var(--ld-input-padding-x-lg);\n  }\n\n  ::slotted(:not(ld-button, .ld-button)[slot='end']),\n  > :where(\n      :not(input, textarea, ld-button, .ld-button, [slot='start']):last-child\n    ) {\n    margin-right: var(--ld-input-padding-x-lg);\n  }\n\n  > input {\n    max-height: var(--ld-input-max-height-lg);\n\n    &[type='date']::-webkit-calendar-picker-indicator {\n      mask-size: 90%;\n    }\n    &[type='time'] {\n      min-width: var(--ld-input-time-min-width-lg);\n\n      &::-webkit-calendar-picker-indicator {\n        mask-size: 114%;\n      }\n    }\n  }\n\n  > input,\n  > textarea {\n    padding: var(--ld-input-padding-top-lg) var(--ld-input-padding-x-lg)\n      var(--ld-input-padding-bottom-lg) var(--ld-input-padding-x-lg);\n    font: var(--ld-typo-body-l);\n  }\n\n  ::slotted(ld-button[mode='ghost']:where([slot='start'])),\n  ::slotted(.ld-button.ld-button--ghost:where([slot='start'])),\n  > ld-button[mode='ghost']:where(:not([slot='end'])):first-child,\n  > .ld-button.ld-button--ghost:where(:not([slot='end'])):first-child {\n    margin-right: calc(-1 * var(--ld-input-padding-x-lg));\n  }\n\n  ::slotted(ld-button[mode='ghost']:where([slot='end'])),\n  ::slotted(.ld-button.ld-button--ghost:where([slot='end'])),\n  > ld-button[mode='ghost']:where(:not([slot='start'])):last-child,\n  > .ld-button.ld-button--ghost:where(:not([slot='start'])):last-child {\n    margin-left: calc(-1 * var(--ld-input-padding-x-lg));\n  }\n}\n\n:host(.ld-input--dark),\n.ld-input--dark {\n  background-color: var(--ld-input-dark-bg-col);\n}\n\n@media (hover: hover) {\n  :host(\n      :not(\n          .ld-input--invalid,\n          [aria-disabled]:where(\n              :not([aria-disabled=''], [aria-disabled='false'])\n            ),\n          .ld-input--disabled\n        ):hover:not(:focus-within)\n    ),\n  .ld-input:not(\n      .ld-input--invalid,\n      [aria-disabled]:where(:not([aria-disabled=''], [aria-disabled='false'])),\n      .ld-input--disabled\n    ):hover:not(:focus-within) {\n    &::before {\n      box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-input-border-col-hover);\n    }\n  }\n}\n\n:host(:not(.ld-input--invalid):focus-within),\n.ld-input:not(.ld-input--invalid):focus-within {\n  &::before {\n    box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-thm-primary);\n  }\n}\n\n:host(.ld-input--dark:not(.ld-input--invalid):focus-within),\n.ld-input--dark:not(.ld-input--invalid):focus-within {\n  background-color: var(--ld-input-dark-bg-col-focus);\n}\n\n:host(.ld-input--invalid:focus-within),\n.ld-input--invalid:focus-within {\n  background-color: var(--ld-input-bg-col-invalid-focus);\n}\n\n:host(\n    .ld-input--invalid:not(\n        .ld-input--disabled,\n        [aria-disabled]:where(:not([aria-disabled=''], [aria-disabled='false']))\n      ):where(:not(:focus))\n  ),\n.ld-input--invalid:not(\n    .ld-input--disabled,\n    [aria-disabled]:where(:not([aria-disabled=''], [aria-disabled='false']))\n  ):where(:not(:focus)) {\n  background-color: var(--ld-input-bg-col-invalid);\n  color: var(--ld-input-text-col-invalid);\n  -webkit-text-fill-color: var(--ld-input-text-col-invalid);\n}\n\n:host(\n    .ld-input--invalid:not(\n        .ld-input--disabled,\n        [aria-disabled]:where(:not([aria-disabled=''], [aria-disabled='false']))\n      )\n  ),\n.ld-input--invalid:not(\n    .ld-input--disabled,\n    [aria-disabled]:where(:not([aria-disabled=''], [aria-disabled='false']))\n  ) {\n  &::before {\n    box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-input-text-col-invalid);\n  }\n\n  > input,\n  > textarea {\n    color: var(--ld-input-text-col-invalid);\n    -webkit-text-fill-color: var(--ld-input-text-col-invalid);\n  }\n\n  > input::-webkit-calendar-picker-indicator {\n    background: var(--ld-input-text-col-invalid);\n\n    &:focus:focus-visible {\n      background: var(--ld-input-icon-col-invalid-focus);\n    }\n  }\n}\n\n:host(\n    .ld-input--invalid:not(\n        .ld-input--disabled,\n        [aria-disabled]:where(:not([aria-disabled=''], [aria-disabled='false']))\n      ):focus-within\n  ),\n.ld-input--invalid:not(\n    .ld-input--disabled,\n    [aria-disabled]:where(:not([aria-disabled=''], [aria-disabled='false']))\n  ):focus-within {\n  background-color: var(--ld-input-bg-col-invalid-focus);\n\n  > input,\n  > textarea {\n    color: var(--ld-input-text-col-invalid-focus);\n    -webkit-text-fill-color: var(--ld-input-text-col-invalid-focus);\n  }\n}\n\n:host(.ld-input--disabled),\n:host([aria-disabled]:where(:not([aria-disabled=''], [aria-disabled='false']))),\n.ld-input.ld-input--disabled,\n.ld-input[aria-disabled]:where(\n    :not([aria-disabled=''], [aria-disabled='false'])\n  ) {\n  color: var(--ld-input-text-col-disabled);\n  background-color: var(--ld-input-bg-col-disabled);\n\n  &::before {\n    box-shadow: inset 0 0 0 var(--ld-sp-2) var(--ld-input-border-col-disabled);\n  }\n\n  input,\n  textarea {\n    color: var(--ld-input-text-col-disabled);\n    caret-color: transparent;\n    -webkit-text-fill-color: var(--ld-input-text-col-disabled);\n  }\n\n  input::-webkit-calendar-picker-indicator {\n    background: var(--ld-input-text-col-disabled);\n    pointer-events: none;\n  }\n\n  ::slotted(ld-icon),\n  ::slotted(.ld-icon),\n  ld-icon,\n  .ld-icon {\n    color: currentColor;\n  }\n}\n\n.ld-input__placeholder {\n  position: absolute;\n  display: flex;\n  height: 100%;\n  align-items: center;\n  pointer-events: none;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  right: var(--ld-input-padding-x-md);\n  left: var(--ld-input-padding-x-md);\n  margin-right: 0;\n  opacity: var(--ld-input-placeholder-opacity);\n}\n\n.ld-select__slot-container {\n  display: none;\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from '@stencil/core'\nimport { cloneAttributes } from '../../utils/cloneAttributes'\nimport { getClassNames } from '../../utils/getClassNames'\nimport { registerAutofocus } from '../../utils/focus'\nimport { isAriaDisabled } from '../../utils/ariaDisabled'\n\n/**\n * The `ld-input` component. You can use it in conjunction with the `ld-label`\n * and the `ld-input-message` component. See examples in the docs for a better\n * understanding on how they can be used together.\n *\n * @slot start - The purpose of this slot is to add icons or buttons\n * to the input, __justifying the item to the end of the component__.\n * Styling for `ld-icon` and `ld-button` is provided within the `ld-input` component.\n * If you choose to place something different into the slot, you will probably\n * need to adjust some styles on the slotted item in order to make it fit right.\n * @slot end - The purpose of this slot is to add icons or buttons\n * to the input, __justifying the item to the start of the component__.\n * Styling for `ld-icon` and `ld-button` is provided within the `ld-input` component.\n * If you choose to place something different into the slot, you will probably\n * need to adjust some styles on the slotted item in order to make it fit right.\n * @virtualProp { FileList | undefined } files - Selected files for ld-input with type file (readonly).\n * @virtualProp ref - reference to component\n * @virtualProp {string | number} key - for tracking the node's identity when working with lists\n * @part input - Actual input/textarea element\n * @part placeholder - Placeholder rendered for input type \"file\"\n */\n@Component({\n  tag: 'ld-input',\n  styleUrl: 'ld-input.css',\n  shadow: true,\n})\nexport class LdInput implements InnerFocusable, ClonesAttributes {\n  @Element() el: HTMLInputElement | HTMLTextAreaElement\n\n  private attributesObserver: MutationObserver\n\n  private hiddenInput?: HTMLInputElement\n  private input: HTMLInputElement | HTMLTextAreaElement\n\n  /** Hint for expected file type in file upload controls. */\n  @Prop() accept?: string\n\n  /** Alternative disabled state that keeps element focusable */\n  @Prop() ariaDisabled: string\n\n  /** Hint for form autofill feature. */\n  @Prop({ mutable: true, reflect: true }) autocomplete?: string\n\n  /** Automatically focus the form control when the page is loaded. */\n  @Prop({ reflect: true }) autofocus: boolean\n\n  /** Media capture input method in file upload controls. */\n  @Prop() capture?: string\n\n  /** The number of columns. */\n  @Prop() cols?: number\n\n  /** Name of form field to use for sending the element's directionality in form submission. */\n  @Prop() dirname?: string\n\n  /** Whether the form control is disabled. */\n  @Prop() disabled?: boolean\n\n  /** Associates the control with a form element. */\n  @Prop() form?: string\n\n  /** Set this property to `true` in order to mark the field visually as invalid. */\n  @Prop() invalid?: boolean\n\n  /** Tab index of the input. */\n  @Prop() ldTabindex?: number\n\n  /** Value of the id attribute of the `<datalist>` of autocomplete options. */\n  @Prop() list?: string\n\n  /** Maximum value. */\n  @Prop() max?: string | number\n\n  /** Maximum length (number of characters) of `value`. */\n  @Prop() maxlength?: string | number\n\n  /** Minimum value. */\n  @Prop() min?: string | number\n\n  /** Minimum length (number of characters) of `value`. */\n  @Prop() minlength?: string | number\n\n  /**\n   * Uses textarea instead of input internally. Setting this attribute to true\n   * disables the attribute type and both slots.\n   */\n  @Prop() multiline?: boolean\n\n  /** Boolean. Whether to allow multiple values. */\n  @Prop() multiple?: boolean\n\n  /** Used to specify the name of the control. */\n  @Prop() name?: string\n\n  /** Pattern the `value` must match to be valid. */\n  @Prop() pattern?: string\n\n  /** The input placeholder. */\n  @Prop() placeholder?: string\n\n  /** The value is not editable. */\n  @Prop() readonly?: boolean\n\n  /** A value is required for the form to be submittable. */\n  @Prop() required?: boolean\n\n  /** Whether the multiline input is resizable, and if so, in which directions. */\n  @Prop() resize?: 'none' | 'both' | 'horizontal' | 'vertical' = 'both'\n\n  /** The number of rows. */\n  @Prop() rows?: number\n\n  /** Size of the input. */\n  @Prop() size?: 'sm' | 'lg'\n\n  /** Incremental values that are valid. */\n  @Prop() step?: string\n\n  /** Input tone. Use `'dark'` on white backgrounds. Default is a light tone. */\n  @Prop() tone?: 'dark'\n\n  /** The input type. */\n  @Prop() type?: string\n\n  /** The input value. */\n  @Prop({ mutable: true }) value?: string\n\n  @State() clonedAttributes\n\n  /** Emitted when the input value changed and the element loses focus. */\n  @Event() ldchange: EventEmitter<string>\n\n  /** Emitted when the input value changed. */\n  @Event() ldinput: EventEmitter<string>\n\n  /**\n   * Sets focus on the input\n   */\n  @Method()\n  async focusInner() {\n    if (this.input !== undefined) {\n      this.input.focus()\n    }\n  }\n\n  @Watch('dirname')\n  @Watch('form')\n  @Watch('name')\n  @Watch('value')\n  updateHiddenInput() {\n    const outerForm = this.el.closest('form')\n    if (!this.hiddenInput && this.name && (outerForm || this.form)) {\n      this.createHiddenInput()\n    }\n\n    if (this.hiddenInput) {\n      if (this.dirname) {\n        this.hiddenInput.dirName = this.dirname\n      }\n\n      if (this.name) {\n        this.hiddenInput.name = this.name\n      } else if (this.hiddenInput.name) {\n        this.hiddenInput.remove()\n        this.hiddenInput = undefined\n        return\n      }\n\n      if (this.form) {\n        this.hiddenInput.setAttribute('form', this.form)\n      } else if (this.hiddenInput.getAttribute('form')) {\n        if (outerForm) {\n          this.hiddenInput.removeAttribute('form')\n        } else {\n          this.hiddenInput.remove()\n          this.hiddenInput = undefined\n          return\n        }\n      }\n\n      if (this.isInputTypeFile(this.input)) {\n        // Clone input field in shadow dom to hidden input field.\n        const clonedInput = this.input.cloneNode() as HTMLInputElement\n        clonedInput.style.display = 'none'\n        this.hiddenInput.replaceWith(clonedInput)\n        this.hiddenInput = clonedInput\n      } else {\n        // Update value.\n        if (this.value) {\n          this.hiddenInput.value = this.value\n        } else if (this.hiddenInput.value) {\n          this.hiddenInput.removeAttribute('value')\n        }\n      }\n    }\n  }\n\n  private createHiddenInput() {\n    this.hiddenInput = document.createElement('input')\n    this.hiddenInput.type = 'hidden'\n    this.el.appendChild(this.hiddenInput)\n  }\n\n  @Watch('size')\n  private updateIconAndButtonSize() {\n    this.el.querySelectorAll('ld-button').forEach((button) => {\n      if (this.size !== undefined) {\n        button.setAttribute('size', this.size)\n      } else {\n        button.removeAttribute('size')\n      }\n    })\n    this.el.querySelectorAll('.ld-button').forEach((button) => {\n      if (this.size === 'sm') {\n        button.classList.remove('ld-button--lg')\n        button.classList.add('ld-button--sm')\n      } else if (this.size === 'lg') {\n        button.classList.remove('ld-button--sm')\n        button.classList.add('ld-button--lg')\n      } else {\n        button.classList.remove('ld-button--sm', 'ld-button--lg')\n      }\n    })\n    this.el.querySelectorAll('ld-icon').forEach((icon) => {\n      if (this.size !== undefined) {\n        icon.setAttribute('size', this.size)\n      } else {\n        icon.removeAttribute('size')\n      }\n    })\n    this.el.querySelectorAll('.ld-icon').forEach((icon) => {\n      if (this.size === 'sm') {\n        icon.classList.remove('ld-icon--lg')\n        icon.classList.add('ld-icon--sm')\n      } else if (this.size === 'lg') {\n        icon.classList.remove('ld-icon--sm')\n        icon.classList.add('ld-icon--lg')\n      } else {\n        icon.classList.remove('ld-icon--sm', 'ld-icon--lg')\n      }\n    })\n  }\n\n  componentWillLoad() {\n    // Add readonly prop files.\n    Object.defineProperty(this.el, 'files', {\n      get: () => {\n        if (this.isInputTypeFile(this.input)) {\n          return this.input.files\n        }\n        return undefined\n      },\n    })\n\n    this.attributesObserver = cloneAttributes.call(this, [\n      'multiline',\n      'autocomplete',\n      'value',\n    ])\n\n    const outerForm = this.el.closest('form')\n\n    if (outerForm && !this.autocomplete) {\n      this.autocomplete = outerForm.getAttribute('autocomplete')\n    }\n\n    if (this.name && (outerForm || this.form)) {\n      this.createHiddenInput()\n      this.hiddenInput.name = this.name\n\n      if (this.dirname) {\n        this.hiddenInput.dirName = this.dirname\n      }\n\n      if (this.form) {\n        this.hiddenInput.setAttribute('form', this.form)\n      }\n\n      if (this.value) {\n        this.hiddenInput.value = this.value\n      }\n    }\n\n    this.updateIconAndButtonSize()\n\n    registerAutofocus(this.autofocus)\n  }\n\n  private isInputTypeFile = (\n    input: HTMLInputElement | HTMLTextAreaElement\n  ): input is HTMLInputElement => {\n    return (input as HTMLInputElement).type === 'file'\n  }\n\n  private handleChange = (ev: InputEvent) => {\n    this.el.dispatchEvent(new InputEvent('change', ev))\n\n    this.ldchange.emit(this.value)\n  }\n\n  private handleInput = () => {\n    this.value = this.input.value\n\n    this.ldinput.emit(this.value)\n  }\n\n  private handleClick = (ev: MouseEvent) => {\n    const target = (\n      'composedPath' in ev ? ev.composedPath()[0] : ev['target']\n    ) as HTMLElement\n    if (this.el.disabled || isAriaDisabled(this.el.ariaDisabled)) {\n      ev.preventDefault()\n      return\n    }\n\n    if (target.closest('ld-button')) return\n\n    if (this.el.shadowRoot.activeElement !== this.input) {\n      this.input.focus()\n    }\n\n    if (target === this.el) {\n      this.input.dispatchEvent(new MouseEvent('click', { bubbles: false }))\n    }\n  }\n\n  private handleKeyDown = (ev: KeyboardEvent) => {\n    const outerForm = this.el.closest('form')\n    const formToSubmit = this.form\n      ? document.querySelector<HTMLFormElement>(`#${this.form}`) ?? outerForm\n      : outerForm\n\n    if (\n      isAriaDisabled(this.el.ariaDisabled) &&\n      !['ArrowLeft', 'ArrowRight', 'Tab'].includes(ev.key)\n    ) {\n      ev.preventDefault()\n    } else if (!this.multiline && ev.key === 'Enter' && formToSubmit) {\n      formToSubmit.requestSubmit()\n    }\n  }\n\n  disconnectedCallback() {\n    /* istanbul ignore if */\n    if (this.attributesObserver) this.attributesObserver.disconnect()\n  }\n\n  render() {\n    const cl = getClassNames([\n      'ld-input',\n      this.disabled && `ld-input--disabled`,\n      this.size && `ld-input--${this.size}`,\n      this.tone && `ld-input--${this.tone}`,\n      this.invalid && 'ld-input--invalid',\n      this.multiline && this.resize && `ld-input--resize-${this.resize}`,\n    ])\n\n    if (this.multiline) {\n      const { type, ...clonedAttributesWithoutType } = this.clonedAttributes\n      return (\n        <Host class={cl} onClick={this.handleClick}>\n          <textarea\n            {...clonedAttributesWithoutType}\n            aria-disabled={\n              this.disabled || isAriaDisabled(this.ariaDisabled)\n                ? 'true'\n                : undefined\n            }\n            disabled={this.disabled}\n            readonly={this.readonly}\n            onChange={this.handleChange}\n            onInput={this.handleInput}\n            part=\"input focusable\"\n            ref={(el) => (this.input = el)}\n            tabIndex={this.ldTabindex}\n            value={this.value}\n          />\n          {type === 'file' && (\n            <span class=\"ld-input__placeholder\" part=\"placeholder\">\n              {this.input?.value || this.placeholder}\n            </span>\n          )}\n        </Host>\n      )\n    }\n\n    return (\n      <Host class={cl} onClick={this.handleClick}>\n        <slot name=\"start\"></slot>\n        <input\n          {...this.clonedAttributes}\n          aria-disabled={\n            this.disabled || isAriaDisabled(this.ariaDisabled)\n              ? 'true'\n              : undefined\n          }\n          autocomplete={this.autocomplete}\n          disabled={this.disabled}\n          onChange={this.handleChange}\n          onInput={this.handleInput}\n          onKeyDown={this.handleKeyDown}\n          part=\"input focusable\"\n          placeholder={this.placeholder}\n          readonly={this.readonly}\n          ref={(el) => (this.input = el)}\n          tabIndex={this.ldTabindex}\n          type={this.type}\n          value={this.value || undefined} // the undefined fixes negative number input in input of type number\n        />\n        {this.type === 'file' && (\n          <span class=\"ld-input__placeholder\" part=\"placeholder\">\n            {this.input?.value || this.placeholder}\n          </span>\n        )}\n        <slot name=\"end\"></slot>\n      </Host>\n    )\n  }\n}\n"],"mappings":"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"}