{"version":3,"names":["ldNotificationShadowCss","LdNotificationStyle0","DEFAULT_NOTIFICATION_TIMEOUT","FADE_TRANSITION_DURATION","LdNotification","updateDismissTimeout","clearTimeout","this","dismissTimeout","currentNotification","type","timeout","setTimeout","handleNotificationDismiss","handleNotification","ev","stopImmediatePropagation","newNotification","detail","inQueue","queue","some","notification","content","firstErrorNotificationIndex","findIndex","splice","queueDismissed","unshift","pop","length","fadeoutTimeouts","push","slice","handleNotificationClear","undefined","forEach","renderNotification","dismissed","cl","h","class","key","part","innerHTML","sanitize","sanitizeConfig","role","onClick","bind","width","height","viewBox","fill","d","stroke","disconnectedCallback","render","placement","Host","map","call"],"sources":["../src/liquid/components/ld-notification/ld-notification.shadow.css?tag=ld-notification&encapsulation=shadow","../src/liquid/components/ld-notification/ld-notification.tsx"],"sourcesContent":[":host {\n  /* layout */\n  --ld-notification-min-height: var(--ld-sp-40);\n  --ld-notification-border-radius: var(--ld-br-m);\n  --ld-notification-inset-y: var(--ld-sp-32);\n\n  /* colors */\n  --ld-notification-col: var(--ld-col-wht);\n  --ld-notification-warn-col: var(--ld-col-neutral-900);\n  --ld-notification-alert-col: var(--ld-col-wht);\n\n  /* themable colors */\n  --ld-notification-bg-col: var(--ld-thm-primary);\n  --ld-notification-warn-bg-col: var(--ld-thm-warning);\n  --ld-notification-alert-bg-col: var(--ld-thm-error);\n\n  position: fixed;\n  z-index: 2147483647; /* Highest possible */\n  display: flex;\n  justify-content: center;\n  inset: 0;\n  min-width: 20rem;\n  font: var(--ld-typo-body-m);\n  pointer-events: none;\n}\n\n@keyframes ld-notification-fade-in {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes ld-notification-fade-out {\n  from {\n    transform: none;\n    opacity: 1;\n  }\n  to {\n    transform: none;\n    opacity: 0;\n  }\n}\n\n.ld-notification__item {\n  pointer-events: auto;\n  position: absolute;\n  transform-origin: center;\n  width: fit-content;\n  min-width: 19rem;\n  max-width: calc(90% - 1rem);\n  max-height: 80vh;\n  overflow-y: auto;\n  display: flex;\n  justify-content: space-between;\n  transition: transform var(--ld-transition-duration-normal) ease,\n    opacity var(--ld-transition-duration-normal) linear;\n  box-shadow: var(--ld-shadow-sticky);\n  min-height: var(--ld-notification-min-height);\n  border-radius: var(--ld-notification-border-radius);\n\n  &:where(:not(.ld-notification__item--dismissed)) {\n    animation: ld-notification-fade-in var(--ld-transition-duration-normal)\n      linear;\n  }\n\n  &:nth-last-of-type(n + 5) {\n    opacity: 0;\n  }\n\n  &:nth-last-of-type(n + 2) {\n    .ld-notification__item-content,\n    .ld-notification__btn-dismiss {\n      opacity: 0;\n    }\n  }\n\n  &:nth-last-of-type(2) {\n    opacity: 0.75;\n  }\n\n  &:nth-last-of-type(3) {\n    opacity: 0.5;\n  }\n\n  &:nth-last-of-type(4) {\n    opacity: 0.25;\n  }\n\n  &.ld-notification__item--dismissed {\n    opacity: 0;\n    animation: ld-notification-fade-out var(--ld-transition-duration-normal)\n      linear forwards;\n  }\n\n  :host(.ld-notification--bottom) & {\n    bottom: var(--ld-notification-inset-y);\n\n    &:nth-last-of-type(2) {\n      transform: scale(0.975) translateY(25%);\n    }\n\n    &:nth-last-of-type(3) {\n      transform: scale(0.95) translateY(50%);\n    }\n\n    &:nth-last-of-type(4) {\n      transform: scale(0.925) translateY(75%);\n    }\n  }\n\n  :host(.ld-notification--top) & {\n    top: var(--ld-notification-inset-y);\n\n    &:nth-last-of-type(2) {\n      transform: scale(0.975) translateY(-25%);\n    }\n\n    &:nth-last-of-type(3) {\n      transform: scale(0.95) translateY(-50%);\n    }\n\n    &:nth-last-of-type(4) {\n      transform: scale(0.925) translateY(-75%);\n    }\n  }\n}\n\n.ld-notification__item--info {\n  background-color: var(--ld-notification-bg-col);\n  color: var(--ld-notification-col);\n}\n.ld-notification__item--warn {\n  background-color: var(--ld-notification-warn-bg-col);\n  color: var(--ld-notification-warn-col);\n}\n.ld-notification__item--alert {\n  background-color: var(--ld-notification-alert-bg-col);\n  color: var(--ld-notification-alert-col);\n}\n\n.ld-notification__item-content,\n.ld-notification__btn-dismiss {\n  transition: opacity var(--ld-transition-duration-normal) linear;\n}\n\n.ld-notification__item-content {\n  display: grid;\n  grid-auto-flow: column;\n  align-items: baseline;\n  gap: var(--ld-sp-12);\n  padding: var(--ld-sp-6) var(--ld-sp-12);\n\n  > * {\n    align-self: center;\n  }\n}\n\n.ld-notification__btn-dismiss {\n  margin-left: var(--ld-sp-16);\n  align-self: center;\n  flex-shrink: 0;\n  border: 0;\n  border-radius: var(--ld-br-full);\n  background-color: transparent;\n  cursor: pointer;\n  padding: 0;\n  height: var(--ld-sp-40);\n  width: var(--ld-sp-40);\n  display: inline-grid;\n  place-items: center;\n  color: inherit;\n  user-select: none;\n  touch-action: manipulation;\n  -webkit-touch-callout: none;\n}\n","import { Component, h, Host, Listen, Prop, State, Watch } from '@stencil/core'\nimport { sanitize } from '../../utils/sanitize'\n\ntype Notification = {\n  type: 'info' | 'warn' | 'alert'\n  content: string\n  timeout?: number\n}\n\nconst DEFAULT_NOTIFICATION_TIMEOUT = 6000\nconst FADE_TRANSITION_DURATION = 200\n\n@Component({\n  tag: 'ld-notification',\n  styleUrl: 'ld-notification.shadow.css',\n  shadow: true,\n})\nexport class LdNotification {\n  /**\n   * Notification placement within the screen.\n   */\n  @Prop() placement?: 'top' | 'bottom' = 'top'\n\n  /**\n   * Sanitize config passed to DOMPurify's sanitize method.\n   * If passed as string, the component will try to parse the string as JSON.\n   * See https://github.com/cure53/DOMPurify#can-i-configure-dompurify\n   */\n  @Prop() sanitizeConfig?: SanitizeConfig | string\n\n  @State() queue: Notification[] = []\n  @State() queueDismissed: Notification[] = []\n\n  @State() dismissTimeout: NodeJS.Timeout | null\n\n  @State() fadeoutTimeouts: (NodeJS.Timeout | null)[] = []\n\n  @State() currentNotification?: Notification\n\n  @Watch('currentNotification')\n  updateDismissTimeout() {\n    clearTimeout(this.dismissTimeout)\n\n    if (!this.currentNotification) return\n\n    // Do not dismiss, if alert has no explicit timeout.\n    if (\n      this.currentNotification.type === 'alert' &&\n      !this.currentNotification.timeout\n    ) {\n      return\n    }\n\n    // Do not dismiss, if timeout is disabled explicitly.\n    if (this.currentNotification.timeout === 0) return\n\n    this.dismissTimeout = setTimeout(() => {\n      this.handleNotificationDismiss()\n    }, this.currentNotification.timeout || DEFAULT_NOTIFICATION_TIMEOUT)\n  }\n\n  @Listen('ldNotificationAdd', {\n    target: 'window',\n    passive: true,\n  })\n  handleNotification(ev: CustomEvent<Notification>) {\n    ev.stopImmediatePropagation()\n    const newNotification = ev.detail\n\n    // If the same notification is already in queue (same content, same type), ignore this notification.\n    const inQueue = this.queue.some(\n      (notification) =>\n        notification.content === newNotification.content &&\n        notification.type === newNotification.type\n    )\n    if (inQueue) return\n\n    // Insert by relevance, whith error notifications being more relevant than non-error notifications.\n    if (newNotification.type === 'alert') {\n      this.queue = [...this.queue, newNotification]\n      this.currentNotification = newNotification\n      return\n    }\n\n    const firstErrorNotificationIndex = this.queue.findIndex(\n      (notification) => notification.type === 'alert'\n    )\n    if (firstErrorNotificationIndex === -1) {\n      this.queue = [...this.queue, newNotification]\n      this.currentNotification = newNotification\n      return\n    }\n\n    this.queue.splice(firstErrorNotificationIndex, 0, newNotification)\n    this.queue = [...this.queue]\n  }\n\n  @Listen('ldNotificationDismiss', {\n    target: 'window',\n    passive: true,\n  })\n  handleNotificationDismiss() {\n    if (!this.currentNotification) return\n\n    this.queueDismissed.unshift(this.queue.pop())\n    this.queueDismissed = [...this.queueDismissed]\n    this.queue = [...this.queue]\n    this.currentNotification = this.queue[this.queue.length - 1]\n\n    this.fadeoutTimeouts.push(\n      setTimeout(() => {\n        this.queueDismissed = this.queueDismissed.slice(0, -1)\n      }, FADE_TRANSITION_DURATION)\n    )\n  }\n\n  @Listen('ldNotificationClear', {\n    target: 'window',\n    passive: true,\n  })\n  handleNotificationClear() {\n    this.queueDismissed = [...this.queue]\n    this.queue = []\n    this.currentNotification = undefined\n    this.fadeoutTimeouts.forEach(clearTimeout)\n    this.fadeoutTimeouts.push(\n      setTimeout(() => {\n        this.queueDismissed = []\n      }, FADE_TRANSITION_DURATION)\n    )\n  }\n\n  private renderNotification(notification: Notification, dismissed = false) {\n    let cl = `ld-notification__item ld-notification__item--${\n      notification.type || 'info'\n    }`\n    if (dismissed) cl += ' ld-notification__item--dismissed'\n\n    return (\n      <div\n        class={cl}\n        key={notification.type + notification.content}\n        part=\"item\"\n      >\n        <div\n          class=\"ld-notification__item-content\"\n          innerHTML={sanitize(notification.content, this.sanitizeConfig)}\n          role={notification.type === 'alert' ? 'alert' : 'status'}\n          part=\"content\"\n        ></div>\n        <button\n          class=\"ld-notification__btn-dismiss\"\n          onClick={\n            dismissed ? undefined : this.handleNotificationDismiss.bind(this)\n          }\n          part=\"btn-dismiss focusable\"\n        >\n          {/* custom icon cross */}\n          <svg\n            width=\"24\"\n            height=\"24\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            part=\"btn-dismiss-icon\"\n          >\n            <title>Dismiss</title>\n            <path\n              d=\"M6 6L18 18\"\n              stroke=\"currentColor\"\n              stroke-width=\"3\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            />\n            <path\n              d=\"M6 18L18 6\"\n              stroke=\"currentColor\"\n              stroke-width=\"3\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            />\n          </svg>\n        </button>\n      </div>\n    )\n  }\n\n  disconnectedCallback() {\n    clearTimeout(this.dismissTimeout)\n    this.fadeoutTimeouts.forEach(clearTimeout)\n  }\n\n  render() {\n    const cl = `ld-notification ld-notification--${this.placement}`\n\n    return (\n      <Host class={cl} role=\"region\" aria-label=\"Notifications\">\n        {this.queue.map((notification) =>\n          this.renderNotification.call(this, notification)\n        )}\n        {this.queueDismissed.map((notification) =>\n          this.renderNotification.call(this, notification, true)\n        )}\n      </Host>\n    )\n  }\n}\n"],"mappings":"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"}