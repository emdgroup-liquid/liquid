{"version":3,"names":["ldCircularProgressCss","LdCircularProgress","render","cl","getClassNames","this","brandColor","h","Host","class","role","style","Object","assign","ariaValuemax","undefined","ariaValuemin","ariaValuenow","viewBox","cx","cy","r"],"sources":["../src/liquid/components/ld-circular-progress/ld-circular-progress.css?tag=ld-circular-progress&encapsulation=shadow","../src/liquid/components/ld-circular-progress/ld-circular-progress.tsx"],"sourcesContent":[":host,\n.ld-circular-progress {\n  --ld-circular-progress-valuemin: 0;\n  --ld-circular-progress-valuemax: 100;\n  --ld-circular-progress-valuenow: 0;\n  --ld-circular-progress-size: 7.5rem;\n  --ld-circular-progress-transition-duration: var(\n    --ld-transition-duration-normal\n  );\n  --ld-circular-progress-stroke-mask: url('data:image/svg+xml;utf8,<svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 200 200\"><circle cx=\"100\" cy=\"100\" r=\"89\" stroke=\"red\" stroke-width=\"20\"/></svg>');\n\n  /* colors */\n  --ld-circular-progress-bar-col: var(--ld-thm-primary);\n  --ld-circular-progress-bar-col-overflow: var(--ld-thm-error);\n  --ld-circular-progress-bg-col: var(--ld-col-neutral-100);\n  --ld-circular-progress-bg-col-overflow: var(--ld-thm-error);\n  --ld-circular-progress-circle-bg-col: var(--ld-circular-progress-bg-col);\n  --ld-circular-progress-circle-bg-col-overflow: var(\n    --ld-circular-progress-bg-col-overflow\n  );\n  /* stylelint-disable-next-line number-max-precision */\n  --ld-circular-progress-pi: 3.141592653589793;\n  --ld-circular-progress-wht-overlay-col: var(--ld-col-wht-alpha-high);\n\n  /* computed */\n  --ld-circular-progress-calc-valuenow: max(\n    0,\n    calc(\n      var(--ld-circular-progress-valuenow) -\n        var(--ld-circular-progress-valuemin)\n    )\n  );\n  --ld-circular-progress-calc-valuemax: calc(\n    var(--ld-circular-progress-valuemax) - var(--ld-circular-progress-valuemin)\n  );\n  --ld-circular-progress-calc-relative-progress: calc(\n    var(--ld-circular-progress-calc-valuenow) /\n      var(--ld-circular-progress-calc-valuemax)\n  );\n  --ld-circular-progress-has-overflow: clamp(\n    0,\n    calc(\n      (var(--ld-circular-progress-calc-relative-progress) - 1) * 99999999999\n    ),\n    1\n  );\n\n  align-items: center;\n  box-sizing: content-box !important;\n  display: inline-flex;\n  flex-direction: column;\n  gap: var(--ld-sp-4);\n  height: calc(\n    var(--ld-circular-progress-size) - var(--ld-circular-progress-size) * 0.4\n  );\n  max-width: 100%;\n  justify-content: center;\n  padding: calc(var(--ld-circular-progress-size) * 0.165)\n    calc(var(--ld-circular-progress-size) * 0.2)\n    calc(var(--ld-circular-progress-size) * 0.235);\n  position: relative;\n  width: calc(\n    var(--ld-circular-progress-size) - var(--ld-circular-progress-size) * 0.4\n  );\n\n  &::before,\n  &::after {\n    content: '';\n    inset: 0;\n    mask-image: var(--ld-circular-progress-stroke-mask);\n    position: absolute;\n    transition: opacity var(--ld-circular-progress-transition-duration) linear;\n  }\n\n  &::before {\n    background-color: var(--ld-circular-progress-bg-col);\n    opacity: calc(1 - var(--ld-circular-progress-has-overflow));\n  }\n\n  &::after {\n    box-shadow: inset 0 0 0\n        calc(var(--ld-circular-progress-has-overflow) * 99rem)\n        var(--ld-circular-progress-wht-overlay-col),\n      inset 0 0 0 calc(var(--ld-circular-progress-has-overflow) * 99rem)\n        var(--ld-circular-progress-bg-col-overflow);\n    opacity: var(--ld-circular-progress-has-overflow);\n    position: absolute;\n  }\n}\n\n:host(.ld-circular-progress--brand-color),\n.ld-circular-progress--brand-color {\n  --ld-circular-progress-bar-col: var(--ld-col-wht);\n  --ld-circular-progress-bg-col: var(--ld-thm-primary-focus);\n  --ld-circular-progress-bg-col-overflow: var(--ld-thm-error-active);\n  --ld-circular-progress-wht-overlay-col: var(--ld-col-wht-alpha-low);\n}\n\n.ld-circular-progress__stroke {\n  position: absolute;\n  inset: 0;\n  fill: none;\n  mask-image: var(--ld-circular-progress-stroke-mask);\n  width: 100%; /* required in Safari */\n  z-index: 1;\n\n  circle {\n    transform-origin: center;\n    stroke-width: 2.2;\n    stroke-dasharray: calc(100 / var(--ld-circular-progress-pi));\n    transition: opacity var(--ld-circular-progress-transition-duration) linear,\n      stroke-dashoffset var(--ld-circular-progress-transition-duration) ease;\n    transform: scaleX(-1) rotate(-90deg);\n\n    &:first-of-type {\n      stroke: var(--ld-circular-progress-bar-col);\n      stroke-dashoffset: min(\n        0,\n        calc(\n          (-100 + var(--ld-circular-progress-calc-relative-progress) * 100 + 1) /\n            var(--ld-circular-progress-pi)\n        )\n      );\n      opacity: calc(1 - var(--ld-circular-progress-has-overflow));\n    }\n    &:last-of-type {\n      stroke: var(--ld-circular-progress-bar-col-overflow);\n      stroke-dashoffset: max(\n        calc(-100 / var(--ld-circular-progress-pi)),\n        min(\n          0,\n          calc(\n            (\n                -100 + (var(--ld-circular-progress-calc-relative-progress) - 1) *\n                  100 + 1\n              ) / var(--ld-circular-progress-pi)\n          )\n        )\n      );\n      opacity: var(--ld-circular-progress-has-overflow);\n    }\n  }\n}\n","import { Component, h, Host, Prop } from '@stencil/core'\nimport { getClassNames } from '../../utils/getClassNames'\n\n/**\n * @virtualProp ref - reference to component\n * @virtualProp {string | number} key - for tracking the node's identity when working with lists\n */\n@Component({\n  tag: 'ld-circular-progress',\n  styleUrl: 'ld-circular-progress.css',\n  shadow: true,\n})\nexport class LdCircularProgress {\n  /**\n   * Defines the string value or identifies the element (or elements)\n   * that label the progressbar element providing an accessible name.\n   */\n  @Prop({ reflect: true }) ariaLabeledby?: string\n\n  /**\n   * Set to a decimal value representing the maximum value, and greater\n   * than aria-valuemin. If not present, the default value is 100.\n   */\n  @Prop({ reflect: true }) ariaValuemax? = 100\n\n  /**\n   * Set to a decimal value representing the minimum value, and less\n   * than aria-valuemax. If not present, the default value is 0.\n   */\n  @Prop({ reflect: true }) ariaValuemin? = 0\n\n  /**\n   * Only present and required if the value is not indeterminate.\n   * Set to a decimal value between 0, or valuemin if present,\n   * and aria-valuemax indicating the current value of the progress bar.\n   */\n  @Prop({ reflect: true }) ariaValuenow?: number\n\n  /**\n   * Assistive technologies often present the value of aria-valuenow\n   * as a percentage. If this would not be accurate use this property\n   * to make the progress bar value understandable.\n   */\n  @Prop({ reflect: true }) ariaValuetext?: string\n\n  // `onBrandColor` is not possible: Stencil expects `on*` props to be event handlers.\n  /**\n   * Styles the progress bar in a way that it looks good on the\n   * primary color of the current theme.\n   */\n  @Prop() brandColor?: boolean\n\n  render() {\n    const cl = getClassNames([\n      'ld-circular-progress',\n      this.brandColor && 'ld-circular-progress--brand-color',\n    ])\n\n    return (\n      <Host\n        class={cl}\n        role=\"progressbar\"\n        style={{\n          ...(this.ariaValuemax !== undefined && {\n            '--ld-circular-progress-valuemax': this.ariaValuemax + '',\n          }),\n          ...(this.ariaValuemin !== undefined && {\n            '--ld-circular-progress-valuemin': this.ariaValuemin + '',\n          }),\n          ...(this.ariaValuenow !== undefined && {\n            '--ld-circular-progress-valuenow': this.ariaValuenow + '',\n          }),\n        }}\n      >\n        <svg class=\"ld-circular-progress__stroke\" viewBox=\"0 0 10 10\">\n          <circle cx=\"5\" cy=\"5\" r=\"5\" />\n          <circle cx=\"5\" cy=\"5\" r=\"5\" />\n        </svg>\n        <slot></slot>\n      </Host>\n    )\n  }\n}\n"],"mappings":"iFAAA,MAAMA,EAAwB,q1I,MCYjBC,EAAkB,M,wEAWY,I,kBAMA,E,mFAuBzCC,SACE,MAAMC,EAAKC,EAAc,CACvB,uBACAC,KAAKC,YAAc,sCAGrB,OACEC,EAACC,EAAI,CACHC,MAAON,EACPO,KAAK,cACLC,MAAKC,OAAAC,OAAAD,OAAAC,OAAAD,OAAAC,OAAA,GACCR,KAAKS,eAAiBC,WAAa,CACrC,kCAAmCV,KAAKS,aAAe,KAErDT,KAAKW,eAAiBD,WAAa,CACrC,kCAAmCV,KAAKW,aAAe,KAErDX,KAAKY,eAAiBF,WAAa,CACrC,kCAAmCV,KAAKY,aAAe,MAI3DV,EAAA,OAAKE,MAAM,+BAA+BS,QAAQ,aAChDX,EAAA,UAAQY,GAAG,IAAIC,GAAG,IAAIC,EAAE,MACxBd,EAAA,UAAQY,GAAG,IAAIC,GAAG,IAAIC,EAAE,OAE1Bd,EAAA,a"}