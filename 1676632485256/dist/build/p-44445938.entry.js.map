{"version":3,"names":["ldProgressCss","LdProgress","render","cl","getClassNames","this","ariaValuenow","undefined","brandColor","pending","steps","h","Host","class","role","style","Object","assign","ariaValuemax","ariaValuemin"],"sources":["../src/liquid/components/ld-progress/ld-progress.css?tag=ld-progress&encapsulation=shadow","../src/liquid/components/ld-progress/ld-progress.tsx"],"sourcesContent":[":host,\n.ld-progress {\n  --ld-progress-height: var(--ld-sp-8);\n  --ld-progress-steps-dot-width: var(--ld-progress-height);\n  --ld-progress-valuemin: 0;\n  --ld-progress-valuemax: 100;\n  --ld-progress-valuenow: 0;\n  --ld-progress-transition-duration: 0.2s;\n  --ld-progress-width: 17.5rem;\n\n  /* colors */\n  --ld-progress-bar-col: var(--ld-thm-primary);\n  --ld-progress-bar-col-overflow: var(--ld-thm-error);\n  --ld-progress-bg-col: var(--ld-col-neutral-100);\n  --ld-progress-bg-col-overflow: var(--ld-thm-error);\n  --ld-progress-pending-gap-col: var(--ld-progress-bg-col);\n  --ld-progress-pending-gap-col-overflow: var(--ld-thm-error-focus);\n  --ld-progress-steps-col: var(--ld-col-neutral-200);\n\n  --ld-progress-calc-valuenow: calc(\n    var(--ld-progress-valuenow) - var(--ld-progress-valuemin)\n  );\n  --ld-progress-calc-valuemax: calc(\n    var(--ld-progress-valuemax) - var(--ld-progress-valuemin)\n  );\n  --ld-progress-calc-relative-progress: calc(\n    var(--ld-progress-calc-valuenow) / var(--ld-progress-calc-valuemax)\n  );\n  --ld-progress-has-overflow: clamp(\n    0,\n    calc((var(--ld-progress-calc-relative-progress) - 1) * 99999999999),\n    1\n  );\n\n  border-radius: var(--ld-br-full);\n  box-shadow: inset 0 0 0 calc((1 - var(--ld-progress-has-overflow)) * 99rem)\n      var(--ld-progress-bg-col),\n    inset 0 0 0 calc(var(--ld-progress-has-overflow) * 99rem)\n      var(--ld-col-wht-alpha-high),\n    inset 0 0 0 calc(var(--ld-progress-has-overflow) * 99rem)\n      var(--ld-progress-bg-col-overflow);\n  display: block;\n  height: var(--ld-progress-height);\n  max-width: 100%;\n  overflow: hidden;\n  position: relative;\n  width: var(--ld-progress-width);\n\n  &::before,\n  &::after {\n    content: '';\n    display: block;\n    height: 100%;\n    position: absolute;\n    width: 100%;\n  }\n\n  &::before {\n    background-color: var(--ld-progress-bar-col);\n    opacity: calc(1 - var(--ld-progress-has-overflow));\n    right: 100%;\n    transform: translateX(\n      min(100%, calc(var(--ld-progress-calc-relative-progress) * 100%))\n    );\n    transition: transform var(--ld-progress-transition-duration) ease,\n      opacity var(--ld-progress-transition-duration) linear;\n  }\n\n  &::after {\n    background-color: var(--ld-progress-bar-col-overflow);\n    opacity: calc(var(--ld-progress-has-overflow));\n    transform: translateX(\n      max(-100%, calc((var(--ld-progress-calc-relative-progress) - 1) * -100%))\n    ); /* - 1 substracts the \"valid\" progress value */\n    transition: transform var(--ld-progress-transition-duration) ease;\n    left: 100%;\n  }\n}\n\n:host(.ld-progress--brand-color),\n.ld-progress--brand-color {\n  --ld-progress-bar-col: var(--ld-col-wht);\n  --ld-progress-bar-col-overflow: var(--ld-thm-error);\n  --ld-progress-bg-col: var(--ld-col-wht-alpha-medium);\n  --ld-progress-bg-col-overflow: var(--ld-thm-error);\n  --ld-progress-pending-gap-col: var(--ld-thm-primary-hover);\n  --ld-progress-pending-gap-col-overflow: var(--ld-col-wht);\n  --ld-progress-steps-col: var(--ld-col-wht-alpha-medium);\n\n  box-shadow: inset 0 0 0 calc((1 - var(--ld-progress-has-overflow)) * 99rem)\n      var(--ld-progress-bg-col),\n    inset 0 0 0 calc(var(--ld-progress-has-overflow) * 99rem)\n      var(--ld-col-wht-alpha-medium),\n    inset 0 calc(var(--ld-progress-has-overflow) * 505rem) 500rem -500rem var(--ld-progress-bg-col-overflow);\n}\n\n:host(.ld-progress--steps),\n.ld-progress--steps {\n  --ld-progress-step-gradient: var(--ld-progress-steps-col) 0%,\n    var(--ld-progress-steps-col) calc(var(--ld-progress-steps-dot-width) / 2),\n    transparent calc(var(--ld-progress-steps-dot-width) / 2);\n  background-image: radial-gradient(\n      circle at left,\n      var(--ld-progress-step-gradient)\n    ),\n    radial-gradient(circle at right, var(--ld-progress-step-gradient));\n  background-blend-mode: multiply; /* removes gap in steps dot */\n  background-size: calc(\n      /* the 1px is a Safari HACK */\n        (100% - var(--ld-progress-steps-dot-width) - 1px) /\n        var(--ld-progress-calc-valuemax)\n    )\n    100%;\n  background-repeat: repeat-x;\n  background-position: calc(var(--ld-progress-steps-dot-width) / 2) center;\n  box-shadow: inset 0 0 0 calc(var(--ld-progress-has-overflow) * 99rem)\n      var(--ld-col-wht-alpha-lowest),\n    inset 0 498rem calc(var(--ld-progress-has-overflow) * 500rem) -500rem var(--ld-progress-bg-col-overflow);\n\n  &::before,\n  &::after {\n    border-radius: var(--ld-br-full);\n  }\n\n  &::before {\n    transform: translateX(\n      min(\n        100%,\n        calc(\n          var(--ld-progress-calc-relative-progress) *\n            (100% - var(--ld-progress-steps-dot-width)) +\n            var(--ld-progress-steps-dot-width)\n        )\n      )\n    );\n  }\n\n  &::after {\n    transform: translateX(\n      max(\n        -100%,\n        calc(\n          (\n              (var(--ld-progress-calc-relative-progress) - 1) *\n                (100% - var(--ld-progress-steps-dot-width)) +\n                /* the 1px is a Safari HACK */\n                var(--ld-progress-steps-dot-width) + 1px\n            ) * -1\n        )\n      )\n    );\n  }\n}\n\n:host(.ld-progress--steps.ld-progress--brand-color),\n.ld-progress--steps.ld-progress--brand-color {\n  box-shadow: inset 0 0 0 calc(var(--ld-progress-has-overflow) * 99rem)\n      var(--ld-col-wht-alpha-low),\n    inset 0 500rem calc(var(--ld-progress-has-overflow) * 500rem) -500rem var(--ld-progress-bg-col-overflow);\n}\n\n:host(.ld-progress.ld-progress--indeterminate),\n.ld-progress.ld-progress--indeterminate {\n  &::before {\n    transform: translateX(100%);\n  }\n}\n\n@keyframes ld-progress-animation-pending {\n  from {\n    background-position-x: calc(-1.5rem + 1px);\n  }\n  to {\n    background-position-x: 0;\n  }\n}\n:host(.ld-progress.ld-progress--pending),\n.ld-progress.ld-progress--pending {\n  &::before,\n  &::after {\n    background-size: 200% 100%;\n    animation-duration: 0.5s;\n    animation-timing-function: linear;\n    animation-iteration-count: infinite;\n\n    @media (prefers-reduced-motion: no-preference) {\n      animation-name: ld-progress-animation-pending;\n    }\n  }\n\n  &::before {\n    background-image: repeating-linear-gradient(\n      -45deg,\n      var(--ld-progress-pending-gap-col),\n      var(--ld-progress-pending-gap-col) 0.5rem,\n      var(--ld-progress-bar-col) 0.5rem,\n      var(--ld-progress-bar-col) 1rem\n    );\n  }\n\n  &::after {\n    background-image: repeating-linear-gradient(\n      45deg,\n      var(--ld-progress-pending-gap-col-overflow),\n      var(--ld-progress-pending-gap-col-overflow) 0.5rem,\n      var(--ld-progress-bar-col-overflow) 0.5rem,\n      var(--ld-progress-bar-col-overflow) 1rem\n    );\n    animation-direction: reverse;\n  }\n}\n","import { Component, h, Host, Prop } from '@stencil/core'\nimport { getClassNames } from '../../utils/getClassNames'\n\n/**\n * @virtualProp ref - reference to component\n * @virtualProp {string | number} key - for tracking the node's identity when working with lists\n */\n@Component({\n  tag: 'ld-progress',\n  styleUrl: 'ld-progress.css',\n  shadow: true,\n})\nexport class LdProgress {\n  /**\n   * Defines the string value or identifies the element (or elements)\n   * that label the progressbar element providing an accessible name.\n   */\n  @Prop({ reflect: true }) ariaLabeledby?: string\n\n  /**\n   * Set to a decimal value representing the maximum value, and greater\n   * than aria-valuemin. If not present, the default value is 100.\n   */\n  @Prop({ reflect: true }) ariaValuemax = 100\n\n  /**\n   * Set to a decimal value representing the minimum value, and less\n   * than aria-valuemax. If not present, the default value is 0.\n   */\n  @Prop({ reflect: true }) ariaValuemin = 0\n\n  /**\n   * Only present and required if the value is not indeterminate.\n   * Set to a decimal value between 0, or valuemin if present,\n   * and aria-valuemax indicating the current value of the progress bar.\n   */\n  @Prop({ reflect: true }) ariaValuenow?: number\n\n  /**\n   * Assistive technologies often present the value of aria-valuenow\n   * as a percentage. If this would not be accurate use this property\n   * to make the progress bar value understandable.\n   */\n  @Prop({ reflect: true }) ariaValuetext?: string\n\n  // `onBrandColor` is not possible: Stencil expects `on*` props to be event handlers.\n  /**\n   * Styles the progress bar in a way that it looks good on the\n   * primary color of the current theme.\n   */\n  @Prop() brandColor?: boolean\n\n  /** Used to show indeterminate or pending progress state. */\n  @Prop() pending?: boolean\n\n  /** Devides progress bar in multiple progress steps. */\n  @Prop() steps?: boolean\n\n  render() {\n    const cl = getClassNames([\n      'ld-progress',\n      this.ariaValuenow === undefined && 'ld-progress--indeterminate',\n      this.brandColor && 'ld-progress--brand-color',\n      this.pending && 'ld-progress--pending',\n      this.steps && 'ld-progress--steps',\n    ])\n\n    return (\n      <Host\n        class={cl}\n        role=\"progressbar\"\n        style={{\n          ...(this.ariaValuemax !== undefined && {\n            '--ld-progress-valuemax': this.ariaValuemax + '',\n          }),\n          ...(this.ariaValuemin !== undefined && {\n            '--ld-progress-valuemin': this.ariaValuemin + '',\n          }),\n          ...(this.ariaValuenow !== undefined && {\n            '--ld-progress-valuenow': this.ariaValuenow + '',\n          }),\n        }}\n      ></Host>\n    )\n  }\n}\n"],"mappings":"iFAAA,MAAMA,EAAgB,s7O,MCYTC,EAAU,M,wEAWmB,I,kBAMA,E,+HA6BxCC,SACE,MAAMC,EAAKC,EAAc,CACvB,cACAC,KAAKC,eAAiBC,WAAa,6BACnCF,KAAKG,YAAc,2BACnBH,KAAKI,SAAW,uBAChBJ,KAAKK,OAAS,uBAGhB,OACEC,EAACC,EAAI,CACHC,MAAOV,EACPW,KAAK,cACLC,MAAKC,OAAAC,OAAAD,OAAAC,OAAAD,OAAAC,OAAA,GACCZ,KAAKa,eAAiBX,WAAa,CACrC,yBAA0BF,KAAKa,aAAe,KAE5Cb,KAAKc,eAAiBZ,WAAa,CACrC,yBAA0BF,KAAKc,aAAe,KAE5Cd,KAAKC,eAAiBC,WAAa,CACrC,yBAA0BF,KAAKC,aAAe,M"}