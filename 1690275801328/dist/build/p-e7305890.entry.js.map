{"version":3,"names":["global","factory","module","exports","this","assign","target","i","arguments","length","source","key","defaultConverter","read","value","slice","replace","decodeURIComponent","write","encodeURIComponent","init","converter","defaultAttributes","set","name","attributes","document","expires","Date","now","toUTCString","escape","stringifiedAttributes","attributeName","split","cookie","get","cookies","jar","parts","join","found","e","Object","create","remove","withAttributes","withConverter","freeze","api","path","ldCookieConsentShadowCss","LdCookieConsent","config","backdropBlur","buttonAcceptAll","buttonAcceptCookies","buttonAcceptNone","buttonAcceptSelected","buttonAcknowledge","buttonDismiss","buttonPreferences","disclaimerAlignement","dismissable","localStorageKey","mode","privacyStatementURL","undefined","rejectable","revision","scriptSelector","showOnLoad","showOnLoadDelay","Set","getAcceptedAndRejectedCategories","acceptedCategories","preselectedCategories","isConsentGivenForCurrentRevision","savedConsent","rejectedCategories","allCategories","filter","category","has","isCategoryAccepted","cookieCategory","showDisclaimer","delay","cb","isDisclaimerVisible","_a","disclaimerRef","focus","ldCookieConsentDisclaimerShow","emit","setTimeout","hideDisclaimerAndPreferences","modalRef","close","showPreferences","showModal","ldCookieConsentPreferencesShow","autoclearCookies","allCookieNames","keys","Cookies","categories","autoclear","toggle","flatMap","forEach","domain","includes","ldCookieConsentAutoclearCookies","saveConsent","acceptType","map","_b","disabled","checked","selectedCategories","consentDate","localStorage","setItem","JSON","stringify","toISOString","ldCookieConsentSave","loadScripts","scripts","Array","from","querySelectorAll","script","getAttribute","loadScript","removeAttribute","freshScript","createElement","textContent","innerHTML","attr","attrNodeName","nodeName","setAttribute","onDone","nextScript","shift","ldCookieConsentActivateScripts","parentNode","replaceChild","hasAttribute","onload","getInitialM","h","class","renderDisclaimer","getClassNames","onTransitionEnd","part","ref","role","tabIndex","tag","variant","onClick","ldCookieConsentDismiss","id","href","size","renderPreferences","slot","detached","rounded","single","renderCategory","bind","title","details","description","cookieTable","headers","th","rows","tr","td","ev","stopImmediatePropagation","onLdchange","delete","add","componentWillLoad","parsedSettings","settings","parse","savedParsedConsent","getItem","_c","ldCookieSavedConsentLoad","render","Host"],"sources":["../node_modules/js-cookie/dist/js.cookie.js","../src/liquid/components/ld-cookie-consent/ld-cookie-consent.shadow.css?tag=ld-cookie-consent&encapsulation=shadow","../src/liquid/components/ld-cookie-consent/ld-cookie-consent.tsx"],"sourcesContent":["/*! js-cookie v3.0.5 | MIT */\n;\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, (function () {\n    var current = global.Cookies;\n    var exports = global.Cookies = factory();\n    exports.noConflict = function () { global.Cookies = current; return exports; };\n  })());\n})(this, (function () { 'use strict';\n\n  /* eslint-disable no-var */\n  function assign (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        target[key] = source[key];\n      }\n    }\n    return target\n  }\n  /* eslint-enable no-var */\n\n  /* eslint-disable no-var */\n  var defaultConverter = {\n    read: function (value) {\n      if (value[0] === '\"') {\n        value = value.slice(1, -1);\n      }\n      return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n    },\n    write: function (value) {\n      return encodeURIComponent(value).replace(\n        /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n        decodeURIComponent\n      )\n    }\n  };\n  /* eslint-enable no-var */\n\n  /* eslint-disable no-var */\n\n  function init (converter, defaultAttributes) {\n    function set (name, value, attributes) {\n      if (typeof document === 'undefined') {\n        return\n      }\n\n      attributes = assign({}, defaultAttributes, attributes);\n\n      if (typeof attributes.expires === 'number') {\n        attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n      }\n      if (attributes.expires) {\n        attributes.expires = attributes.expires.toUTCString();\n      }\n\n      name = encodeURIComponent(name)\n        .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n        .replace(/[()]/g, escape);\n\n      var stringifiedAttributes = '';\n      for (var attributeName in attributes) {\n        if (!attributes[attributeName]) {\n          continue\n        }\n\n        stringifiedAttributes += '; ' + attributeName;\n\n        if (attributes[attributeName] === true) {\n          continue\n        }\n\n        // Considers RFC 6265 section 5.2:\n        // ...\n        // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n        //     character:\n        // Consume the characters of the unparsed-attributes up to,\n        // not including, the first %x3B (\";\") character.\n        // ...\n        stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n      }\n\n      return (document.cookie =\n        name + '=' + converter.write(value, name) + stringifiedAttributes)\n    }\n\n    function get (name) {\n      if (typeof document === 'undefined' || (arguments.length && !name)) {\n        return\n      }\n\n      // To prevent the for loop in the first place assign an empty array\n      // in case there are no cookies at all.\n      var cookies = document.cookie ? document.cookie.split('; ') : [];\n      var jar = {};\n      for (var i = 0; i < cookies.length; i++) {\n        var parts = cookies[i].split('=');\n        var value = parts.slice(1).join('=');\n\n        try {\n          var found = decodeURIComponent(parts[0]);\n          jar[found] = converter.read(value, found);\n\n          if (name === found) {\n            break\n          }\n        } catch (e) {}\n      }\n\n      return name ? jar[name] : jar\n    }\n\n    return Object.create(\n      {\n        set,\n        get,\n        remove: function (name, attributes) {\n          set(\n            name,\n            '',\n            assign({}, attributes, {\n              expires: -1\n            })\n          );\n        },\n        withAttributes: function (attributes) {\n          return init(this.converter, assign({}, this.attributes, attributes))\n        },\n        withConverter: function (converter) {\n          return init(assign({}, this.converter, converter), this.attributes)\n        }\n      },\n      {\n        attributes: { value: Object.freeze(defaultAttributes) },\n        converter: { value: Object.freeze(converter) }\n      }\n    )\n  }\n\n  var api = init(defaultConverter, { path: '/' });\n  /* eslint-enable no-var */\n\n  return api;\n\n}));\n",":host {\n  /* Assign liquid global props to component props. */\n  --ld-cookie-consent-br-s: var(--ld-br-s);\n  --ld-cookie-consent-br-m: var(--ld-br-m);\n  --ld-cookie-consent-br-l: var(--ld-br-l);\n  --ld-cookie-consent-col-neutral-010: var(--ld-col-neutral-010);\n  --ld-cookie-consent-col-neutral-050: var(--ld-col-neutral-050);\n  --ld-cookie-consent-col-neutral-100: var(--ld-col-neutral-100);\n  --ld-cookie-consent-col-neutral-600: var(--ld-col-neutral-600);\n  --ld-cookie-consent-col-neutral-900: var(--ld-col-neutral-900);\n  --ld-cookie-consent-col-wht: var(--ld-col-wht);\n  --ld-cookie-consent-font-body: var(--ld-font-body);\n  --ld-cookie-consent-thm-primary: var(--ld-thm-primary);\n  --ld-cookie-consent-thm-primary-active: var(--ld-thm-primary-active);\n  --ld-cookie-consent-thm-primary-alpha-low: var(--ld-thm-primary-alpha-low);\n  --ld-cookie-consent-thm-primary-alpha-lowest: var(\n    --ld-thm-primary-alpha-lowest\n  );\n  --ld-cookie-consent-thm-primary-focus: var(--ld-thm-primary-focus);\n  --ld-cookie-consent-thm-primary-highlight: var(--ld-thm-primary-highlight);\n  --ld-cookie-consent-thm-primary-hover: var(--ld-thm-primary-hover);\n  --ld-cookie-consent-thm-secondary: var(--ld-thm-secondary);\n  --ld-cookie-consent-thm-secondary-active: var(--ld-thm-secondary-active);\n  --ld-cookie-consent-thm-secondary-focus: var(--ld-thm-secondary-focus);\n  --ld-cookie-consent-thm-secondary-highlight: var(\n    --ld-thm-secondary-highlight\n  );\n  --ld-cookie-consent-thm-secondary-hover: var(--ld-thm-secondary-hover);\n\n  /* Component specific props. */\n  --ld-cookie-consent-logo-size: var(--ld-sp-32);\n  --ld-cookie-consent-initial-m-size: 2.5rem;\n  --ld-cookie-consent-max-inline-size: 38rem;\n  --ld-cookie-consent-max-block-size: clamp(20rem, 50vh, 70rem);\n  --ld-cookie-consent-min-inline-size: 18rem;\n\n  /* Custom props below aren't meant for customization. */\n\n  /* Not using 0s here because we rely on the transition end event. */\n  --ld-cookie-consent-transition-duration: var(\n    --ld-transition-duration-instant\n  );\n  --ld-cookie-consent-disclaimer-transition-delay: 0s;\n\n  @media (prefers-reduced-motion: no-preference) {\n    --ld-cookie-consent-transition-duration: var(\n      --ld-transition-duration-normal\n    );\n    --ld-cookie-consent-disclaimer-transition-delay: var(\n      --ld-transition-duration-quick\n    );\n  }\n\n  position: var(--ld-cookie-consent-position, fixed);\n  z-index: var(--ld-cookie-consent-z-index, 2147483647 /* Highest possible */);\n}\n\n.ld-cookie-consent__disclaimer,\n.ld-cookie-consent__preferences {\n  /*\n  Re-assign component props to liquid globals so that\n  they take effect within nested components as well. */\n  --ld-br-s: var(--ld-cookie-consent-br-s);\n  --ld-br-m: var(--ld-cookie-consent-br-m);\n  --ld-br-l: var(--ld-cookie-consent-br-l);\n  --ld-col-neutral-010: var(--ld-cookie-consent-col-neutral-010);\n  --ld-col-neutral-050: var(--ld-cookie-consent-col-neutral-050);\n  --ld-col-neutral-100: var(--ld-cookie-consent-col-neutral-100);\n  --ld-col-neutral-600: var(--ld-cookie-consent-col-neutral-600);\n  --ld-col-neutral-900: var(--ld-cookie-consent-col-neutral-900);\n  --ld-col-wht: var(--ld-cookie-consent-col-wht);\n  --ld-font-body: var(--ld-cookie-consent-font-body);\n  --ld-thm-primary-active: var(--ld-cookie-consent-thm-primary-active);\n  --ld-thm-primary-alpha-low: var(--ld-cookie-consent-thm-primary-alpha-low);\n  --ld-thm-primary-alpha-lowest: var(\n    --ld-cookie-consent-thm-primary-alpha-lowest\n  );\n  --ld-thm-primary-focus: var(--ld-cookie-consent-thm-primary-focus);\n  --ld-thm-primary-highlight: var(--ld-cookie-consent-thm-primary-highlight);\n  --ld-thm-primary-hover: var(--ld-cookie-consent-thm-primary-hover);\n  --ld-thm-primary: var(--ld-cookie-consent-thm-primary);\n  --ld-thm-secondary-active: var(--ld-cookie-consent-thm-secondary-active);\n  --ld-thm-secondary-focus: var(--ld-cookie-consent-thm-secondary-focus);\n  --ld-thm-secondary-highlight: var(\n    --ld-cookie-consent-thm-secondary-highlight\n  );\n  --ld-thm-secondary-hover: var(--ld-cookie-consent-thm-secondary-hover);\n  --ld-thm-secondary: var(--ld-cookie-consent-thm-secondary);\n\n  font-family: var(--ld-font-body);\n\n  ld-accordion-toggle::part(toggle),\n  ld-button::part(button),\n  ld-typo::part(tag) {\n    font-family: inherit;\n  }\n}\n\n@keyframes ld-cookie-consent-in {\n  from {\n    transform: translateY(calc(-100% - var(--ld-sp-24)));\n  }\n\n  to {\n    transform: translateY(calc(-100% - var(--ld-sp-40)));\n  }\n}\n\n@keyframes ld-cookie-consent-out {\n  from {\n    transform: translateY(calc(-100% - var(--ld-sp-40))) scale(1);\n  }\n\n  to {\n    transform: translateY(calc(-100% - var(--ld-sp-40))) scale(0.9);\n  }\n}\n\n@keyframes ld-cookie-consent-out-mobile {\n  from {\n    transform: translateY(calc(-100% - var(--ld-sp-40)));\n  }\n\n  to {\n    transform: translateY(calc(-100% - var(--ld-sp-24)));\n  }\n}\n\n.ld-cookie-consent__disclaimer {\n  animation: ld-cookie-consent-in var(--ld-cookie-consent-transition-duration)\n    ease-out forwards;\n  background-color: var(--ld-col-wht);\n  border-radius: var(--ld-br-l);\n  box-shadow: var(--ld-shadow-active);\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  height: fit-content;\n  left: 0;\n  margin: auto;\n  max-block-size: min(\n    calc(100% - var(--ld-sp-24) - var(--ld-sp-40)),\n    var(--ld-cookie-consent-max-block-size)\n  );\n  max-inline-size: min(\n    calc(100% - var(--ld-sp-32)),\n    var(--ld-cookie-consent-max-inline-size)\n  );\n  min-inline-size: var(--ld-cookie-consent-min-inline-size);\n  outline: none;\n  position: fixed;\n  right: 0;\n  top: 100%;\n  transition: transform var(--ld-cookie-consent-transition-duration) ease-out,\n    opacity var(--ld-cookie-consent-transition-duration) ease-out;\n  width: 100%;\n\n  &:not(.ld-cookie-consent__disclaimer--visible) {\n    animation: ld-cookie-consent-out\n      var(--ld-cookie-consent-transition-duration) ease-in forwards;\n    animation-delay: var(--ld-cookie-consent-disclaimer-transition-delay);\n    opacity: 0;\n    pointer-events: none;\n    transform: translateY(calc(-100% - var(--ld-sp-40)));\n    transition: transform var(--ld-cookie-consent-transition-duration)\n        var(--ld-cookie-consent-disclaimer-transition-delay) ease-in,\n      opacity var(--ld-cookie-consent-transition-duration)\n        var(--ld-cookie-consent-disclaimer-transition-delay) ease-in,\n      visibility 0s\n        calc(\n          var(--ld-cookie-consent-transition-duration) +\n            var(--ld-cookie-consent-disclaimer-transition-delay)\n        )\n        linear;\n    visibility: hidden;\n\n    @media (width <= 32rem) {\n      /*\n      The disclaimer mimics the animation behavior of the ld-modal component. */\n      animation-name: ld-cookie-consent-out-mobile;\n    }\n  }\n\n  &--left {\n    margin-left: var(--ld-sp-16);\n  }\n\n  &--right {\n    margin-right: var(--ld-sp-16);\n  }\n}\n\n.ld-cookie-consent__btn {\n  flex-grow: 1;\n\n  &::part(button) {\n    white-space: nowrap;\n  }\n\n  &--grow {\n    flex-grow: 100;\n  }\n\n  &--acknowledge {\n    flex-grow: 0;\n    min-width: min(10rem, 50%);\n  }\n}\n\n.ld-cookie-consent__disclaimer-buttons {\n  background-color: var(--ld-col-neutral-010);\n  border-bottom-left-radius: var(--ld-br-l);\n  border-bottom-right-radius: var(--ld-br-l);\n  display: flex;\n  flex-wrap: wrap;\n  gap: var(--ld-sp-12);\n  justify-content: flex-end;\n  padding: var(--ld-sp-16);\n}\n\n.ld-cookie-consent__disclaimer-description-container {\n  padding: var(--ld-sp-8) var(--ld-sp-12);\n}\n\n.ld-cookie-consent__disclaimer-header {\n  background-color: var(--ld-col-neutral-010);\n  border-radius: var(--ld-br-l) var(--ld-br-l) 0 0;\n  min-height: 3rem;\n  padding: var(--ld-sp-4) var(--ld-sp-16);\n}\n\n.ld-cookie-consent__disclaimer-scroll-container {\n  overflow: auto;\n  overscroll-behavior: contain;\n  padding: var(--ld-sp-16);\n}\n\n/* custom icon cross */\n.ld-cookie-consent__disclaimer-x {\n  appearance: none;\n  background-color: transparent;\n  border: solid transparent var(--ld-sp-8);\n  cursor: pointer;\n  display: inline-flex;\n  height: 3rem;\n  margin: auto calc(var(--ld-sp-16) * -1) auto auto;\n  overflow: hidden; /* hides focus outlines of pseudo elements */\n  position: relative;\n  width: 3rem;\n\n  &::before,\n  &::after {\n    border-radius: 1rem;\n    background-color: var(--ld-col-neutral-900);\n    content: '';\n    display: block;\n    height: 1.25rem;\n    left: 50%;\n    position: absolute;\n    top: 50%;\n    width: 0.15rem;\n  }\n\n  &::before {\n    transform: translateX(-50%) translateY(-50%) rotate(45deg);\n  }\n\n  &::after {\n    transform: translateX(-50%) translateY(-50%) rotate(-45deg);\n  }\n}\n\n.ld-cookie-consent__initial-m {\n  color: var(--ld-col-vy);\n  width: var(--ld-cookie-consent-initial-m-size);\n  margin: auto -0.1875rem;\n\n  &::part(icon) {\n    height: auto;\n    width: inherit;\n  }\n}\n\n.ld-cookie-consent__preferences {\n  --ld-modal-max-inline-size: var(--ld-cookie-consent-max-inline-size);\n\n  &::part(footer) {\n    display: block;\n  }\n}\n\n.ld-cookie-consent__preferences-accordion-section {\n  --ld-accordion-padding-x: var(--ld-sp-12);\n  position: relative;\n}\n\n.ld-cookie-consent__preferences-accordion-toggle {\n  &::part(toggle) {\n    display: flex;\n  }\n}\n\n.ld-cookie-consent__preferences-category-description {\n  padding: var(--ld-sp-12) var(--ld-accordion-padding-x);\n}\n\n.ld-cookie-consent__preferences-category-table {\n  border-collapse: collapse;\n  font: var(--ld-typo-body-s);\n  font-family: inherit;\n  margin-bottom: var(--ld-sp-12);\n  min-width: 100%;\n}\n\n.ld-cookie-consent__preferences-category-table-container {\n  margin: 0 var(--ld-accordion-padding-x);\n  max-width: 100%;\n  overflow-x: scroll;\n}\n\n.ld-cookie-consent__preferences-category-table-th,\n.ld-cookie-consent__preferences-category-table-td {\n  padding: var(--ld-sp-12) var(--ld-sp-12);\n  text-align: left;\n  vertical-align: top;\n}\n\n.ld-cookie-consent__preferences-category-table-tr {\n  border-bottom: solid var(--ld-col-neutral-100) var(--ld-sp-1);\n\n  &:nth-child(2n) {\n    background-color: var(--ld-thm-primary-alpha-lowest);\n  }\n}\n\n.ld-cookie-consent__preferences-category-title {\n  font: var(--ld-typo-h5);\n  font-family: inherit;\n  display: block;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: calc(100% - 3rem);\n}\n\n.ld-cookie-consent__preferences-category-toggle {\n  position: absolute;\n  right: var(--ld-sp-32);\n  top: var(--ld-sp-4);\n  transform: scale(0.75);\n  z-index: 1;\n}\n\n.ld-cookie-consent__preferences-buttons {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: stretch;\n  gap: var(--ld-sp-12);\n}\n\n.ld-cookie-consent__disclaimer-logo-container,\n.ld-cookie-consent__preferences-logo-container {\n  height: var(--ld-cookie-consent-logo-size);\n  display: flex;\n  align-items: center;\n\n  & > ::slotted(*) {\n    height: 100%;\n    width: auto;\n  }\n}\n\n.ld-cookie-consent__disclaimer-header,\n.ld-cookie-consent__preferences-header {\n  display: grid;\n  grid-template-columns: auto 1fr minmax(min-content, max-content);\n  gap: var(--ld-sp-12);\n  align-items: center;\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n} from '@stencil/core'\nimport Cookies from 'js-cookie'\nimport { LdCookieConsentConfig } from './ld-cookie-consent.types'\nimport { getClassNames } from '../../utils/getClassNames'\n\n/**\n * @slot disclaimer-description - Slot for description in cookie consent disclaimer.\n * @slot disclaimer-logo - Slot for logo in cookie consent disclaimer.\n * @slot disclaimer-title - Slot for title in cookie consent disclaimer.\n * @slot preferences-description - Slot for description in preferences modal layer.\n * @slot preferences-logo - Slot for logo in preferences modal layer.\n * @slot preferences-privacy-policy-notice - Slot for privacy policy notice in preferences modal layer.\n * @slot preferences-title - Slot for title in preferences modal layer.\n * @virtualProp ref - reference to component\n * @virtualProp {string | number} key - for tracking the node's identity when working with lists\n * @part disclaimer - consent disclaimer container\n * @part disclaimer-buttons - consent disclaimer buttons container\n * @part disclaimer-button-accept-all - accept all cookies button in consent disclaimer\n * @part disclaimer-button-accept-none - reject all cookies button in consent disclaimer\n * @part disclaimer-button-dismiss - x button to hide the disclaimer until next page load\n * @part disclaimer-button-preferences - show cookie consent preferences button\n * @part disclaimer-description - consent disclaimer description typography element\n * @part disclaimer-description-container - consent disclaimer description container\n * @part disclaimer-header - disclaimer header containing logo and title\n * @part disclaimer-logo-container - logo container in the disclaimer header\n * @part disclaimer-scroll-container - scrollable container in consent disclaimer\n * @part disclaimer-title - consent disclaimer title typography element\n * @part preferences - the preferences modal layer\n * @part preferences-accordion - cookie category specific accordion\n * @part preferences-accordion-panel - cookie category specific accordion panel\n * @part preferences-accordion-section - cookie category specific accordion section\n * @part preferences-accordion-toggle - cookie category specific accordion toggle\n * @part preferences-button-accept-all - accept all button in preferences\n * @part preferences-button-accept-none - accept none button in preferences\n * @part preferences-button-accept-selected - accept selected button in preferences\n * @part preferences-buttons - preferences buttons container\n * @part preferences-category-description - description of category specific category\n * @part preferences-category-table - cookie table\n * @part preferences-category-table-container - cookie table container\n * @part preferences-category-table-td - cookie table data cell\n * @part preferences-category-table-th - cookie table header cell\n * @part preferences-category-table-tr - cookie table row\n * @part preferences-category-title - title of category specific category\n * @part preferences-category-toggle - toggle of category specific category\n * @part preferences-description - preferences description container\n * @part preferences-header - preferences header containing logo and title\n * @part preferences-logo-container - logo container in the preferences header\n * @part preferences-privacy-policy-notice - privacy notice in modal layer footer\n * @part preferences-privacy-policy-notice-container - container for privacy notice slot\n * @part preferences-title - the preferences title displayed in the modal layer header\n */\n@Component({\n  tag: 'ld-cookie-consent',\n  styleUrl: 'ld-cookie-consent.shadow.css',\n  shadow: true,\n})\nexport class LdCookieConsent {\n  @Element() el: HTMLElement\n\n  /** Component settings object to be merged with the default options (optionally stringified). */\n  @Prop() settings!: Partial<LdCookieConsentConfig> | string\n\n  /** Emitted when the cookie consent disclaimer is shown. */\n  @Event() ldCookieConsentDisclaimerShow: EventEmitter<undefined>\n\n  /** Emitted after loading saved consent from local storage. */\n  @Event() ldCookieSavedConsentLoad: EventEmitter<{\n    acceptedCategories: Set<string>\n    consentDate: Date\n    rejectedCategories: Set<string>\n    revision: number\n  }>\n\n  /** Emitted when the cookie consent preferences modal layer is shown. */\n  @Event() ldCookieConsentPreferencesShow: EventEmitter<undefined>\n\n  /** Emitted after clearing cookies which happens after saving setting. */\n  @Event() ldCookieConsentAutoclearCookies: EventEmitter<undefined>\n\n  /** Emitted after saving cookies preferences to local storage with accepted categories. */\n  @Event() ldCookieConsentSave: EventEmitter<{\n    acceptedCategories: Set<string>\n    consentDate: Date\n    rejectedCategories: Set<string>\n    revision: number\n  }>\n\n  /** Emitted after the cookie consent disclaimer has been dismissed (no consent has been saved in this case). */\n  @Event() ldCookieConsentDismiss: EventEmitter<undefined>\n\n  /** Emitted after activating scripts (only emitted if at least one script has been activated). */\n  @Event() ldCookieConsentActivateScripts: EventEmitter<undefined>\n\n  @State() private isDisclaimerVisible = false\n  @State() private allCategories: Set<string> = new Set()\n  @State() private preselectedCategories: Set<string> = new Set()\n  @State() private savedConsent: {\n    acceptedCategories: Set<string>\n    consentDate: Date\n    rejectedCategories: Set<string>\n    revision: number\n  } | null\n  @State() private selectedCategories: Set<string> = new Set()\n\n  private disclaimerRef: HTMLDivElement\n  private modalRef: HTMLLdModalElement\n  private config: LdCookieConsentConfig = {\n    backdropBlur: true,\n    buttonAcceptAll: 'Accept all',\n    buttonAcceptCookies: 'Accept cookies',\n    buttonAcceptNone: 'Accept only necessary',\n    buttonAcceptSelected: 'Accept selected',\n    buttonAcknowledge: 'Acknowledge',\n    buttonDismiss: 'Dismiss',\n    buttonPreferences: 'Cookie settings',\n    disclaimerAlignement: 'center',\n    dismissable: false,\n    localStorageKey: 'ld-cookie-consent',\n    mode: 'opt-in',\n    privacyStatementURL: undefined,\n    rejectable: false,\n    revision: 0,\n    scriptSelector: 'data-ld-cookie-category',\n    showOnLoad: true,\n    showOnLoadDelay: 1000,\n  }\n\n  /** Returns accepted categories. */\n  @Method()\n  async getAcceptedAndRejectedCategories(): Promise<{\n    acceptedCategories: Set<string>\n    rejectedCategories: Set<string>\n  }> {\n    let acceptedCategories\n    switch (this.config.mode) {\n      case 'notice-only':\n        acceptedCategories = this.preselectedCategories\n        break\n      case 'opt-in':\n        if (this.isConsentGivenForCurrentRevision()) {\n          acceptedCategories = this.savedConsent.acceptedCategories\n        } else {\n          acceptedCategories = new Set()\n        }\n        break\n      case 'opt-out':\n        if (this.isConsentGivenForCurrentRevision()) {\n          acceptedCategories = this.savedConsent.acceptedCategories\n        } else {\n          acceptedCategories = this.preselectedCategories\n        }\n        break\n    }\n    const rejectedCategories = new Set(\n      [...this.allCategories].filter(\n        (category) => !acceptedCategories.has(category)\n      )\n    )\n    return {\n      acceptedCategories,\n      rejectedCategories,\n    }\n  }\n\n  /** Returns true if cookie category has been accepted. */\n  @Method()\n  async isCategoryAccepted(cookieCategory: string): Promise<boolean> {\n    return (\n      await this.getAcceptedAndRejectedCategories()\n    ).acceptedCategories.has(cookieCategory)\n  }\n\n  /** Shows cookie consent disclaimer. */\n  @Method()\n  async showDisclaimer(delay?: number) {\n    const cb = () => {\n      this.isDisclaimerVisible = true\n      this.disclaimerRef?.focus()\n      this.ldCookieConsentDisclaimerShow.emit()\n    }\n    if (delay) {\n      setTimeout(cb, delay)\n    } else {\n      cb()\n    }\n  }\n\n  /** Hides cookie consent disclaimer and preferences. */\n  @Method()\n  async hideDisclaimerAndPreferences() {\n    this.isDisclaimerVisible = false\n    this.modalRef?.close()\n  }\n\n  private showPreferences() {\n    this.modalRef.showModal()\n    this.ldCookieConsentPreferencesShow.emit()\n  }\n\n  /** Tries to delete cookies as per configuration if consent is not yet expressed. */\n  private autoclearCookies(rejectedCategories: Set<string>) {\n    const allCookieNames = Object.keys(Cookies.get())\n    this.config.categories\n      ?.filter(\n        (category) =>\n          category.autoclear && rejectedCategories.has(category.toggle.value)\n      )\n      .flatMap((category) => category.autoclear)\n      .forEach(({ domain, name, path }) => {\n        if (allCookieNames.includes(name)) {\n          Cookies.remove(name, {\n            path,\n            domain,\n          })\n        }\n      })\n    this.ldCookieConsentAutoclearCookies.emit()\n  }\n\n  private saveConsent(acceptType: 'all' | 'none' | 'selected') {\n    let acceptedCategories: Set<string>\n    switch (acceptType) {\n      case 'all':\n        acceptedCategories = new Set(\n          this.config.categories?.map((category) => category.toggle.value)\n        )\n        break\n      case 'none':\n        acceptedCategories = new Set(\n          this.config.categories\n            ?.filter(({ toggle }) => toggle.disabled && toggle.checked)\n            .map(({ toggle }) => toggle.value)\n        )\n        break\n      case 'selected':\n        acceptedCategories = this.selectedCategories\n        break\n    }\n\n    this.selectedCategories = new Set([...acceptedCategories])\n\n    const rejectedCategories = new Set(\n      [...this.allCategories].filter(\n        (category) => !acceptedCategories.has(category)\n      )\n    )\n\n    this.savedConsent = {\n      acceptedCategories,\n      consentDate: new Date(),\n      rejectedCategories,\n      revision: this.config.revision,\n    }\n\n    localStorage.setItem(\n      this.config.localStorageKey,\n      JSON.stringify({\n        acceptedCategories: [...this.savedConsent.acceptedCategories],\n        consentDate: this.savedConsent.consentDate.toISOString(),\n        rejectedCategories: [...this.savedConsent.rejectedCategories],\n        revision: this.savedConsent.revision,\n      })\n    )\n\n    this.ldCookieConsentSave.emit(this.savedConsent)\n\n    this.autoclearCookies(rejectedCategories)\n\n    this.loadScripts()\n  }\n\n  /** Loads scripts based on expressed consent. */\n  private async loadScripts() {\n    const { rejectedCategories } = await this.getAcceptedAndRejectedCategories()\n    const scripts = Array.from(\n      document.querySelectorAll<HTMLScriptElement>(\n        `script[${this.config.scriptSelector}]`\n      )\n    ).filter(\n      (script) =>\n        this.config.mode === 'notice-only' ||\n        !rejectedCategories.has(script.getAttribute(this.config.scriptSelector))\n    )\n    if (!scripts.length) return\n\n    const loadScript = (script: HTMLScriptElement) => {\n      // Reactivate by replacing \"dormant\" script with copied version of itself,\n      // with the correct type and the data script selector attribute removed.\n      script.removeAttribute(this.config.scriptSelector)\n      script.removeAttribute('type')\n      const freshScript = document.createElement('script')\n      freshScript.textContent = script.innerHTML\n      Array.from(script.attributes).forEach((attr) => {\n        const attrNodeName = attr.nodeName\n        freshScript.setAttribute(\n          attrNodeName,\n          script[attrNodeName] || script.getAttribute(attrNodeName)\n        )\n      })\n\n      const onDone = () => {\n        const nextScript = scripts.shift()\n        if (nextScript) {\n          loadScript(nextScript)\n        } else {\n          this.ldCookieConsentActivateScripts.emit()\n        }\n      }\n\n      script.parentNode.replaceChild(freshScript, script)\n      if (script.hasAttribute('async')) {\n        onDone()\n      } else {\n        freshScript.onload = onDone\n      }\n    }\n    loadScript(scripts.shift())\n  }\n\n  private isConsentGivenForCurrentRevision() {\n    // if no consent is given\n    if (!this.savedConsent) return false\n\n    // if revision handling is not enabled in settings\n    if (!this.config.revision) return true\n\n    // if saved consent has the same revision as the one in the settings\n    if (this.savedConsent.revision === this.config.revision) return true\n\n    return false\n  }\n\n  private getInitialM() {\n    return <ld-icon class=\"ld-cookie-consent__initial-m\" name=\"initial-m\" />\n  }\n\n  private renderDisclaimer() {\n    const { config } = this\n    return (\n      <div\n        aria-labelledby=\"ld-cookie-consent-disclaimer-header\"\n        class={getClassNames([\n          'ld-cookie-consent__disclaimer',\n          `ld-cookie-consent__disclaimer--${config.disclaimerAlignement}`,\n          config.rejectable && 'ld-cookie-consent__disclaimer--rejectable',\n          this.isDisclaimerVisible && 'ld-cookie-consent__disclaimer--visible',\n        ])}\n        onTransitionEnd={function () {\n          this.focus()\n        }}\n        part=\"disclaimer\"\n        ref={(ref) => (this.disclaimerRef = ref)}\n        role=\"dialog\"\n        tabIndex={this.isDisclaimerVisible ? -1 : undefined}\n      >\n        <div\n          class=\"ld-cookie-consent__disclaimer-header\"\n          part=\"disclaimer-header\"\n        >\n          <div\n            class=\"ld-cookie-consent__disclaimer-logo-container\"\n            part=\"disclaimer-logo-container\"\n          >\n            <slot name=\"disclaimer-logo\">{this.getInitialM()}</slot>\n          </div>\n\n          <slot name=\"disclaimer-title\">\n            <ld-typo\n              class=\"ld-cookie-consent__disclaimer-title\"\n              part=\"disclaimer-title\"\n              tag=\"p\"\n              variant=\"h5\"\n            >\n              Cookie Disclaimer\n            </ld-typo>\n          </slot>\n\n          {config.dismissable && (\n            <button\n              aria-label={this.config.buttonDismiss}\n              class=\"ld-cookie-consent__disclaimer-x\"\n              onClick={() => {\n                this.hideDisclaimerAndPreferences()\n                this.ldCookieConsentDismiss.emit()\n              }}\n              part=\"disclaimer-button-dismiss\"\n            ></button>\n          )}\n        </div>\n\n        <div\n          class=\"ld-cookie-consent__disclaimer-scroll-container\"\n          id=\"ld-cookie-consent-disclaimer-header\"\n          part=\"disclaimer-scroll-container\"\n        >\n          <div\n            class=\"ld-cookie-consent__disclaimer-description-container\"\n            part=\"disclaimer-description-container\"\n          >\n            <slot name=\"disclaimer-description\">\n              {config.mode === 'notice-only' && (\n                <ld-typo\n                  class=\"ld-cookie-consent__disclaimer-description\"\n                  part=\"disclaimer-description\"\n                >\n                  This website uses cookies so that you have the best user\n                  experience. By continuing your browsing on this website, you\n                  accept the conditions described in our{' '}\n                  <ld-link href={config.privacyStatementURL} target=\"_blank\">\n                    Cookie Policy / Privacy Statement\n                  </ld-link>\n                  . Cookies can be managed using your browser preferences.\n                </ld-typo>\n              )}\n              {config.mode === 'opt-in' && (\n                <ld-typo part=\"disclaimer-description\">\n                  We use cookies so that we can offer you the best possible\n                  website experience. This includes cookies which are necessary\n                  for the operation of the app and the website, as well as other\n                  cookies which are used solely for anonymous statistical\n                  purposes, for more comfortable website settings, or for the\n                  display of personalized content. You are free to decide in the\n                  Cookie Settings which categories you would like to permit,\n                  except for the necessary cookies. Please note that depending\n                  on what you select, the full functionality of the website may\n                  no longer be available. You may review and change your choices\n                  at any time. Further information can be found in our{' '}\n                  <ld-link href={config.privacyStatementURL} target=\"_blank\">\n                    Privacy Statement\n                  </ld-link>\n                  .\n                </ld-typo>\n              )}\n              {config.mode === 'opt-out' && (\n                <ld-typo part=\"disclaimer-description\">\n                  We use cookies in our website to give you the most relevant\n                  experience. By clicking or navigating the site, you are\n                  accepting the use of all our cookies according to our Cookie\n                  Policy / Privacy Statement. You are free to decide in the\n                  Cookie Settings which categories you would like to permit.\n                  Please note that depending on what you select, the full\n                  functionality of the website may no longer be available. You\n                  may review and change your choices at any time. Further\n                  information can be found in our{' '}\n                  <ld-link href={config.privacyStatementURL} target=\"_blank\">\n                    Privacy Statement\n                  </ld-link>\n                  .\n                </ld-typo>\n              )}\n            </slot>\n          </div>\n        </div>\n\n        <div\n          class=\"ld-cookie-consent__disclaimer-buttons\"\n          part=\"disclaimer-buttons\"\n        >\n          {config.mode !== 'notice-only' && (\n            <ld-button\n              class=\"ld-cookie-consent__btn ld-cookie-consent__btn--preferences\"\n              mode=\"secondary\"\n              onClick={() => {\n                this.showPreferences()\n              }}\n              part=\"disclaimer-button-preferences\"\n              size=\"sm\"\n            >\n              {config.buttonPreferences}\n            </ld-button>\n          )}\n          {config.mode !== 'notice-only' && config.rejectable && (\n            <ld-button\n              class=\"ld-cookie-consent__btn\"\n              mode=\"secondary\"\n              onClick={() => {\n                this.hideDisclaimerAndPreferences()\n                this.saveConsent('none')\n              }}\n              part=\"disclaimer-button-accept-none\"\n              size=\"sm\"\n            >\n              {config.buttonAcceptNone}\n            </ld-button>\n          )}\n          <ld-button\n            class={getClassNames([\n              'ld-cookie-consent__btn',\n              config.mode === 'notice-only' &&\n                'ld-cookie-consent__btn--acknowledge',\n              config.mode !== 'notice-only' &&\n                config.rejectable &&\n                'ld-cookie-consent__btn--grow',\n            ])}\n            onClick={() => {\n              this.hideDisclaimerAndPreferences()\n              this.saveConsent('all')\n            }}\n            part=\"disclaimer-button-accept-all\"\n            size=\"sm\"\n          >\n            {config.mode === 'notice-only'\n              ? config.buttonAcknowledge\n              : config.buttonAcceptCookies}\n          </ld-button>\n        </div>\n      </div>\n    )\n  }\n\n  private renderPreferences() {\n    const { config } = this\n    return (\n      <ld-modal\n        blurry-backdrop={config.backdropBlur}\n        class=\"ld-cookie-consent__preferences\"\n        part=\"preferences\"\n        ref={(ref) => (this.modalRef = ref)}\n      >\n        <div\n          slot=\"header\"\n          class=\"ld-cookie-consent__preferences-header\"\n          part=\"preferences-header\"\n        >\n          <div\n            class=\"ld-cookie-consent__preferences-logo-container\"\n            part=\"preferences-logo-container\"\n          >\n            <slot name=\"preferences-logo\">{this.getInitialM()}</slot>\n          </div>\n\n          <slot name=\"preferences-title\">\n            <ld-typo\n              class=\"ld-cookie-consent__preferences-title\"\n              part=\"preferences-title\"\n              tag=\"p\"\n              variant=\"h5\"\n            >\n              Cookie Settings\n            </ld-typo>\n          </slot>\n        </div>\n\n        <div\n          class=\"ld-cookie-consent__preferences-description\"\n          part=\"preferences-description\"\n        >\n          <slot name=\"preferences-description\" />\n        </div>\n\n        <ld-accordion\n          brand-color\n          class=\"ld-cookie-consent__preferences-accordion\"\n          detached\n          part=\"preferences-accordion\"\n          rounded\n          single\n        >\n          {config.categories.map(this.renderCategory.bind(this))}\n        </ld-accordion>\n        <div\n          class=\"ld-cookie-consent__preferences-buttons\"\n          part=\"preferences-buttons\"\n          slot=\"footer\"\n        >\n          {config.buttonAcceptNone && (\n            <ld-button\n              class=\"ld-cookie-consent__btn\"\n              mode=\"secondary\"\n              onClick={() => {\n                this.hideDisclaimerAndPreferences()\n                this.saveConsent('none')\n              }}\n              part=\"preferences-button-accept-none\"\n              size=\"sm\"\n            >\n              {config.buttonAcceptNone}\n            </ld-button>\n          )}\n          {config.buttonAcceptSelected && (\n            <ld-button\n              class=\"ld-cookie-consent__btn\"\n              mode=\"secondary\"\n              onClick={() => {\n                this.hideDisclaimerAndPreferences()\n                this.saveConsent('selected')\n              }}\n              part=\"preferences-button-accept-selected\"\n              size=\"sm\"\n            >\n              {config.buttonAcceptSelected}\n            </ld-button>\n          )}\n          {config.buttonAcceptAll && (\n            <ld-button\n              class=\"ld-cookie-consent__btn ld-cookie-consent__btn--grow\"\n              onClick={() => {\n                this.hideDisclaimerAndPreferences()\n                this.saveConsent('all')\n              }}\n              part=\"preferences-button-accept-all\"\n              size=\"sm\"\n            >\n              {config.buttonAcceptAll}\n            </ld-button>\n          )}\n        </div>\n\n        <div\n          class=\"ld-cookie-consent__preferences-privacy-policy-notice-container\"\n          part=\"preferences-privacy-policy-notice-container\"\n          slot=\"footer\"\n        >\n          <slot name=\"preferences-privacy-policy-notice\">\n            <ld-typo\n              class=\"ld-cookie-consent__preferences-privacy-policy-notice\"\n              part=\"preferences-privacy-policy-notice\"\n              variant=\"body-s\"\n            >\n              Further information can be found in our{' '}\n              <ld-link href={config.privacyStatementURL} target=\"_blank\">\n                Privacy Statement\n              </ld-link>\n              .\n            </ld-typo>\n          </slot>\n        </div>\n      </ld-modal>\n    )\n  }\n\n  private renderCategory(category: LdCookieConsentConfig['categories'][0]) {\n    return (\n      <ld-accordion-section\n        class=\"ld-cookie-consent__preferences-accordion-section\"\n        part=\"preferences-accordion-section\"\n      >\n        <ld-accordion-toggle\n          class=\"ld-cookie-consent__preferences-accordion-toggle\"\n          part=\"preferences-accordion-toggle\"\n        >\n          <span\n            class=\"ld-cookie-consent__preferences-category-title\"\n            part=\"preferences-category-title\"\n          >\n            {category.title}\n          </span>\n        </ld-accordion-toggle>\n        <ld-accordion-panel\n          class=\"ld-cookie-consent__preferences-accordion-panel\"\n          part=\"preferences-accordion-panel\"\n        >\n          <ld-typo\n            class=\"ld-cookie-consent__preferences-category-description\"\n            part=\"preferences-category-description\"\n            variant=\"body-s\"\n          >\n            {category.details.description}\n          </ld-typo>\n          {category.details.cookieTable && (\n            <div\n              class=\"ld-cookie-consent__preferences-category-table-container\"\n              part=\"preferences-category-table-container\"\n            >\n              <table\n                class=\"ld-cookie-consent__preferences-category-table\"\n                part=\"preferences-category-table\"\n              >\n                {category.details.cookieTable.headers && (\n                  <tr\n                    class=\"ld-cookie-consent__preferences-category-table-tr\"\n                    part=\"preferences-category-table-tr\"\n                  >\n                    {category.details.cookieTable.headers.map((th) => (\n                      <th\n                        class=\"ld-cookie-consent__preferences-category-table-th\"\n                        part=\"preferences-category-table-th\"\n                      >\n                        {th}\n                      </th>\n                    ))}\n                  </tr>\n                )}\n                {category.details.cookieTable.rows.map((tr) => (\n                  <tr\n                    class=\"ld-cookie-consent__preferences-category-table-tr\"\n                    part=\"preferences-category-table-tr\"\n                  >\n                    {tr.map((td) => (\n                      <td\n                        class=\"ld-cookie-consent__preferences-category-table-td\"\n                        part=\"preferences-category-table-td\"\n                      >\n                        {td}\n                      </td>\n                    ))}\n                  </tr>\n                ))}\n              </table>\n            </div>\n          )}\n        </ld-accordion-panel>\n        <ld-toggle\n          aria-disabled={category.toggle.disabled ? 'true' : undefined}\n          class=\"ld-cookie-consent__preferences-category-toggle\"\n          checked={this.selectedCategories.has(category.toggle.value)}\n          onClick={(ev) => {\n            ev.stopImmediatePropagation()\n          }}\n          onLdchange={() => {\n            this.selectedCategories.has(category.toggle.value)\n              ? this.selectedCategories.delete(category.toggle.value)\n              : this.selectedCategories.add(category.toggle.value)\n\n            this.selectedCategories = new Set(this.selectedCategories)\n          }}\n          part=\"preferences-category-toggle\"\n          value={category.toggle.value}\n        />\n      </ld-accordion-section>\n    )\n  }\n\n  componentWillLoad() {\n    const parsedSettings: Partial<LdCookieConsentConfig> =\n      typeof this.settings === 'string'\n        ? JSON.parse(this.settings)\n        : this.settings\n\n    this.config = Object.assign(this.config, parsedSettings)\n\n    const savedParsedConsent = JSON.parse(\n      localStorage.getItem(this.config.localStorageKey)\n    )\n    this.savedConsent = savedParsedConsent && {\n      acceptedCategories: new Set(savedParsedConsent.acceptedCategories),\n      consentDate: new Date(savedParsedConsent.consentDate),\n      rejectedCategories: new Set(savedParsedConsent.rejectedCategories),\n      revision: savedParsedConsent.revision,\n    }\n\n    this.allCategories = new Set(\n      this.config.categories?.map((category) => category.toggle.value)\n    )\n    this.preselectedCategories = new Set(\n      this.config.categories\n        ?.filter((category) => {\n          return category.toggle.checked\n        })\n        .map((category) => category.toggle.value)\n    )\n    this.selectedCategories = new Set(\n      ...[this.savedConsent?.acceptedCategories || this.preselectedCategories]\n    )\n\n    if (this.savedConsent) this.ldCookieSavedConsentLoad.emit(this.savedConsent)\n\n    this.loadScripts()\n\n    if (this.config.showOnLoad && !this.isConsentGivenForCurrentRevision()) {\n      this.showDisclaimer(this.config.showOnLoadDelay)\n    }\n  }\n\n  render() {\n    return (\n      <Host class=\"ld-cookie-consent\">\n        {this.renderDisclaimer()}\n\n        {this.config.mode !== 'notice-only' && this.renderPreferences()}\n      </Host>\n    )\n  }\n}\n"],"mappings":"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"}